<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.8 on win32)" generated="20230421 17:35:31.459" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="D:\worpressTeamA\API_testing_A\wordpress\tests">
<suite id="s1-s1" name="Crud" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud">
<suite id="s1-s1-s1" name="Categories" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\categories">
<suite id="s1-s1-s1-s1" name="Test Crud Categories" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\categories\test_crud_categories.robot">
<test id="s1-s1-s1-s1-t1" name="Verify a category is created, updated and deleted successfully" line="8">
<kw name="Create A Category" library="categories">
<var>${id_category}</var>
<arg>New category</arg>
<arg>This is a new category</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:31.755" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756809D0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:31.755" endtime="20230421 17:35:31.755"/>
</kw>
<msg timestamp="20230421 17:35:31.756" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756809D0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:31.754" endtime="20230421 17:35:31.756"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:31.757" level="INFO">${body} = {'name': 'New category', 'description': 'This is a new category'}</msg>
<status status="PASS" starttime="20230421 17:35:31.756" endtime="20230421 17:35:31.757"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:31.757" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:31.757" level="INFO">URL: http://localhost/wp-json/wp/v2/categories/</msg>
<msg timestamp="20230421 17:35:31.869" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:31.757" endtime="20230421 17:35:31.869"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:31.870" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:31.869" endtime="20230421 17:35:31.871"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:31.872" level="INFO">${response_with_format} = {'id': 17, 'count': 0, 'description': 'This is a new category', 'link': 'http://localhost/category/new-category/', 'name': 'New category', 'slug': 'new-category', 'taxonomy': 'category', 'parent': 0, ...</msg>
<status status="PASS" starttime="20230421 17:35:31.871" endtime="20230421 17:35:31.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:31.873" level="INFO">{'id': 17, 'count': 0, 'description': 'This is a new category', 'link': 'http://localhost/category/new-category/', 'name': 'New category', 'slug': 'new-category', 'taxonomy': 'category', 'parent': 0, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/categories/17'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/categories'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/taxonomies/category'}], 'wp:post_type': [{'href': 'http://localhost/wp-json/wp/v2/posts?categories=17'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:31.872" endtime="20230421 17:35:31.873"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_category}</var>
<arg>id</arg>
<arg>${response_with_format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:31.873" level="INFO">${id_category} = 17</msg>
<status status="PASS" starttime="20230421 17:35:31.873" endtime="20230421 17:35:31.873"/>
</kw>
<msg timestamp="20230421 17:35:31.873" level="INFO">${id_category} = 17</msg>
<status status="PASS" starttime="20230421 17:35:31.754" endtime="20230421 17:35:31.874"/>
</kw>
<kw name="Get Category Created With Id" library="categories">
<arg>${id_category}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:31.876" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x000002537566EF40&gt;</msg>
<status status="PASS" starttime="20230421 17:35:31.876" endtime="20230421 17:35:31.876"/>
</kw>
<msg timestamp="20230421 17:35:31.876" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x000002537566EF40&gt;</msg>
<status status="PASS" starttime="20230421 17:35:31.875" endtime="20230421 17:35:31.876"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${id_category}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:31.877" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:31.877" level="INFO">URL: http://localhost/wp-json/wp/v2/categories/17</msg>
<msg timestamp="20230421 17:35:31.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:31.877" endtime="20230421 17:35:31.946"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:31.948" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:31.947" endtime="20230421 17:35:31.948"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:31.949" level="INFO">${response_with_format} = {'id': 17, 'count': 0, 'description': 'This is a new category', 'link': 'http://localhost/category/new-category/', 'name': 'New category', 'slug': 'new-category', 'taxonomy': 'category', 'parent': 0, ...</msg>
<status status="PASS" starttime="20230421 17:35:31.948" endtime="20230421 17:35:31.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:31.949" level="INFO">{'id': 17, 'count': 0, 'description': 'This is a new category', 'link': 'http://localhost/category/new-category/', 'name': 'New category', 'slug': 'new-category', 'taxonomy': 'category', 'parent': 0, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/categories/17'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/categories'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/taxonomies/category'}], 'wp:post_type': [{'href': 'http://localhost/wp-json/wp/v2/posts?categories=17'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:31.949" endtime="20230421 17:35:31.950"/>
</kw>
<status status="PASS" starttime="20230421 17:35:31.874" endtime="20230421 17:35:31.950"/>
</kw>
<kw name="Update Category Description" library="categories">
<arg>${id_category}</arg>
<arg>This is a description updated</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:31.954" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x000002537568A460&gt;</msg>
<status status="PASS" starttime="20230421 17:35:31.954" endtime="20230421 17:35:31.954"/>
</kw>
<msg timestamp="20230421 17:35:31.955" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x000002537568A460&gt;</msg>
<status status="PASS" starttime="20230421 17:35:31.953" endtime="20230421 17:35:31.955"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>description=${description}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:31.956" level="INFO">${body} = {'description': 'This is a description updated'}</msg>
<status status="PASS" starttime="20230421 17:35:31.955" endtime="20230421 17:35:31.956"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${id_category}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:31.958" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:31.958" level="INFO">URL: http://localhost/wp-json/wp/v2/categories/17</msg>
<msg timestamp="20230421 17:35:32.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:31.957" endtime="20230421 17:35:32.046"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:32.047" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:32.046" endtime="20230421 17:35:32.047"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:32.048" level="INFO">${response_with_format} = {'id': 17, 'count': 0, 'description': 'This is a description updated', 'link': 'http://localhost/category/new-category/', 'name': 'New category', 'slug': 'new-category', 'taxonomy': 'category', 'paren...</msg>
<status status="PASS" starttime="20230421 17:35:32.047" endtime="20230421 17:35:32.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:32.049" level="INFO">{'id': 17, 'count': 0, 'description': 'This is a description updated', 'link': 'http://localhost/category/new-category/', 'name': 'New category', 'slug': 'new-category', 'taxonomy': 'category', 'parent': 0, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/categories/17'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/categories'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/taxonomies/category'}], 'wp:post_type': [{'href': 'http://localhost/wp-json/wp/v2/posts?categories=17'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:32.048" endtime="20230421 17:35:32.049"/>
</kw>
<status status="PASS" starttime="20230421 17:35:31.951" endtime="20230421 17:35:32.049"/>
</kw>
<kw name="Delete A Category" library="categories">
<arg>${id_category}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:32.053" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756D36D0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.052" endtime="20230421 17:35:32.053"/>
</kw>
<msg timestamp="20230421 17:35:32.054" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756D36D0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.051" endtime="20230421 17:35:32.055"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:32.056" level="INFO">${params} = {'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:32.055" endtime="20230421 17:35:32.056"/>
</kw>
<kw name="Make Request Delete" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${id_category}</arg>
<arg>params=${params}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a DELETE request to a API endpoint</doc>
<msg timestamp="20230421 17:35:32.057" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:32.057" level="INFO">URL: http://localhost/wp-json/wp/v2/categories/17</msg>
<msg timestamp="20230421 17:35:32.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.056" endtime="20230421 17:35:32.147"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:32.149" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:32.148" endtime="20230421 17:35:32.149"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:32.149" level="INFO">${response_with_format} = {'deleted': True, 'previous': {'id': 17, 'count': 0, 'description': 'This is a description updated', 'link': 'http://localhost/category/new-category/', 'name': 'New category', 'slug': 'new-category', ...</msg>
<status status="PASS" starttime="20230421 17:35:32.149" endtime="20230421 17:35:32.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:32.150" level="INFO">{'deleted': True, 'previous': {'id': 17, 'count': 0, 'description': 'This is a description updated', 'link': 'http://localhost/category/new-category/', 'name': 'New category', 'slug': 'new-category', 'taxonomy': 'category', 'parent': 0, 'meta': []}}</msg>
<status status="PASS" starttime="20230421 17:35:32.150" endtime="20230421 17:35:32.150"/>
</kw>
<status status="PASS" starttime="20230421 17:35:32.050" endtime="20230421 17:35:32.150"/>
</kw>
<status status="PASS" starttime="20230421 17:35:31.751" endtime="20230421 17:35:32.151"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Verify all categories are listed successfully" line="14">
<kw name="Get All Categories" library="categories">
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:32.155" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375680BE0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.155" endtime="20230421 17:35:32.155"/>
</kw>
<msg timestamp="20230421 17:35:32.156" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375680BE0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.155" endtime="20230421 17:35:32.156"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:32.157" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:32.157" level="INFO">URL: http://localhost/wp-json/wp/v2/categories/</msg>
<msg timestamp="20230421 17:35:32.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.156" endtime="20230421 17:35:32.222"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:32.224" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:32.223" endtime="20230421 17:35:32.224"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:32.225" level="INFO">${response_with_format} = [{'id': 3, 'count': 0, 'description': '', 'link': 'http://localhost/category/testing-categories/', 'name': 'testing categories', 'slug': 'testing-categories', 'taxonomy': 'category', 'parent': 0, 'met...</msg>
<status status="PASS" starttime="20230421 17:35:32.224" endtime="20230421 17:35:32.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:32.225" level="INFO">[{'id': 3, 'count': 0, 'description': '', 'link': 'http://localhost/category/testing-categories/', 'name': 'testing categories', 'slug': 'testing-categories', 'taxonomy': 'category', 'parent': 0, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/categories/3'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/categories'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/taxonomies/category'}], 'wp:post_type': [{'href': 'http://localhost/wp-json/wp/v2/posts?categories=3'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}, {'id': 4, 'count': 0, 'description': '', 'link': 'http://localhost/category/uncategorized/testing-categories-uncategorized/', 'name': 'testing categories', 'slug': 'testing-categories-uncategorized', 'taxonomy': 'category', 'parent': 1, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/categories/4'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/categories'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/taxonomies/category'}], 'up': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories/1'}], 'wp:post_type': [{'href': 'http://localhost/wp-json/wp/v2/posts?categories=4'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}, {'id': 7, 'count': 0, 'description': 'Hola', 'link': 'http://localhost/category/testing-categories/testing-categories-testing-categories/', 'name': 'testing categories', 'slug': 'testing-categories-testing-categories', 'taxonomy': 'category', 'parent': 3, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/categories/7'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/categories'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/taxonomies/category'}], 'up': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories/3'}], 'wp:post_type': [{'href': 'http://localhost/wp-json/wp/v2/posts?categories=7'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}, {'id': 8, 'count': 0, 'description': '', 'link': 'http://localhost/category/testing-categories/testing-slug/', 'name': 'testing categories', 'slug': 'testing-slug', 'taxonomy': 'category', 'parent': 3, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/categories/8'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/categories'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/taxonomies/category'}], 'up': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories/3'}], 'wp:post_type': [{'href': 'http://localhost/wp-json/wp/v2/posts?categories=8'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}, {'id': 1, 'count': 162, 'description': '', 'link': 'http://localhost/category/uncategorized/', 'name': 'Uncategorized', 'slug': 'uncategorized', 'taxonomy': 'category', 'parent': 0, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/categories/1'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/categories'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/taxonomies/category'}], 'wp:post_type': [{'href': 'http://localhost/wp-json/wp/v2/posts?categories=1'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}]</msg>
<status status="PASS" starttime="20230421 17:35:32.225" endtime="20230421 17:35:32.225"/>
</kw>
<status status="PASS" starttime="20230421 17:35:32.154" endtime="20230421 17:35:32.226"/>
</kw>
<status status="PASS" starttime="20230421 17:35:32.153" endtime="20230421 17:35:32.226"/>
</test>
<doc>Tests to verify that a category can be created successfully
and the API returns status code 201 whenever a category is
generated.</doc>
<status status="PASS" starttime="20230421 17:35:31.509" endtime="20230421 17:35:32.229"/>
</suite>
<status status="PASS" starttime="20230421 17:35:31.504" endtime="20230421 17:35:32.232"/>
</suite>
<suite id="s1-s1-s2" name="Comments" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\comments">
<suite id="s1-s1-s2-s1" name="Crud Comment" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\comments\crud_comment.robot">
<kw name="Create A Post For A Comment" library="comments" type="SETUP">
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:32.274" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756E4F10&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.273" endtime="20230421 17:35:32.275"/>
</kw>
<msg timestamp="20230421 17:35:32.275" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756E4F10&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.272" endtime="20230421 17:35:32.275"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=Post to test comments</arg>
<arg>status=publish</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:32.276" level="INFO">${body} = {'title': 'Post to test comments', 'status': 'publish'}</msg>
<status status="PASS" starttime="20230421 17:35:32.276" endtime="20230421 17:35:32.276"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>posts</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:32.277" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:32.277" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:32.410" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.276" endtime="20230421 17:35:32.410"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:32.412" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:32.411" endtime="20230421 17:35:32.412"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:32.413" level="INFO">${response_with_format} = {'id': 909, 'date': '2023-04-21T21:35:32', 'date_gmt': '2023-04-21T21:35:32', 'guid': {'rendered': 'http://localhost/2023/04/21/post-to-test-comments/', 'raw': 'http://localhost/2023/04/21/post-to-tes...</msg>
<status status="PASS" starttime="20230421 17:35:32.413" endtime="20230421 17:35:32.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:32.414" level="INFO">{'id': 909, 'date': '2023-04-21T21:35:32', 'date_gmt': '2023-04-21T21:35:32', 'guid': {'rendered': 'http://localhost/2023/04/21/post-to-test-comments/', 'raw': 'http://localhost/2023/04/21/post-to-test-comments/'}, 'modified': '2023-04-21T21:35:32', 'modified_gmt': '2023-04-21T21:35:32', 'password': '', 'slug': 'post-to-test-comments', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/post-to-test-comments/', 'title': {'raw': 'Post to test comments', 'rendered': 'Post to test comments'}, 'content': {'raw': '', 'rendered': '', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'post-to-test-comments', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=909'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/909/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=909'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=909'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=909'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:32.413" endtime="20230421 17:35:32.414"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${response with format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:32.415" level="INFO">${post_id} = 909</msg>
<status status="PASS" starttime="20230421 17:35:32.414" endtime="20230421 17:35:32.415"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:32.415" level="INFO">${post_id} = 909</msg>
<status status="PASS" starttime="20230421 17:35:32.415" endtime="20230421 17:35:32.415"/>
</kw>
<status status="PASS" starttime="20230421 17:35:32.271" endtime="20230421 17:35:32.415"/>
</kw>
<test id="s1-s1-s2-s1-t1" name="Verify that a comment can be created edited and deleted successfully" line="10">
<kw name="Create A New Comment" library="comments">
<var>${comment_id}</var>
<arg>This is the content of the new comment</arg>
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:32.420" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756EA460&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.419" endtime="20230421 17:35:32.420"/>
</kw>
<msg timestamp="20230421 17:35:32.421" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756EA460&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.418" endtime="20230421 17:35:32.421"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>author=1</arg>
<arg>content=${content}</arg>
<arg>post=${post_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:32.424" level="INFO">${body} = {'author': '1', 'content': 'This is the content of the new comment', 'post': 909}</msg>
<status status="PASS" starttime="20230421 17:35:32.422" endtime="20230421 17:35:32.424"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:32.425" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:32.425" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:32.966" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.424" endtime="20230421 17:35:32.966"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:32.967" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:32.967" endtime="20230421 17:35:32.967"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:32.969" level="INFO">${response_with_format} = {'id': 46, 'post': 909, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': '...</msg>
<status status="PASS" starttime="20230421 17:35:32.967" endtime="20230421 17:35:32.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:32.970" level="INFO">{'id': 46, 'post': 909, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:32', 'date_gmt': '2023-04-21T21:35:32', 'content': {'rendered': '&lt;p&gt;This is the content of the new comment&lt;/p&gt;\n', 'raw': 'This is the content of the new comment'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-46', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/46'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/909'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:32.970" endtime="20230421 17:35:32.971"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${comment_id}</var>
<arg>id</arg>
<arg>${response_with_format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:32.971" level="INFO">${comment_id} = 46</msg>
<status status="PASS" starttime="20230421 17:35:32.971" endtime="20230421 17:35:32.971"/>
</kw>
<msg timestamp="20230421 17:35:32.972" level="INFO">${comment_id} = 46</msg>
<status status="PASS" starttime="20230421 17:35:32.417" endtime="20230421 17:35:32.972"/>
</kw>
<kw name="Verify Comment Exists" library="comments">
<arg>${comment_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:32.974" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756EEBB0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.974" endtime="20230421 17:35:32.974"/>
</kw>
<msg timestamp="20230421 17:35:32.975" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756EEBB0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.974" endtime="20230421 17:35:32.975"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${comment_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:32.975" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:32.975" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/46</msg>
<msg timestamp="20230421 17:35:33.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:32.975" endtime="20230421 17:35:33.047"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:33.048" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:33.048" endtime="20230421 17:35:33.048"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:33.049" level="INFO">${response_with_format} = {'id': 46, 'post': 909, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:32', 'date_gmt': '2023-04-21T21:35:32', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:33.048" endtime="20230421 17:35:33.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:33.050" level="INFO">{'id': 46, 'post': 909, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:32', 'date_gmt': '2023-04-21T21:35:32', 'content': {'rendered': '&lt;p&gt;This is the content of the new comment&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-46', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/46'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/909'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:33.050" endtime="20230421 17:35:33.050"/>
</kw>
<status status="PASS" starttime="20230421 17:35:32.973" endtime="20230421 17:35:33.051"/>
</kw>
<kw name="Edit Comment" library="comments">
<arg>This is edited content on a comment</arg>
<arg>${comment_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:33.057" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756EA9A0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.056" endtime="20230421 17:35:33.057"/>
</kw>
<msg timestamp="20230421 17:35:33.057" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756EA9A0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.054" endtime="20230421 17:35:33.057"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:33.058" level="INFO">${body} = {'content': 'This is edited content on a comment'}</msg>
<status status="PASS" starttime="20230421 17:35:33.057" endtime="20230421 17:35:33.058"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${comment_id}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:33.059" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:33.059" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/46</msg>
<msg timestamp="20230421 17:35:33.209" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.058" endtime="20230421 17:35:33.209"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:33.210" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:33.209" endtime="20230421 17:35:33.210"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:33.212" level="INFO">${response_with_format} = {'id': 46, 'post': 909, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': '...</msg>
<status status="PASS" starttime="20230421 17:35:33.210" endtime="20230421 17:35:33.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:33.213" level="INFO">{'id': 46, 'post': 909, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:32', 'date_gmt': '2023-04-21T21:35:32', 'content': {'rendered': '&lt;p&gt;This is edited content on a comment&lt;/p&gt;\n', 'raw': 'This is edited content on a comment'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-46', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/46'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/909'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:33.212" endtime="20230421 17:35:33.213"/>
</kw>
<status status="PASS" starttime="20230421 17:35:33.052" endtime="20230421 17:35:33.214"/>
</kw>
<kw name="Delete Comment" library="comments">
<arg>${comment_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:33.217" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756FCB50&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.216" endtime="20230421 17:35:33.217"/>
</kw>
<msg timestamp="20230421 17:35:33.218" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756FCB50&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.215" endtime="20230421 17:35:33.219"/>
</kw>
<kw name="Make Request Delete" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>comments</arg>
<arg>id=${comment_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a DELETE request to a API endpoint</doc>
<msg timestamp="20230421 17:35:33.220" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:33.220" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/46</msg>
<msg timestamp="20230421 17:35:33.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.219" endtime="20230421 17:35:33.372"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:33.373" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:33.372" endtime="20230421 17:35:33.373"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:33.374" level="INFO">${response_with_format} = {'id': 46, 'post': 909, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': '...</msg>
<status status="PASS" starttime="20230421 17:35:33.373" endtime="20230421 17:35:33.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:33.376" level="INFO">{'id': 46, 'post': 909, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:32', 'date_gmt': '2023-04-21T21:35:32', 'content': {'rendered': '&lt;p&gt;This is edited content on a comment&lt;/p&gt;\n', 'raw': 'This is edited content on a comment'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-46', 'status': 'trash', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/46'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/909'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:33.375" endtime="20230421 17:35:33.376"/>
</kw>
<status status="PASS" starttime="20230421 17:35:33.214" endtime="20230421 17:35:33.376"/>
</kw>
<status status="PASS" starttime="20230421 17:35:32.416" endtime="20230421 17:35:33.377"/>
</test>
<kw name="Deleted Post Created For The Comment" library="comments" type="TEARDOWN">
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:33.382" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756EA280&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.381" endtime="20230421 17:35:33.382"/>
</kw>
<msg timestamp="20230421 17:35:33.383" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756EA280&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.381" endtime="20230421 17:35:33.383"/>
</kw>
<kw name="Make Request Delete" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>posts</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a DELETE request to a API endpoint</doc>
<msg timestamp="20230421 17:35:33.385" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:33.385" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/909</msg>
<msg timestamp="20230421 17:35:33.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.383" endtime="20230421 17:35:33.694"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:33.696" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:33.695" endtime="20230421 17:35:33.696"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:33.697" level="INFO">${response_with_format} = {'id': 909, 'date': '2023-04-21T21:35:32', 'date_gmt': '2023-04-21T21:35:32', 'guid': {'rendered': 'http://localhost/2023/04/21/post-to-test-comments/', 'raw': 'http://localhost/2023/04/21/post-to-tes...</msg>
<status status="PASS" starttime="20230421 17:35:33.696" endtime="20230421 17:35:33.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:33.699" level="INFO">{'id': 909, 'date': '2023-04-21T21:35:32', 'date_gmt': '2023-04-21T21:35:32', 'guid': {'rendered': 'http://localhost/2023/04/21/post-to-test-comments/', 'raw': 'http://localhost/2023/04/21/post-to-test-comments/'}, 'modified': '2023-04-21T21:35:33', 'modified_gmt': '2023-04-21T21:35:33', 'password': '', 'slug': 'post-to-test-comments__trashed-7', 'status': 'trash', 'type': 'post', 'link': 'http://localhost/?p=909', 'title': {'raw': 'Post to test comments', 'rendered': 'Post to test comments'}, 'content': {'raw': '', 'rendered': '', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/?p=909', 'generated_slug': 'post-to-test-comments', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=909'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/909/revisions'}], 'predecessor-version': [{'id': 910, 'href': 'http://localhost/wp-json/wp/v2/posts/909/revisions/910'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=909'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=909'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=909'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/909'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:33.698" endtime="20230421 17:35:33.699"/>
</kw>
<status status="PASS" starttime="20230421 17:35:33.380" endtime="20230421 17:35:33.699"/>
</kw>
<doc>Tests to verify that a comment can be created successfully
and the API returns status code 201 whenever a comment is
generated.</doc>
<status status="PASS" starttime="20230421 17:35:32.242" endtime="20230421 17:35:33.699"/>
</suite>
<status status="PASS" starttime="20230421 17:35:32.235" endtime="20230421 17:35:33.705"/>
</suite>
<suite id="s1-s1-s3" name="Pages" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\pages">
<suite id="s1-s1-s3-s1" name="Pages Crud" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\pages\pages_crud.robot">
<test id="s1-s1-s3-s1-t1" name="Verify Pages Can Be Listed" line="5">
<kw name="List Pages" library="pages">
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:33.751" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253757052E0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.750" endtime="20230421 17:35:33.751"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:33.754" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:33.754" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/</msg>
<msg timestamp="20230421 17:35:33.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.751" endtime="20230421 17:35:33.924"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:33.926" level="INFO">${actual_result} = [{'id': 2, 'date': '2023-04-03T01:33:19', 'date_gmt': '2023-04-03T01:33:19', 'guid': {'rendered': 'http://localhost/?page_id=2'}, 'modified': '2023-04-03T01:33:19', 'modified_gmt': '2023-04-03T01:33:1...</msg>
<status status="PASS" starttime="20230421 17:35:33.925" endtime="20230421 17:35:33.926"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:33.927" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:33.926" endtime="20230421 17:35:33.927"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:33.928" level="INFO">${actual_result} = [{'id': 2, 'date': '2023-04-03T01:33:19', 'date_gmt': '2023-04-03T01:33:19', 'guid': {'rendered': 'http://localhost/?page_id=2'}, 'modified': '2023-04-03T01:33:19', 'modified_gmt': '2023-04-03T01:33:1...</msg>
<status status="PASS" starttime="20230421 17:35:33.927" endtime="20230421 17:35:33.929"/>
</kw>
<status status="PASS" starttime="20230421 17:35:33.749" endtime="20230421 17:35:33.929"/>
</kw>
<status status="PASS" starttime="20230421 17:35:33.748" endtime="20230421 17:35:33.930"/>
</test>
<test id="s1-s1-s3-s1-t2" name="Verify Page Can Be Created" line="8">
<kw name="Create Page With Desired Status" library="pages">
<arg>draft</arg>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:33.935" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253757075B0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.935" endtime="20230421 17:35:33.936"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=new page 1</arg>
<arg>content=it is the new page</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:33.937" level="INFO">${body} = {'title': 'new page 1', 'content': 'it is the new page', 'status': 'draft'}</msg>
<status status="PASS" starttime="20230421 17:35:33.936" endtime="20230421 17:35:33.937"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:33.939" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:33.939" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/</msg>
<msg timestamp="20230421 17:35:34.125" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:33.937" endtime="20230421 17:35:34.125"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:34.127" level="INFO">${expected_result} = {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911', 'raw': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:34.126" endtime="20230421 17:35:34.127"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_page}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:34.128" level="INFO">${id_page} = 911</msg>
<status status="PASS" starttime="20230421 17:35:34.128" endtime="20230421 17:35:34.128"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:34.130" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:34.129" endtime="20230421 17:35:34.130"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:34.132" level="INFO">${expected_result} = {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911', 'raw': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:34.131" endtime="20230421 17:35:34.132"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_page}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:34.133" level="INFO">${id_page} = 911</msg>
<status status="PASS" starttime="20230421 17:35:34.132" endtime="20230421 17:35:34.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${id_page}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:34.134" level="INFO">911</msg>
<status status="PASS" starttime="20230421 17:35:34.133" endtime="20230421 17:35:34.134"/>
</kw>
<status status="PASS" starttime="20230421 17:35:33.934" endtime="20230421 17:35:34.135"/>
</kw>
<kw name="Verify The Page Was Created" library="pages">
<kw name="Verify Page" library="pages">
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:34.138" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253756C07C0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:34.137" endtime="20230421 17:35:34.138"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${id_page}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:34.140" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:34.140" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/911</msg>
<msg timestamp="20230421 17:35:34.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:34.138" endtime="20230421 17:35:34.316"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:34.320" level="INFO">${actual_result} = {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:3...</msg>
<status status="PASS" starttime="20230421 17:35:34.317" endtime="20230421 17:35:34.320"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:34.322" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:34.321" endtime="20230421 17:35:34.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:34.323" level="INFO">{'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911', 'raw': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:35:34', 'password': '', 'slug': '', 'status': 'draft', 'type': 'page', 'link': 'http://localhost/?page_id=911', 'title': {'raw': 'new page 1', 'rendered': 'new page 1'}, 'content': {'raw': 'it is the new page', 'rendered': '&lt;p&gt;it is the new page&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;it is the new page&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], 'permalink_template': 'http://localhost/%pagename%/', 'generated_slug': 'new-page-1', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=911'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=911'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:34.322" endtime="20230421 17:35:34.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:34.324" level="INFO">{'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:35:34', 'slug': '', 'status': 'draft', 'type': 'page', 'link': 'http://localhost/?page_id=911', 'title': {'rendered': 'new page 1'}, 'content': {'rendered': '&lt;p&gt;it is the new page&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;it is the new page&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=911'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=911'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:34.323" endtime="20230421 17:35:34.324"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${expected_result}</arg>
<arg>${actual_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:34.326" level="INFO">Actual result: {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911', 'raw': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:35:34', 'password': '', 'slug': '', 'status': 'draft', 'type': 'page', 'link': 'http://localhost/?page_id=911', 'title': {'raw': 'new page 1', 'rendered': 'new page 1'}, 'content': {'raw': 'it is the new page', 'rendered': '&lt;p&gt;it is the new page&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;it is the new page&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], 'permalink_template': 'http://localhost/%pagename%/', 'generated_slug': 'new-page-1', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=911'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=911'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:34.326" level="INFO">Expected result: {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:35:34', 'slug': '', 'status': 'draft', 'type': 'page', 'link': 'http://localhost/?page_id=911', 'title': {'rendered': 'new page 1'}, 'content': {'rendered': '&lt;p&gt;it is the new page&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;it is the new page&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=911'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=911'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:34.327" level="INFO">Are ignored: ['permalink_template', '_links', 'generated_slug', 'password', ('title', 'raw'), ('content', 'raw'), ('content', 'block_version'), ('excerpt', 'raw'), ('guid', 'raw')]</msg>
<status status="PASS" starttime="20230421 17:35:34.325" endtime="20230421 17:35:34.328"/>
</kw>
<status status="PASS" starttime="20230421 17:35:34.136" endtime="20230421 17:35:34.328"/>
</kw>
<status status="PASS" starttime="20230421 17:35:34.135" endtime="20230421 17:35:34.328"/>
</kw>
<status status="PASS" starttime="20230421 17:35:33.933" endtime="20230421 17:35:34.333"/>
</test>
<test id="s1-s1-s3-s1-t3" name="Verify Page Can Be Updated" line="12">
<kw name="Update Page To Other Status" library="pages">
<arg>publish</arg>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:34.384" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x000002537570E190&gt;</msg>
<status status="PASS" starttime="20230421 17:35:34.383" endtime="20230421 17:35:34.384"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=title changed</arg>
<arg>content=content changed</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:34.386" level="INFO">${body} = {'title': 'title changed', 'content': 'content changed', 'status': 'publish'}</msg>
<status status="PASS" starttime="20230421 17:35:34.384" endtime="20230421 17:35:34.386"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${id_page}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:34.389" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:34.389" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/911</msg>
<msg timestamp="20230421 17:35:34.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:34.387" endtime="20230421 17:35:34.718"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:34.721" level="INFO">${expected_result} = {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911', 'raw': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:34.719" endtime="20230421 17:35:34.721"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:34.722" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:34.721" endtime="20230421 17:35:34.722"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:34.723" level="INFO">${expected_result} = {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911', 'raw': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:34.722" endtime="20230421 17:35:34.724"/>
</kw>
<status status="PASS" starttime="20230421 17:35:34.381" endtime="20230421 17:35:34.724"/>
</kw>
<kw name="Verify The Page Changes The Status" library="pages">
<kw name="Verify Page" library="pages">
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:34.726" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253757058E0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:34.726" endtime="20230421 17:35:34.727"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${id_page}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:34.727" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:34.727" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/911</msg>
<msg timestamp="20230421 17:35:34.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:34.727" endtime="20230421 17:35:34.804"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:34.806" level="INFO">${actual_result} = {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:3...</msg>
<status status="PASS" starttime="20230421 17:35:34.805" endtime="20230421 17:35:34.807"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:34.808" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:34.807" endtime="20230421 17:35:34.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:34.808" level="INFO">{'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911', 'raw': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:35:34', 'password': '', 'slug': 'title-changed', 'status': 'publish', 'type': 'page', 'link': 'http://localhost/title-changed/', 'title': {'raw': 'title changed', 'rendered': 'title changed'}, 'content': {'raw': 'content changed', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], 'permalink_template': 'http://localhost/%pagename%/', 'generated_slug': 'title-changed', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=911'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions'}], 'predecessor-version': [{'id': 912, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions/912'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=911'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:34.808" endtime="20230421 17:35:34.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:34.809" level="INFO">{'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:35:34', 'slug': 'title-changed', 'status': 'publish', 'type': 'page', 'link': 'http://localhost/title-changed/', 'title': {'rendered': 'title changed'}, 'content': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=911'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions'}], 'predecessor-version': [{'id': 912, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions/912'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=911'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:34.809" endtime="20230421 17:35:34.809"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${expected_result}</arg>
<arg>${actual_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:34.810" level="INFO">Actual result: {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911', 'raw': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:35:34', 'password': '', 'slug': 'title-changed', 'status': 'publish', 'type': 'page', 'link': 'http://localhost/title-changed/', 'title': {'raw': 'title changed', 'rendered': 'title changed'}, 'content': {'raw': 'content changed', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], 'permalink_template': 'http://localhost/%pagename%/', 'generated_slug': 'title-changed', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=911'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions'}], 'predecessor-version': [{'id': 912, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions/912'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=911'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:34.810" level="INFO">Expected result: {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:35:34', 'slug': 'title-changed', 'status': 'publish', 'type': 'page', 'link': 'http://localhost/title-changed/', 'title': {'rendered': 'title changed'}, 'content': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=911'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions'}], 'predecessor-version': [{'id': 912, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions/912'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=911'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:34.810" level="INFO">Are ignored: ['permalink_template', '_links', 'generated_slug', 'password', ('title', 'raw'), ('content', 'raw'), ('content', 'block_version'), ('excerpt', 'raw'), ('guid', 'raw')]</msg>
<status status="PASS" starttime="20230421 17:35:34.809" endtime="20230421 17:35:34.810"/>
</kw>
<status status="PASS" starttime="20230421 17:35:34.726" endtime="20230421 17:35:34.810"/>
</kw>
<status status="PASS" starttime="20230421 17:35:34.725" endtime="20230421 17:35:34.810"/>
</kw>
<status status="PASS" starttime="20230421 17:35:34.345" endtime="20230421 17:35:34.811"/>
</test>
<test id="s1-s1-s3-s1-t4" name="Verify Page Can Be Deleted" line="16">
<kw name="Delete Page" library="pages">
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:34.814" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x000002537571E190&gt;</msg>
<status status="PASS" starttime="20230421 17:35:34.813" endtime="20230421 17:35:34.814"/>
</kw>
<kw name="Make Request Delete" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${id_page}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a DELETE request to a API endpoint</doc>
<msg timestamp="20230421 17:35:34.814" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:34.814" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/911</msg>
<msg timestamp="20230421 17:35:34.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:34.814" endtime="20230421 17:35:34.983"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:34.985" level="INFO">${response_with_format} = {'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911', 'raw': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:34.984" endtime="20230421 17:35:34.985"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:34.987" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:34.986" endtime="20230421 17:35:34.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:34.988" level="INFO">{'id': 911, 'date': '2023-04-21T21:35:34', 'date_gmt': '2023-04-21T21:35:34', 'guid': {'rendered': 'http://localhost/?page_id=911', 'raw': 'http://localhost/?page_id=911'}, 'modified': '2023-04-21T21:35:34', 'modified_gmt': '2023-04-21T21:35:34', 'password': '', 'slug': 'title-changed__trashed-7', 'status': 'trash', 'type': 'page', 'link': 'http://localhost/?page_id=911', 'title': {'raw': 'title changed', 'rendered': 'title changed'}, 'content': {'raw': 'content changed', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], 'permalink_template': 'http://localhost/%pagename%/', 'generated_slug': 'title-changed', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=911'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions'}], 'predecessor-version': [{'id': 912, 'href': 'http://localhost/wp-json/wp/v2/pages/911/revisions/912'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=911'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/pages/911'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:34.988" endtime="20230421 17:35:34.989"/>
</kw>
<status status="PASS" starttime="20230421 17:35:34.813" endtime="20230421 17:35:34.989"/>
</kw>
<kw name="Verify Deleted Page" library="pages">
<kw name="List Pages" library="pages">
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:34.995" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x000002537572B5E0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:34.994" endtime="20230421 17:35:34.995"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:34.997" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:34.997" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/</msg>
<msg timestamp="20230421 17:35:35.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:34.995" endtime="20230421 17:35:35.144"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:35.146" level="INFO">${actual_result} = [{'id': 2, 'date': '2023-04-03T01:33:19', 'date_gmt': '2023-04-03T01:33:19', 'guid': {'rendered': 'http://localhost/?page_id=2'}, 'modified': '2023-04-03T01:33:19', 'modified_gmt': '2023-04-03T01:33:1...</msg>
<status status="PASS" starttime="20230421 17:35:35.145" endtime="20230421 17:35:35.146"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:35.147" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:35.147" endtime="20230421 17:35:35.148"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:35.149" level="INFO">${actual_result} = [{'id': 2, 'date': '2023-04-03T01:33:19', 'date_gmt': '2023-04-03T01:33:19', 'guid': {'rendered': 'http://localhost/?page_id=2'}, 'modified': '2023-04-03T01:33:19', 'modified_gmt': '2023-04-03T01:33:1...</msg>
<status status="PASS" starttime="20230421 17:35:35.148" endtime="20230421 17:35:35.149"/>
</kw>
<status status="PASS" starttime="20230421 17:35:34.994" endtime="20230421 17:35:35.150"/>
</kw>
<kw name="Verify Not Contain Value" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${id_page}</arg>
<doc>Verify that the actual result does not have a specific value</doc>
<msg timestamp="20230421 17:35:35.151" level="INFO">Actual result: [{'id': 2, 'date': '2023-04-03T01:33:19', 'date_gmt': '2023-04-03T01:33:19', 'guid': {'rendered': 'http://localhost/?page_id=2'}, 'modified': '2023-04-03T01:33:19', 'modified_gmt': '2023-04-03T01:33:19', 'slug': 'sample-page', 'status': 'publish', 'type': 'page', 'link': 'http://localhost/sample-page/', 'title': {'rendered': 'Sample Page'}, 'content': {'rendered': '\n&lt;p&gt;This is an example page. It&amp;#8217;s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:&lt;/p&gt;\n\n\n\n&lt;blockquote class="wp-block-quote"&gt;&lt;p&gt;Hi there! I&amp;#8217;m a bike messenger by day, aspiring actor by night, and this is my website. I live in Los Angeles, have a great dog named Jack, and I like pi&amp;#241;a coladas. (And gettin&amp;#8217; caught in the rain.)&lt;/p&gt;&lt;/blockquote&gt;\n\n\n\n&lt;p&gt;&amp;#8230;or something like this:&lt;/p&gt;\n\n\n\n&lt;blockquote class="wp-block-quote"&gt;&lt;p&gt;The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.&lt;/p&gt;&lt;/blockquote&gt;\n\n\n\n&lt;p&gt;As a new WordPress user, you should go to &lt;a href="http://localhost/wp-admin/"&gt;your dashboard&lt;/a&gt; to delete this page and create new pages for your content. Have fun!&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;This is an example page. It&amp;#8217;s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this: Hi there! I&amp;#8217;m a bike messenger&amp;hellip; &lt;a class="more-link" href="http://localhost/sample-page/"&gt;Continue reading &lt;span class="screen-reader-text"&gt;Sample Page&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'open', 'template': '', 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/2'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=2'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/pages/2/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=2'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}]</msg>
<msg timestamp="20230421 17:35:35.151" level="INFO">The deleted user id: 911</msg>
<status status="PASS" starttime="20230421 17:35:35.150" endtime="20230421 17:35:35.152"/>
</kw>
<status status="PASS" starttime="20230421 17:35:34.993" endtime="20230421 17:35:35.152"/>
</kw>
<status status="PASS" starttime="20230421 17:35:34.812" endtime="20230421 17:35:35.156"/>
</test>
<status status="PASS" starttime="20230421 17:35:33.716" endtime="20230421 17:35:35.160"/>
</suite>
<status status="PASS" starttime="20230421 17:35:33.708" endtime="20230421 17:35:35.164"/>
</suite>
<suite id="s1-s1-s4" name="Posts" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\posts">
<suite id="s1-s1-s4-s1" name="Crud Post Endpoint" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\posts\crud_post_endpoint.robot">
<test id="s1-s1-s4-s1-t1" name="Execute The CRUD For The Post Endpoint" line="14">
<kw name="Create A Post In Wordpress And Verify Status Code 201" library="keywords">
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:35.243" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375743820&gt;</msg>
<status status="PASS" starttime="20230421 17:35:35.243" endtime="20230421 17:35:35.243"/>
</kw>
<msg timestamp="20230421 17:35:35.244" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375743820&gt;</msg>
<status status="PASS" starttime="20230421 17:35:35.242" endtime="20230421 17:35:35.244"/>
</kw>
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:35.244" level="INFO">${title} = zwYJBENHPg</msg>
<status status="PASS" starttime="20230421 17:35:35.244" endtime="20230421 17:35:35.244"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=publish</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:35.245" level="INFO">${body} = {'title': 'zwYJBENHPg', 'status': 'publish'}</msg>
<status status="PASS" starttime="20230421 17:35:35.244" endtime="20230421 17:35:35.245"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:35.246" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:35.246" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:35.445" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:35.245" endtime="20230421 17:35:35.445"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:35.448" level="INFO">${actual_result} = {'id': 913, 'date': '2023-04-21T21:35:35', 'date_gmt': '2023-04-21T21:35:35', 'guid': {'rendered': 'http://localhost/2023/04/21/zwyjbenhpg/', 'raw': 'http://localhost/2023/04/21/zwyjbenhpg/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:35.446" endtime="20230421 17:35:35.448"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:35.449" level="INFO">${actual_result} = {'id': 913, 'date': '2023-04-21T21:35:35', 'date_gmt': '2023-04-21T21:35:35', 'guid': {'rendered': 'http://localhost/2023/04/21/zwyjbenhpg/', 'raw': 'http://localhost/2023/04/21/zwyjbenhpg/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:35.448" endtime="20230421 17:35:35.449"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:35.450" level="INFO">${post_id} = 913</msg>
<status status="PASS" starttime="20230421 17:35:35.449" endtime="20230421 17:35:35.450"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:35.450" level="INFO">${post_id} = 913</msg>
<status status="PASS" starttime="20230421 17:35:35.450" endtime="20230421 17:35:35.450"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:35.451" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:35.451" endtime="20230421 17:35:35.451"/>
</kw>
<status status="PASS" starttime="20230421 17:35:35.241" endtime="20230421 17:35:35.451"/>
</kw>
<kw name="Get The Post Id In Wordpress And Verify Status Code 200" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:35.456" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375732A60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:35.456" endtime="20230421 17:35:35.456"/>
</kw>
<msg timestamp="20230421 17:35:35.457" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375732A60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:35.455" endtime="20230421 17:35:35.457"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:35.458" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:35.457" endtime="20230421 17:35:35.458"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:35.459" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:35.459" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/913</msg>
<msg timestamp="20230421 17:35:36.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:35.458" endtime="20230421 17:35:36.064"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:36.065" level="INFO">${expected_result} = {'id': 913, 'date': '2023-04-21T21:35:35', 'date_gmt': '2023-04-21T21:35:35', 'guid': {'rendered': 'http://localhost/2023/04/21/zwyjbenhpg/'}, 'modified': '2023-04-21T21:35:35', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:36.065" endtime="20230421 17:35:36.065"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:36.066" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:36.065" endtime="20230421 17:35:36.066"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:36.067" level="INFO">Actual result: {'id': 913, 'date': '2023-04-21T21:35:35', 'date_gmt': '2023-04-21T21:35:35', 'guid': {'rendered': 'http://localhost/2023/04/21/zwyjbenhpg/', 'raw': 'http://localhost/2023/04/21/zwyjbenhpg/'}, 'modified': '2023-04-21T21:35:35', 'modified_gmt': '2023-04-21T21:35:35', 'password': '', 'slug': 'zwyjbenhpg', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/zwyjbenhpg/', 'title': {'raw': 'zwYJBENHPg', 'rendered': 'zwYJBENHPg'}, 'content': {'raw': '', 'rendered': '', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'zwyjbenhpg', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=913'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/913/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=913'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=913'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=913'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:36.067" level="INFO">Expected result: {'id': 913, 'date': '2023-04-21T21:35:35', 'date_gmt': '2023-04-21T21:35:35', 'guid': {'rendered': 'http://localhost/2023/04/21/zwyjbenhpg/'}, 'modified': '2023-04-21T21:35:35', 'modified_gmt': '2023-04-21T21:35:35', 'slug': 'zwyjbenhpg', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/zwyjbenhpg/', 'title': {'rendered': 'zwYJBENHPg'}, 'content': {'rendered': '', 'protected': False}, 'excerpt': {'rendered': '', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=913'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/913/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=913'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=913'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=913'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:36.067" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:36.066" endtime="20230421 17:35:36.067"/>
</kw>
<status status="PASS" starttime="20230421 17:35:35.454" endtime="20230421 17:35:36.068"/>
</kw>
<kw name="Update The Title In A Post And Verify Status Code 200" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:36.071" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375741FA0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:36.071" endtime="20230421 17:35:36.071"/>
</kw>
<msg timestamp="20230421 17:35:36.071" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375741FA0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:36.070" endtime="20230421 17:35:36.072"/>
</kw>
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:36.072" level="INFO">${title} = JOhBQX74Dl</msg>
<status status="PASS" starttime="20230421 17:35:36.072" endtime="20230421 17:35:36.072"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:36.073" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:36.073" endtime="20230421 17:35:36.073"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:36.074" level="INFO">${body} = {'title': 'JOhBQX74Dl'}</msg>
<status status="PASS" starttime="20230421 17:35:36.073" endtime="20230421 17:35:36.074"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:36.076" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:36.076" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/913</msg>
<msg timestamp="20230421 17:35:36.196" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:36.075" endtime="20230421 17:35:36.197"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:36.198" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:36.198" endtime="20230421 17:35:36.199"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:36.199" level="INFO">${actual_result} = {'id': 913, 'date': '2023-04-21T21:35:35', 'date_gmt': '2023-04-21T21:35:35', 'guid': {'rendered': 'http://localhost/2023/04/21/zwyjbenhpg/', 'raw': 'http://localhost/2023/04/21/zwyjbenhpg/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:36.199" endtime="20230421 17:35:36.199"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:36.200" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:36.200" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/913</msg>
<msg timestamp="20230421 17:35:36.649" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:36.200" endtime="20230421 17:35:36.649"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:36.652" level="INFO">${expected_result} = {'id': 913, 'date': '2023-04-21T21:35:35', 'date_gmt': '2023-04-21T21:35:35', 'guid': {'rendered': 'http://localhost/2023/04/21/zwyjbenhpg/'}, 'modified': '2023-04-21T21:35:36', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:36.650" endtime="20230421 17:35:36.652"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:36.653" level="INFO">Actual result: {'id': 913, 'date': '2023-04-21T21:35:35', 'date_gmt': '2023-04-21T21:35:35', 'guid': {'rendered': 'http://localhost/2023/04/21/zwyjbenhpg/', 'raw': 'http://localhost/2023/04/21/zwyjbenhpg/'}, 'modified': '2023-04-21T21:35:36', 'modified_gmt': '2023-04-21T21:35:36', 'password': '', 'slug': 'zwyjbenhpg', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/zwyjbenhpg/', 'title': {'raw': 'JOhBQX74Dl', 'rendered': 'JOhBQX74Dl'}, 'content': {'raw': '', 'rendered': '', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'johbqx74dl', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=913'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/913/revisions'}], 'predecessor-version': [{'id': 914, 'href': 'http://localhost/wp-json/wp/v2/posts/913/revisions/914'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=913'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=913'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=913'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:36.653" level="INFO">Expected result: {'id': 913, 'date': '2023-04-21T21:35:35', 'date_gmt': '2023-04-21T21:35:35', 'guid': {'rendered': 'http://localhost/2023/04/21/zwyjbenhpg/'}, 'modified': '2023-04-21T21:35:36', 'modified_gmt': '2023-04-21T21:35:36', 'slug': 'zwyjbenhpg', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/zwyjbenhpg/', 'title': {'rendered': 'JOhBQX74Dl'}, 'content': {'rendered': '', 'protected': False}, 'excerpt': {'rendered': '', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/913'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=913'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/913/revisions'}], 'predecessor-version': [{'id': 914, 'href': 'http://localhost/wp-json/wp/v2/posts/913/revisions/914'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=913'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=913'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=913'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:36.653" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:36.652" endtime="20230421 17:35:36.653"/>
</kw>
<status status="PASS" starttime="20230421 17:35:36.069" endtime="20230421 17:35:36.654"/>
</kw>
<kw name="Delete A Post In Wordpress And Verify Status Code 200" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:36.656" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375753A30&gt;</msg>
<status status="PASS" starttime="20230421 17:35:36.656" endtime="20230421 17:35:36.656"/>
</kw>
<msg timestamp="20230421 17:35:36.657" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375753A30&gt;</msg>
<status status="PASS" starttime="20230421 17:35:36.656" endtime="20230421 17:35:36.657"/>
</kw>
<kw name="Make Request Delete" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a DELETE request to a API endpoint</doc>
<msg timestamp="20230421 17:35:36.657" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:36.657" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/913</msg>
<msg timestamp="20230421 17:35:36.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:36.657" endtime="20230421 17:35:36.767"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:36.769" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:36.768" endtime="20230421 17:35:36.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:36.769" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:36.769" endtime="20230421 17:35:36.769"/>
</kw>
<status status="PASS" starttime="20230421 17:35:36.655" endtime="20230421 17:35:36.770"/>
</kw>
<status status="PASS" starttime="20230421 17:35:35.239" endtime="20230421 17:35:36.770"/>
</test>
<doc>Tests to verify that a post can be created successfully
and the API returns status code.</doc>
<status status="PASS" starttime="20230421 17:35:35.182" endtime="20230421 17:35:36.772"/>
</suite>
<status status="PASS" starttime="20230421 17:35:35.167" endtime="20230421 17:35:36.776"/>
</suite>
<suite id="s1-s1-s5" name="Users" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\users">
<suite id="s1-s1-s5-s1" name="Create Users With Differents Roles" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\users\create_users_with_differents_roles.robot">
<test id="s1-s1-s5-s1-t1" name="Verify That New User Can Be Created Whit The Administrator Role" line="9">
<kw name="Create New Administrator User" library="create_users">
<kw name="Create New User" library="create_users">
<arg>administrator</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:37.056" level="INFO">${body} = {'username': 'at19_teamA', 'email': 'apitesters.at19@apitesting.com', 'roles': 'administrator', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:37.055" endtime="20230421 17:35:37.056"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:37.057" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:37.057" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:37.203" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:37.203" level="INFO">${expected_result} = {'id': 99, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author/...</msg>
<status status="PASS" starttime="20230421 17:35:37.056" endtime="20230421 17:35:37.204"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:37.205" level="INFO">${id_user} = 99</msg>
<status status="PASS" starttime="20230421 17:35:37.204" endtime="20230421 17:35:37.205"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:37.205" level="INFO">${expected_result} = {'id': 99, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author/...</msg>
<status status="PASS" starttime="20230421 17:35:37.205" endtime="20230421 17:35:37.205"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:37.206" level="INFO">${id_user} = 99</msg>
<status status="PASS" starttime="20230421 17:35:37.206" endtime="20230421 17:35:37.206"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.054" endtime="20230421 17:35:37.206"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.054" endtime="20230421 17:35:37.206"/>
</kw>
<kw name="Verify That New User Was Crated" library="create_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:37.208" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:37.209" level="INFO">URL: http://localhost/wp-json/wp/v2/users/99</msg>
<msg timestamp="20230421 17:35:37.279" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:37.280" level="INFO">${actual_result} = {'id': 99, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52...</msg>
<status status="PASS" starttime="20230421 17:35:37.208" endtime="20230421 17:35:37.281"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:37.281" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:37.281" endtime="20230421 17:35:37.282"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:37.282" level="INFO">Actual result: {'id': 99, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/99'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:37.282" level="INFO">Expected result: {'id': 99, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'locale': 'en_US', 'nickname': 'at19_teamA', 'slug': 'at19_teama', 'roles': ['administrator'], 'registered_date': '2023-04-21T21:35:37+00:00', 'capabilities': {'switch_themes': True, 'edit_themes': True, 'activate_plugins': True, 'edit_plugins': True, 'edit_users': True, 'edit_files': True, 'manage_options': True, 'moderate_comments': True, 'manage_categories': True, 'manage_links': True, 'upload_files': True, 'import': True, 'unfiltered_html': True, 'edit_posts': True, 'edit_others_posts': True, 'edit_published_posts': True, 'publish_posts': True, 'edit_pages': True, 'read': True, 'level_10': True, 'level_9': True, 'level_8': True, 'level_7': True, 'level_6': True, 'level_5': True, 'level_4': True, 'level_3': True, 'level_2': True, 'level_1': True, 'level_0': True, 'edit_others_pages': True, 'edit_published_pages': True, 'publish_pages': True, 'delete_pages': True, 'delete_others_pages': True, 'delete_published_pages': True, 'delete_posts': True, 'delete_others_posts': True, 'delete_published_posts': True, 'delete_private_posts': True, 'edit_private_posts': True, 'read_private_posts': True, 'delete_private_pages': True, 'edit_private_pages': True, 'read_private_pages': True, 'delete_users': True, 'create_users': True, 'unfiltered_upload': True, 'edit_dashboard': True, 'update_plugins': True, 'delete_plugins': True, 'install_plugins': True, 'update_themes': True, 'install_themes': True, 'update_core': True, 'list_users': True, 'remove_users': True, 'promote_users': True, 'edit_theme_options': True, 'delete_themes': True, 'export': True, 'restrict_content': True, 'list_roles': True, 'create_roles': True, 'delete_roles': True, 'edit_roles': True, 'administrator': True}, 'extra_capabilities': {'administrator': True}, 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/99'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:37.283" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:37.282" endtime="20230421 17:35:37.283"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.207" endtime="20230421 17:35:37.283"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:37.287" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:37.286" endtime="20230421 17:35:37.287"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:37.288" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:37.288" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:37.350" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:37.350" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:37.287" endtime="20230421 17:35:37.351"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:37.353" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:37.352" endtime="20230421 17:35:37.353"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:37.353" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:37.353" endtime="20230421 17:35:37.353"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:37.354" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:37.353" endtime="20230421 17:35:37.354"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.285" endtime="20230421 17:35:37.354"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:37.355" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:37.354" endtime="20230421 17:35:37.355"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:37.356" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:37.356" level="INFO">URL: http://localhost/wp-json/wp/v2/users/99</msg>
<msg timestamp="20230421 17:35:37.457" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:37.458" level="INFO">${response} = {'deleted': True, 'previous': {'id': 99, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'li...</msg>
<status status="PASS" starttime="20230421 17:35:37.355" endtime="20230421 17:35:37.458"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:37.459" level="INFO">${response} = {'deleted': True, 'previous': {'id': 99, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'li...</msg>
<status status="PASS" starttime="20230421 17:35:37.458" endtime="20230421 17:35:37.459"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.284" endtime="20230421 17:35:37.459"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.053" endtime="20230421 17:35:37.460"/>
</test>
<test id="s1-s1-s5-s1-t2" name="Verify That New User Can Be Created Whit The Editor Role" line="13">
<kw name="Create New Editor User" library="create_users">
<kw name="Create New User" library="create_users">
<arg>editor</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:37.466" level="INFO">${body} = {'username': 'at19_teamA', 'email': 'apitesters.at19@apitesting.com', 'roles': 'editor', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:37.464" endtime="20230421 17:35:37.466"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:37.467" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:37.467" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:37.621" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:37.621" level="INFO">${expected_result} = {'id': 100, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:37.467" endtime="20230421 17:35:37.622"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:37.623" level="INFO">${id_user} = 100</msg>
<status status="PASS" starttime="20230421 17:35:37.622" endtime="20230421 17:35:37.623"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:37.624" level="INFO">${expected_result} = {'id': 100, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:37.623" endtime="20230421 17:35:37.624"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:37.624" level="INFO">${id_user} = 100</msg>
<status status="PASS" starttime="20230421 17:35:37.624" endtime="20230421 17:35:37.624"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.463" endtime="20230421 17:35:37.625"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.463" endtime="20230421 17:35:37.625"/>
</kw>
<kw name="Verify That New User Was Crated" library="create_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:37.627" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:37.627" level="INFO">URL: http://localhost/wp-json/wp/v2/users/100</msg>
<msg timestamp="20230421 17:35:37.694" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:37.695" level="INFO">${actual_result} = {'id': 100, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b5...</msg>
<status status="PASS" starttime="20230421 17:35:37.626" endtime="20230421 17:35:37.695"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:37.697" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:37.695" endtime="20230421 17:35:37.697"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:37.698" level="INFO">Actual result: {'id': 100, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/100'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:37.698" level="INFO">Expected result: {'id': 100, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'locale': 'en_US', 'nickname': 'at19_teamA', 'slug': 'at19_teama', 'roles': ['editor'], 'registered_date': '2023-04-21T21:35:37+00:00', 'capabilities': {'moderate_comments': True, 'manage_categories': True, 'manage_links': True, 'upload_files': True, 'unfiltered_html': True, 'edit_posts': True, 'edit_others_posts': True, 'edit_published_posts': True, 'publish_posts': True, 'edit_pages': True, 'read': True, 'level_7': True, 'level_6': True, 'level_5': True, 'level_4': True, 'level_3': True, 'level_2': True, 'level_1': True, 'level_0': True, 'edit_others_pages': True, 'edit_published_pages': True, 'publish_pages': True, 'delete_pages': True, 'delete_others_pages': True, 'delete_published_pages': True, 'delete_posts': True, 'delete_others_posts': True, 'delete_published_posts': True, 'delete_private_posts': True, 'edit_private_posts': True, 'read_private_posts': True, 'delete_private_pages': True, 'edit_private_pages': True, 'read_private_pages': True, 'editor': True}, 'extra_capabilities': {'editor': True}, 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/100'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:37.698" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:37.697" endtime="20230421 17:35:37.698"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.626" endtime="20230421 17:35:37.698"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:37.704" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:37.703" endtime="20230421 17:35:37.704"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:37.705" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:37.705" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:37.771" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:37.772" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:37.704" endtime="20230421 17:35:37.772"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:37.773" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:37.773" endtime="20230421 17:35:37.773"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:37.774" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:37.773" endtime="20230421 17:35:37.774"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:37.774" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:37.774" endtime="20230421 17:35:37.774"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.702" endtime="20230421 17:35:37.775"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:37.775" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:37.775" endtime="20230421 17:35:37.775"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:37.776" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:37.776" level="INFO">URL: http://localhost/wp-json/wp/v2/users/100</msg>
<msg timestamp="20230421 17:35:37.873" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:37.873" level="INFO">${response} = {'deleted': True, 'previous': {'id': 100, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:37.776" endtime="20230421 17:35:37.874"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:37.875" level="INFO">${response} = {'deleted': True, 'previous': {'id': 100, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:37.874" endtime="20230421 17:35:37.875"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.700" endtime="20230421 17:35:37.875"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.461" endtime="20230421 17:35:37.876"/>
</test>
<test id="s1-s1-s5-s1-t3" name="Verify That New User Can Be Created Whit The Contributor Role" line="17">
<kw name="Create New Contributor User" library="create_users">
<kw name="Create New User" library="create_users">
<arg>contributor</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:37.883" level="INFO">${body} = {'username': 'at19_teamA', 'email': 'apitesters.at19@apitesting.com', 'roles': 'contributor', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:37.880" endtime="20230421 17:35:37.883"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:37.883" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:37.883" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:38.018" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:38.019" level="INFO">${expected_result} = {'id': 101, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:37.883" endtime="20230421 17:35:38.019"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:38.020" level="INFO">${id_user} = 101</msg>
<status status="PASS" starttime="20230421 17:35:38.019" endtime="20230421 17:35:38.020"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:38.020" level="INFO">${expected_result} = {'id': 101, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:38.020" endtime="20230421 17:35:38.020"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:38.021" level="INFO">${id_user} = 101</msg>
<status status="PASS" starttime="20230421 17:35:38.021" endtime="20230421 17:35:38.021"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.879" endtime="20230421 17:35:38.021"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.878" endtime="20230421 17:35:38.021"/>
</kw>
<kw name="Verify That New User Was Crated" library="create_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:38.024" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:38.024" level="INFO">URL: http://localhost/wp-json/wp/v2/users/101</msg>
<msg timestamp="20230421 17:35:38.112" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:38.113" level="INFO">${actual_result} = {'id': 101, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b5...</msg>
<status status="PASS" starttime="20230421 17:35:38.023" endtime="20230421 17:35:38.113"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:38.115" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:38.114" endtime="20230421 17:35:38.115"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:38.115" level="INFO">Actual result: {'id': 101, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/101'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:38.116" level="INFO">Expected result: {'id': 101, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'locale': 'en_US', 'nickname': 'at19_teamA', 'slug': 'at19_teama', 'roles': ['contributor'], 'registered_date': '2023-04-21T21:35:37+00:00', 'capabilities': {'edit_posts': True, 'read': True, 'level_1': True, 'level_0': True, 'delete_posts': True, 'contributor': True}, 'extra_capabilities': {'contributor': True}, 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/101'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:38.116" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:38.115" endtime="20230421 17:35:38.116"/>
</kw>
<status status="PASS" starttime="20230421 17:35:38.022" endtime="20230421 17:35:38.117"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:38.121" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:38.120" endtime="20230421 17:35:38.121"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:38.123" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:38.123" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:38.222" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:38.223" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:38.122" endtime="20230421 17:35:38.223"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:38.224" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:38.224" endtime="20230421 17:35:38.224"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:38.226" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:38.225" endtime="20230421 17:35:38.226"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:38.227" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:38.226" endtime="20230421 17:35:38.227"/>
</kw>
<status status="PASS" starttime="20230421 17:35:38.119" endtime="20230421 17:35:38.227"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:38.229" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:38.228" endtime="20230421 17:35:38.229"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:38.231" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:38.231" level="INFO">URL: http://localhost/wp-json/wp/v2/users/101</msg>
<msg timestamp="20230421 17:35:38.429" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:38.432" level="INFO">${response} = {'deleted': True, 'previous': {'id': 101, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:38.229" endtime="20230421 17:35:38.432"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:38.433" level="INFO">${response} = {'deleted': True, 'previous': {'id': 101, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:38.432" endtime="20230421 17:35:38.434"/>
</kw>
<status status="PASS" starttime="20230421 17:35:38.118" endtime="20230421 17:35:38.434"/>
</kw>
<status status="PASS" starttime="20230421 17:35:37.877" endtime="20230421 17:35:38.435"/>
</test>
<test id="s1-s1-s5-s1-t4" name="Verify That New User Can Be Created Whit The Author Role" line="21">
<kw name="Create New Author User" library="create_users">
<kw name="Create New User" library="create_users">
<arg>author</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:38.444" level="INFO">${body} = {'username': 'at19_teamA', 'email': 'apitesters.at19@apitesting.com', 'roles': 'author', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:38.442" endtime="20230421 17:35:38.444"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:38.446" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:38.446" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:38.654" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:38.655" level="INFO">${expected_result} = {'id': 102, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:38.444" endtime="20230421 17:35:38.655"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:38.656" level="INFO">${id_user} = 102</msg>
<status status="PASS" starttime="20230421 17:35:38.656" endtime="20230421 17:35:38.656"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:38.657" level="INFO">${expected_result} = {'id': 102, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:38.657" endtime="20230421 17:35:38.658"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:38.658" level="INFO">${id_user} = 102</msg>
<status status="PASS" starttime="20230421 17:35:38.658" endtime="20230421 17:35:38.659"/>
</kw>
<status status="PASS" starttime="20230421 17:35:38.441" endtime="20230421 17:35:38.659"/>
</kw>
<status status="PASS" starttime="20230421 17:35:38.440" endtime="20230421 17:35:38.659"/>
</kw>
<kw name="Verify That New User Was Crated" library="create_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:38.662" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:38.662" level="INFO">URL: http://localhost/wp-json/wp/v2/users/102</msg>
<msg timestamp="20230421 17:35:38.782" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:38.784" level="INFO">${actual_result} = {'id': 102, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b5...</msg>
<status status="PASS" starttime="20230421 17:35:38.661" endtime="20230421 17:35:38.784"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:38.786" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:38.784" endtime="20230421 17:35:38.786"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:38.787" level="INFO">Actual result: {'id': 102, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/102'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:38.787" level="INFO">Expected result: {'id': 102, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'locale': 'en_US', 'nickname': 'at19_teamA', 'slug': 'at19_teama', 'roles': ['author'], 'registered_date': '2023-04-21T21:35:38+00:00', 'capabilities': {'upload_files': True, 'edit_posts': True, 'edit_published_posts': True, 'publish_posts': True, 'read': True, 'level_2': True, 'level_1': True, 'level_0': True, 'delete_posts': True, 'delete_published_posts': True, 'author': True}, 'extra_capabilities': {'author': True}, 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/102'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:38.788" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:38.786" endtime="20230421 17:35:38.788"/>
</kw>
<status status="PASS" starttime="20230421 17:35:38.660" endtime="20230421 17:35:38.788"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:38.855" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:38.855" endtime="20230421 17:35:38.855"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:38.856" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:38.856" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:39.098" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:39.099" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:38.856" endtime="20230421 17:35:39.100"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:39.101" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:39.100" endtime="20230421 17:35:39.101"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:39.102" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:39.101" endtime="20230421 17:35:39.102"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:39.103" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:39.102" endtime="20230421 17:35:39.103"/>
</kw>
<status status="PASS" starttime="20230421 17:35:38.854" endtime="20230421 17:35:39.103"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:39.104" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:39.103" endtime="20230421 17:35:39.104"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:39.105" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:39.105" level="INFO">URL: http://localhost/wp-json/wp/v2/users/102</msg>
<msg timestamp="20230421 17:35:39.238" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:39.239" level="INFO">${response} = {'deleted': True, 'previous': {'id': 102, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:39.104" endtime="20230421 17:35:39.240"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:39.240" level="INFO">${response} = {'deleted': True, 'previous': {'id': 102, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:39.240" endtime="20230421 17:35:39.240"/>
</kw>
<status status="PASS" starttime="20230421 17:35:38.853" endtime="20230421 17:35:39.241"/>
</kw>
<status status="PASS" starttime="20230421 17:35:38.438" endtime="20230421 17:35:39.241"/>
</test>
<test id="s1-s1-s5-s1-t5" name="Verify That New User Can Be Created Whit The Subscriber Role" line="25">
<kw name="Create New Subscriber User" library="create_users">
<kw name="Create New User" library="create_users">
<arg>subscriber</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:39.248" level="INFO">${body} = {'username': 'at19_teamA', 'email': 'apitesters.at19@apitesting.com', 'roles': 'subscriber', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:39.246" endtime="20230421 17:35:39.248"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:39.249" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:39.249" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:39.401" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:39.402" level="INFO">${expected_result} = {'id': 103, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:39.248" endtime="20230421 17:35:39.402"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:39.403" level="INFO">${id_user} = 103</msg>
<status status="PASS" starttime="20230421 17:35:39.403" endtime="20230421 17:35:39.403"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:39.404" level="INFO">${expected_result} = {'id': 103, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:39.404" endtime="20230421 17:35:39.404"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:39.406" level="INFO">${id_user} = 103</msg>
<status status="PASS" starttime="20230421 17:35:39.405" endtime="20230421 17:35:39.406"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.245" endtime="20230421 17:35:39.406"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.245" endtime="20230421 17:35:39.406"/>
</kw>
<kw name="Verify That New User Was Crated" library="create_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:39.409" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:39.409" level="INFO">URL: http://localhost/wp-json/wp/v2/users/103</msg>
<msg timestamp="20230421 17:35:39.474" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:39.474" level="INFO">${actual_result} = {'id': 103, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b5...</msg>
<status status="PASS" starttime="20230421 17:35:39.408" endtime="20230421 17:35:39.475"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:39.476" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:39.476" endtime="20230421 17:35:39.476"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:39.477" level="INFO">Actual result: {'id': 103, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/103'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:39.477" level="INFO">Expected result: {'id': 103, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'locale': 'en_US', 'nickname': 'at19_teamA', 'slug': 'at19_teama', 'roles': ['subscriber'], 'registered_date': '2023-04-21T21:35:39+00:00', 'capabilities': {'read': True, 'level_0': True, 'subscriber': True}, 'extra_capabilities': {'subscriber': True}, 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/103'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:39.477" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:39.476" endtime="20230421 17:35:39.477"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.408" endtime="20230421 17:35:39.477"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:39.480" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:39.479" endtime="20230421 17:35:39.480"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:39.481" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:39.481" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:39.543" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:39.545" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:39.480" endtime="20230421 17:35:39.545"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:39.546" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:39.545" endtime="20230421 17:35:39.546"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:39.546" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:39.546" endtime="20230421 17:35:39.546"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:39.547" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:39.546" endtime="20230421 17:35:39.547"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.479" endtime="20230421 17:35:39.547"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:39.548" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:39.547" endtime="20230421 17:35:39.548"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:39.549" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:39.549" level="INFO">URL: http://localhost/wp-json/wp/v2/users/103</msg>
<msg timestamp="20230421 17:35:39.651" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:39.651" level="INFO">${response} = {'deleted': True, 'previous': {'id': 103, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:39.548" endtime="20230421 17:35:39.651"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:39.653" level="INFO">${response} = {'deleted': True, 'previous': {'id': 103, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:39.652" endtime="20230421 17:35:39.653"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.478" endtime="20230421 17:35:39.654"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.243" endtime="20230421 17:35:39.654"/>
</test>
<doc>Tests to verify that users with different roles can be created successfully
and the API returns a status code 201 and the user record.</doc>
<status status="PASS" starttime="20230421 17:35:36.783" endtime="20230421 17:35:39.657"/>
</suite>
<suite id="s1-s1-s5-s2" name="Delete User" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\users\delete_user.robot">
<test id="s1-s1-s5-s2-t1" name="Verify That Specific User Can Be Deleted By ID" line="7">
<kw name="Get ID From New User" library="create_users">
<var>${id_user}</var>
<kw name="Create New Administrator User" library="create_users">
<kw name="Create New User" library="create_users">
<arg>administrator</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:39.734" level="INFO">${body} = {'username': 'at19_teamA', 'email': 'apitesters.at19@apitesting.com', 'roles': 'administrator', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:39.733" endtime="20230421 17:35:39.734"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:39.738" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:39.738" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:39.930" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:39.932" level="INFO">${expected_result} = {'id': 104, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:39.736" endtime="20230421 17:35:39.932"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:39.934" level="INFO">${id_user} = 104</msg>
<status status="PASS" starttime="20230421 17:35:39.933" endtime="20230421 17:35:39.934"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:39.935" level="INFO">${expected_result} = {'id': 104, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:39.934" endtime="20230421 17:35:39.935"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:39.936" level="INFO">${id_user} = 104</msg>
<status status="PASS" starttime="20230421 17:35:39.935" endtime="20230421 17:35:39.937"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.731" endtime="20230421 17:35:39.937"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.729" endtime="20230421 17:35:39.938"/>
</kw>
<msg timestamp="20230421 17:35:39.938" level="INFO">${id_user} = 104</msg>
<status status="PASS" starttime="20230421 17:35:39.728" endtime="20230421 17:35:39.938"/>
</kw>
<kw name="Delete User By ID" library="delete_users">
<arg>${id_user}</arg>
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:39.943" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:39.942" endtime="20230421 17:35:39.943"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:39.945" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:39.945" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:40.028" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:40.029" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:39.943" endtime="20230421 17:35:40.029"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:40.030" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:40.030" endtime="20230421 17:35:40.030"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:40.031" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:40.031" endtime="20230421 17:35:40.031"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:40.032" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:40.032" endtime="20230421 17:35:40.032"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.940" endtime="20230421 17:35:40.033"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:40.034" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:40.033" endtime="20230421 17:35:40.034"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:40.036" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:40.036" level="INFO">URL: http://localhost/wp-json/wp/v2/users/104</msg>
<msg timestamp="20230421 17:35:40.171" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:40.172" level="INFO">${response} = {'deleted': True, 'previous': {'id': 104, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:40.035" endtime="20230421 17:35:40.172"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:40.173" level="INFO">${response} = {'deleted': True, 'previous': {'id': 104, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:40.172" endtime="20230421 17:35:40.173"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.939" endtime="20230421 17:35:40.173"/>
</kw>
<kw name="Verify That User Is Not Displayed In Users List" library="delete_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:40.175" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:40.175" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:40.237" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:40.240" level="INFO">${actual_result} = [{'id': 2, 'name': 'Ma ria', 'url': 'http://localhost/wp-json/wp/v2/posts', 'description': '', 'link': 'http://localhost/author/mari/', 'slug': 'mari', 'avatar_urls': {'24': 'http://1.gravatar.com/ava...</msg>
<status status="PASS" starttime="20230421 17:35:40.175" endtime="20230421 17:35:40.240"/>
</kw>
<kw name="Verify Not Contain Value" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${id_user}</arg>
<doc>Verify that the actual result does not have a specific value</doc>
<msg timestamp="20230421 17:35:40.241" level="INFO">Actual result: [{'id': 2, 'name': 'Ma ria', 'url': 'http://localhost/wp-json/wp/v2/posts', 'description': '', 'link': 'http://localhost/author/mari/', 'slug': 'mari', 'avatar_urls': {'24': 'http://1.gravatar.com/avatar/45b2df703596bb63181edf6d35a0ba42?s=24&amp;d=mm&amp;r=g', '48': 'http://1.gravatar.com/avatar/45b2df703596bb63181edf6d35a0ba42?s=48&amp;d=mm&amp;r=g', '96': 'http://1.gravatar.com/avatar/45b2df703596bb63181edf6d35a0ba42?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/2'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}, {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}]</msg>
<msg timestamp="20230421 17:35:40.241" level="INFO">The deleted user id: 104</msg>
<status status="PASS" starttime="20230421 17:35:40.240" endtime="20230421 17:35:40.241"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.174" endtime="20230421 17:35:40.241"/>
</kw>
<status status="PASS" starttime="20230421 17:35:39.726" endtime="20230421 17:35:40.242"/>
</test>
<doc>Tests to verify that the user can be deleted
and the API return a status code 200</doc>
<status status="PASS" starttime="20230421 17:35:39.663" endtime="20230421 17:35:40.244"/>
</suite>
<suite id="s1-s1-s5-s3" name="Invalid Request" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\users\invalid_request.robot">
<test id="s1-s1-s5-s3-t1" name="Verify That Can Not Be Created User Without Username" line="13">
<kw name="Create User Without Username">
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:40.305" level="INFO">${body} = {'email': 'apitesters.at19@apitesting.com', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:40.304" endtime="20230421 17:35:40.305"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=400</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:40.307" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:40.307" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:40.384" level="INFO">Actual response is 400, expect: 400</msg>
<msg timestamp="20230421 17:35:40.385" level="INFO">${actual_result} = {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): username', 'data': {'status': 400, 'params': ['username']}}</msg>
<status status="PASS" starttime="20230421 17:35:40.306" endtime="20230421 17:35:40.385"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:40.387" level="INFO">${actual_result} = {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): username', 'data': {'status': 400, 'params': ['username']}}</msg>
<status status="PASS" starttime="20230421 17:35:40.386" endtime="20230421 17:35:40.387"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.302" endtime="20230421 17:35:40.387"/>
</kw>
<kw name="Verify Response Message">
<arg>${no_username_response}</arg>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:40.390" level="INFO">Actual result: {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): username', 'data': {'status': 400, 'params': ['username']}}</msg>
<msg timestamp="20230421 17:35:40.390" level="INFO">Expected result: {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): username', 'data': {'status': 400, 'params': ['username']}}</msg>
<status status="PASS" starttime="20230421 17:35:40.389" endtime="20230421 17:35:40.390"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.388" endtime="20230421 17:35:40.391"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.300" endtime="20230421 17:35:40.391"/>
</test>
<test id="s1-s1-s5-s3-t2" name="Verify That Can Not Be Created User Without Email" line="17">
<kw name="Create User Without Email">
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=username</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:40.396" level="INFO">${body} = {'username': 'username', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:40.395" endtime="20230421 17:35:40.396"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=400</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:40.397" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:40.397" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:40.465" level="INFO">Actual response is 400, expect: 400</msg>
<msg timestamp="20230421 17:35:40.466" level="INFO">${actual_result} = {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): email', 'data': {'status': 400, 'params': ['email']}}</msg>
<status status="PASS" starttime="20230421 17:35:40.396" endtime="20230421 17:35:40.466"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:40.467" level="INFO">${actual_result} = {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): email', 'data': {'status': 400, 'params': ['email']}}</msg>
<status status="PASS" starttime="20230421 17:35:40.466" endtime="20230421 17:35:40.467"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.394" endtime="20230421 17:35:40.467"/>
</kw>
<kw name="Verify Response Message">
<arg>${no_email_response}</arg>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:40.471" level="INFO">Actual result: {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): email', 'data': {'status': 400, 'params': ['email']}}</msg>
<msg timestamp="20230421 17:35:40.471" level="INFO">Expected result: {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): email', 'data': {'status': 400, 'params': ['email']}}</msg>
<status status="PASS" starttime="20230421 17:35:40.469" endtime="20230421 17:35:40.472"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.467" endtime="20230421 17:35:40.472"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.393" endtime="20230421 17:35:40.473"/>
</test>
<test id="s1-s1-s5-s3-t3" name="Verify That Can Not Be Created User Without Passowrd" line="21">
<kw name="Create User Without Password">
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=username</arg>
<arg>email=${email}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:40.477" level="INFO">${body} = {'username': 'username', 'email': 'apitesters.at19@apitesting.com'}</msg>
<status status="PASS" starttime="20230421 17:35:40.476" endtime="20230421 17:35:40.477"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=400</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:40.477" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:40.477" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:40.545" level="INFO">Actual response is 400, expect: 400</msg>
<msg timestamp="20230421 17:35:40.546" level="INFO">${actual_result} = {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): password', 'data': {'status': 400, 'params': ['password']}}</msg>
<status status="PASS" starttime="20230421 17:35:40.477" endtime="20230421 17:35:40.546"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:40.547" level="INFO">${actual_result} = {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): password', 'data': {'status': 400, 'params': ['password']}}</msg>
<status status="PASS" starttime="20230421 17:35:40.546" endtime="20230421 17:35:40.547"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.476" endtime="20230421 17:35:40.547"/>
</kw>
<kw name="Verify Response Message">
<arg>${no_password_response}</arg>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:40.549" level="INFO">Actual result: {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): password', 'data': {'status': 400, 'params': ['password']}}</msg>
<msg timestamp="20230421 17:35:40.549" level="INFO">Expected result: {'code': 'rest_missing_callback_param', 'message': 'Missing parameter(s): password', 'data': {'status': 400, 'params': ['password']}}</msg>
<status status="PASS" starttime="20230421 17:35:40.549" endtime="20230421 17:35:40.549"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.548" endtime="20230421 17:35:40.550"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.475" endtime="20230421 17:35:40.550"/>
</test>
<test id="s1-s1-s5-s3-t4" name="Verify That Invalid Endpoint Returns Error Message" line="25">
<kw name="Get User With Invalid ID" library="get_users">
<arg>${invalid_id}</arg>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${user_id}</arg>
<arg>exp_status=404</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:40.557" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:40.557" level="INFO">URL: http://localhost/wp-json/wp/v2/users/1!</msg>
<msg timestamp="20230421 17:35:40.620" level="INFO">Actual response is 404, expect: 404</msg>
<msg timestamp="20230421 17:35:40.621" level="INFO">${actual_result} = {'code': 'rest_no_route', 'message': 'No route was found matching the URL and request method.', 'data': {'status': 404}}</msg>
<status status="PASS" starttime="20230421 17:35:40.557" endtime="20230421 17:35:40.621"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:40.623" level="INFO">${actual_result} = {'code': 'rest_no_route', 'message': 'No route was found matching the URL and request method.', 'data': {'status': 404}}</msg>
<status status="PASS" starttime="20230421 17:35:40.622" endtime="20230421 17:35:40.624"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.555" endtime="20230421 17:35:40.624"/>
</kw>
<kw name="Verify Response Message">
<arg>${not_found}</arg>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:40.626" level="INFO">Actual result: {'code': 'rest_no_route', 'message': 'No route was found matching the URL and request method.', 'data': {'status': 404}}</msg>
<msg timestamp="20230421 17:35:40.626" level="INFO">Expected result: {'code': 'rest_no_route', 'message': 'No route was found matching the URL and request method.', 'data': {'status': 404}}</msg>
<status status="PASS" starttime="20230421 17:35:40.626" endtime="20230421 17:35:40.626"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.625" endtime="20230421 17:35:40.626"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.553" endtime="20230421 17:35:40.627"/>
</test>
<doc>Tests to verify that send invalid data to the endpoint no returns a status code
2xx and returns differents messages</doc>
<status status="PASS" starttime="20230421 17:35:40.247" endtime="20230421 17:35:40.629"/>
</suite>
<suite id="s1-s1-s5-s4" name="Modify User" source="D:\worpressTeamA\API_testing_A\wordpress\tests\crud\users\modify_user.robot">
<test id="s1-s1-s5-s4-t1" name="Verify that a specific user record can be uploaded" line="9">
<kw name="Get ID From New User" library="create_users">
<var>${id_user}</var>
<kw name="Create New Administrator User" library="create_users">
<kw name="Create New User" library="create_users">
<arg>administrator</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:40.694" level="INFO">${body} = {'username': 'at19_teamA', 'email': 'apitesters.at19@apitesting.com', 'roles': 'administrator', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:40.693" endtime="20230421 17:35:40.694"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:40.695" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:40.695" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:41.203" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:41.205" level="INFO">${expected_result} = {'id': 105, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:40.695" endtime="20230421 17:35:41.205"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:41.206" level="INFO">${id_user} = 105</msg>
<status status="PASS" starttime="20230421 17:35:41.205" endtime="20230421 17:35:41.206"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:41.208" level="INFO">${expected_result} = {'id': 105, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:41.206" endtime="20230421 17:35:41.208"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:41.208" level="INFO">${id_user} = 105</msg>
<status status="PASS" starttime="20230421 17:35:41.208" endtime="20230421 17:35:41.209"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.692" endtime="20230421 17:35:41.209"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.691" endtime="20230421 17:35:41.209"/>
</kw>
<msg timestamp="20230421 17:35:41.209" level="INFO">${id_user} = 105</msg>
<status status="PASS" starttime="20230421 17:35:40.690" endtime="20230421 17:35:41.209"/>
</kw>
<kw name="Modify User Name By ID" library="modify_users">
<arg>${id_user}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>name=modify username</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:41.212" level="INFO">${body} = {'name': 'modify username'}</msg>
<status status="PASS" starttime="20230421 17:35:41.211" endtime="20230421 17:35:41.212"/>
</kw>
<kw name="Modify User" library="modify_users">
<arg>${id_user}</arg>
<arg>${body}</arg>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>put</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:41.214" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:41.214" level="INFO">URL: http://localhost/wp-json/wp/v2/users/105</msg>
<msg timestamp="20230421 17:35:41.290" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:41.291" level="INFO">${expected_result} = {'id': 105, 'username': 'at19_teamA', 'name': 'modify username', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/a...</msg>
<status status="PASS" starttime="20230421 17:35:41.213" endtime="20230421 17:35:41.291"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:41.292" level="INFO">${expected_result} = {'id': 105, 'username': 'at19_teamA', 'name': 'modify username', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/a...</msg>
<status status="PASS" starttime="20230421 17:35:41.292" endtime="20230421 17:35:41.292"/>
</kw>
<status status="PASS" starttime="20230421 17:35:41.212" endtime="20230421 17:35:41.293"/>
</kw>
<status status="PASS" starttime="20230421 17:35:41.210" endtime="20230421 17:35:41.293"/>
</kw>
<kw name="Verify The User Has Been Modified" library="modify_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:41.295" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:41.295" level="INFO">URL: http://localhost/wp-json/wp/v2/users/105</msg>
<msg timestamp="20230421 17:35:41.357" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:41.357" level="INFO">${actual_result} = {'id': 105, 'name': 'modify username', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2...</msg>
<status status="PASS" starttime="20230421 17:35:41.294" endtime="20230421 17:35:41.357"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:41.359" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:41.358" endtime="20230421 17:35:41.359"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:41.360" level="INFO">Actual result: {'id': 105, 'name': 'modify username', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/105'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:41.360" level="INFO">Expected result: {'id': 105, 'username': 'at19_teamA', 'name': 'modify username', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'locale': 'en_US', 'nickname': 'at19_teamA', 'slug': 'at19_teama', 'roles': ['administrator'], 'registered_date': '2023-04-21T21:35:40+00:00', 'capabilities': {'switch_themes': True, 'edit_themes': True, 'activate_plugins': True, 'edit_plugins': True, 'edit_users': True, 'edit_files': True, 'manage_options': True, 'moderate_comments': True, 'manage_categories': True, 'manage_links': True, 'upload_files': True, 'import': True, 'unfiltered_html': True, 'edit_posts': True, 'edit_others_posts': True, 'edit_published_posts': True, 'publish_posts': True, 'edit_pages': True, 'read': True, 'level_10': True, 'level_9': True, 'level_8': True, 'level_7': True, 'level_6': True, 'level_5': True, 'level_4': True, 'level_3': True, 'level_2': True, 'level_1': True, 'level_0': True, 'edit_others_pages': True, 'edit_published_pages': True, 'publish_pages': True, 'delete_pages': True, 'delete_others_pages': True, 'delete_published_pages': True, 'delete_posts': True, 'delete_others_posts': True, 'delete_published_posts': True, 'delete_private_posts': True, 'edit_private_posts': True, 'read_private_posts': True, 'delete_private_pages': True, 'edit_private_pages': True, 'read_private_pages': True, 'delete_users': True, 'create_users': True, 'unfiltered_upload': True, 'edit_dashboard': True, 'update_plugins': True, 'delete_plugins': True, 'install_plugins': True, 'update_themes': True, 'install_themes': True, 'update_core': True, 'list_users': True, 'remove_users': True, 'promote_users': True, 'edit_theme_options': True, 'delete_themes': True, 'export': True, 'restrict_content': True, 'list_roles': True, 'create_roles': True, 'delete_roles': True, 'edit_roles': True, 'administrator': True}, 'extra_capabilities': {'administrator': True}, 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/105'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:41.360" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:41.359" endtime="20230421 17:35:41.360"/>
</kw>
<status status="PASS" starttime="20230421 17:35:41.293" endtime="20230421 17:35:41.360"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:41.362" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:41.362" endtime="20230421 17:35:41.363"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:41.363" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:41.363" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:41.426" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:41.427" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:41.363" endtime="20230421 17:35:41.427"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:41.429" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:41.428" endtime="20230421 17:35:41.429"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:41.429" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:41.429" endtime="20230421 17:35:41.429"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:41.430" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:41.430" endtime="20230421 17:35:41.430"/>
</kw>
<status status="PASS" starttime="20230421 17:35:41.362" endtime="20230421 17:35:41.430"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:41.431" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:41.430" endtime="20230421 17:35:41.431"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:41.431" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:41.432" level="INFO">URL: http://localhost/wp-json/wp/v2/users/105</msg>
<msg timestamp="20230421 17:35:41.528" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:41.530" level="INFO">${response} = {'deleted': True, 'previous': {'id': 105, 'username': 'at19_teamA', 'name': 'modify username', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '...</msg>
<status status="PASS" starttime="20230421 17:35:41.431" endtime="20230421 17:35:41.530"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:41.531" level="INFO">${response} = {'deleted': True, 'previous': {'id': 105, 'username': 'at19_teamA', 'name': 'modify username', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '...</msg>
<status status="PASS" starttime="20230421 17:35:41.530" endtime="20230421 17:35:41.531"/>
</kw>
<status status="PASS" starttime="20230421 17:35:41.361" endtime="20230421 17:35:41.531"/>
</kw>
<status status="PASS" starttime="20230421 17:35:40.688" endtime="20230421 17:35:41.532"/>
</test>
<doc>Tests to verify that the user information can be updated
and the API return a status code 200</doc>
<status status="PASS" starttime="20230421 17:35:40.634" endtime="20230421 17:35:41.535"/>
</suite>
<status status="PASS" starttime="20230421 17:35:36.779" endtime="20230421 17:35:41.540"/>
</suite>
<status status="PASS" starttime="20230421 17:35:31.496" endtime="20230421 17:35:41.544"/>
</suite>
<suite id="s1-s2" name="E2E" source="D:\worpressTeamA\API_testing_A\wordpress\tests\e2e">
<suite id="s1-s2-s1" name="Comments" source="D:\worpressTeamA\API_testing_A\wordpress\tests\e2e\comments">
<suite id="s1-s2-s1-s1" name="Filters" source="D:\worpressTeamA\API_testing_A\wordpress\tests\e2e\comments\filters.robot">
<kw name="Create A Post For A Comment" library="comments" type="SETUP">
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:41.581" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BE66A0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:41.581" endtime="20230421 17:35:41.581"/>
</kw>
<msg timestamp="20230421 17:35:41.582" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BE66A0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:41.580" endtime="20230421 17:35:41.582"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=Post to test comments</arg>
<arg>status=publish</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:41.583" level="INFO">${body} = {'title': 'Post to test comments', 'status': 'publish'}</msg>
<status status="PASS" starttime="20230421 17:35:41.582" endtime="20230421 17:35:41.583"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>posts</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:41.584" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:41.584" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:41.695" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:41.583" endtime="20230421 17:35:41.695"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:41.697" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:41.696" endtime="20230421 17:35:41.697"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:41.698" level="INFO">${response_with_format} = {'id': 915, 'date': '2023-04-21T21:35:41', 'date_gmt': '2023-04-21T21:35:41', 'guid': {'rendered': 'http://localhost/2023/04/21/post-to-test-comments/', 'raw': 'http://localhost/2023/04/21/post-to-tes...</msg>
<status status="PASS" starttime="20230421 17:35:41.697" endtime="20230421 17:35:41.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:41.699" level="INFO">{'id': 915, 'date': '2023-04-21T21:35:41', 'date_gmt': '2023-04-21T21:35:41', 'guid': {'rendered': 'http://localhost/2023/04/21/post-to-test-comments/', 'raw': 'http://localhost/2023/04/21/post-to-test-comments/'}, 'modified': '2023-04-21T21:35:41', 'modified_gmt': '2023-04-21T21:35:41', 'password': '', 'slug': 'post-to-test-comments', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/post-to-test-comments/', 'title': {'raw': 'Post to test comments', 'rendered': 'Post to test comments'}, 'content': {'raw': '', 'rendered': '', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'post-to-test-comments', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=915'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/915/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=915'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=915'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=915'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:41.698" endtime="20230421 17:35:41.699"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${response with format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:41.700" level="INFO">${post_id} = 915</msg>
<status status="PASS" starttime="20230421 17:35:41.699" endtime="20230421 17:35:41.700"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:41.700" level="INFO">${post_id} = 915</msg>
<status status="PASS" starttime="20230421 17:35:41.700" endtime="20230421 17:35:41.700"/>
</kw>
<status status="PASS" starttime="20230421 17:35:41.579" endtime="20230421 17:35:41.700"/>
</kw>
<test id="s1-s2-s1-s1-t1" name="Verify that search filter works properly" line="10">
<kw name="Create A New Comment" library="comments">
<var>${comment1_id}</var>
<arg>Comment 1: Elephant</arg>
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:41.703" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253751B2280&gt;</msg>
<status status="PASS" starttime="20230421 17:35:41.703" endtime="20230421 17:35:41.703"/>
</kw>
<msg timestamp="20230421 17:35:41.704" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253751B2280&gt;</msg>
<status status="PASS" starttime="20230421 17:35:41.702" endtime="20230421 17:35:41.704"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>author=1</arg>
<arg>content=${content}</arg>
<arg>post=${post_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:41.705" level="INFO">${body} = {'author': '1', 'content': 'Comment 1: Elephant', 'post': 915}</msg>
<status status="PASS" starttime="20230421 17:35:41.704" endtime="20230421 17:35:41.705"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:41.705" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:41.705" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:42.193" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:41.705" endtime="20230421 17:35:42.193"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:42.194" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:42.194" endtime="20230421 17:35:42.194"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:42.195" level="INFO">${response_with_format} = {'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': '...</msg>
<status status="PASS" starttime="20230421 17:35:42.194" endtime="20230421 17:35:42.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.195" level="INFO">{'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n', 'raw': 'Comment 1: Elephant'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:42.195" endtime="20230421 17:35:42.195"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${comment_id}</var>
<arg>id</arg>
<arg>${response_with_format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:42.196" level="INFO">${comment_id} = 47</msg>
<status status="PASS" starttime="20230421 17:35:42.195" endtime="20230421 17:35:42.196"/>
</kw>
<msg timestamp="20230421 17:35:42.196" level="INFO">${comment1_id} = 47</msg>
<status status="PASS" starttime="20230421 17:35:41.701" endtime="20230421 17:35:42.196"/>
</kw>
<kw name="Create A New Comment" library="comments">
<var>${comment2_id}</var>
<arg>Comment 2: Giraffe</arg>
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:42.198" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE700&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.198" endtime="20230421 17:35:42.198"/>
</kw>
<msg timestamp="20230421 17:35:42.199" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE700&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.198" endtime="20230421 17:35:42.199"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>author=1</arg>
<arg>content=${content}</arg>
<arg>post=${post_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:42.200" level="INFO">${body} = {'author': '1', 'content': 'Comment 2: Giraffe', 'post': 915}</msg>
<status status="PASS" starttime="20230421 17:35:42.199" endtime="20230421 17:35:42.200"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:42.201" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:42.201" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:42.291" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.200" endtime="20230421 17:35:42.292"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:42.294" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:42.293" endtime="20230421 17:35:42.294"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:42.295" level="INFO">${response_with_format} = {'id': 48, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': '...</msg>
<status status="PASS" starttime="20230421 17:35:42.294" endtime="20230421 17:35:42.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.296" level="INFO">{'id': 48, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: Giraffe&lt;/p&gt;\n', 'raw': 'Comment 2: Giraffe'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-48', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/48'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:42.295" endtime="20230421 17:35:42.296"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${comment_id}</var>
<arg>id</arg>
<arg>${response_with_format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:42.296" level="INFO">${comment_id} = 48</msg>
<status status="PASS" starttime="20230421 17:35:42.296" endtime="20230421 17:35:42.296"/>
</kw>
<msg timestamp="20230421 17:35:42.296" level="INFO">${comment2_id} = 48</msg>
<status status="PASS" starttime="20230421 17:35:42.197" endtime="20230421 17:35:42.296"/>
</kw>
<kw name="Create A New Comment" library="comments">
<var>${comment3_id}</var>
<arg>Comment 3: Platypus</arg>
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:42.299" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BD2070&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.298" endtime="20230421 17:35:42.299"/>
</kw>
<msg timestamp="20230421 17:35:42.299" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BD2070&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.298" endtime="20230421 17:35:42.299"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>author=1</arg>
<arg>content=${content}</arg>
<arg>post=${post_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:42.300" level="INFO">${body} = {'author': '1', 'content': 'Comment 3: Platypus', 'post': 915}</msg>
<status status="PASS" starttime="20230421 17:35:42.299" endtime="20230421 17:35:42.300"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:42.301" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:42.301" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:42.381" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.300" endtime="20230421 17:35:42.382"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:42.384" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:42.383" endtime="20230421 17:35:42.384"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:42.384" level="INFO">${response_with_format} = {'id': 49, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': '...</msg>
<status status="PASS" starttime="20230421 17:35:42.384" endtime="20230421 17:35:42.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.385" level="INFO">{'id': 49, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: Platypus&lt;/p&gt;\n', 'raw': 'Comment 3: Platypus'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-49', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/49'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:42.385" endtime="20230421 17:35:42.385"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${comment_id}</var>
<arg>id</arg>
<arg>${response_with_format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:42.386" level="INFO">${comment_id} = 49</msg>
<status status="PASS" starttime="20230421 17:35:42.385" endtime="20230421 17:35:42.386"/>
</kw>
<msg timestamp="20230421 17:35:42.387" level="INFO">${comment3_id} = 49</msg>
<status status="PASS" starttime="20230421 17:35:42.297" endtime="20230421 17:35:42.387"/>
</kw>
<kw name="Get Comments With Filter Search" library="comments">
<var>${response}</var>
<arg>Elephant</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>search=${search}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:42.389" level="INFO">${params} = {'search': 'Elephant'}</msg>
<status status="PASS" starttime="20230421 17:35:42.388" endtime="20230421 17:35:42.389"/>
</kw>
<kw name="Get Comments With Params" library="comments">
<var>${response_with_format}</var>
<arg>${params}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:42.391" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BD2C40&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.390" endtime="20230421 17:35:42.391"/>
</kw>
<msg timestamp="20230421 17:35:42.391" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BD2C40&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.390" endtime="20230421 17:35:42.391"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:42.392" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:42.392" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:42.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.391" endtime="20230421 17:35:42.457"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:42.458" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:42.458" endtime="20230421 17:35:42.458"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:42.459" level="INFO">${response_with_format} = [{'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered'...</msg>
<status status="PASS" starttime="20230421 17:35:42.459" endtime="20230421 17:35:42.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.460" level="INFO">[{'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}]</msg>
<status status="PASS" starttime="20230421 17:35:42.459" endtime="20230421 17:35:42.460"/>
</kw>
<msg timestamp="20230421 17:35:42.460" level="INFO">${response_with_format} = [{'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered'...</msg>
<status status="PASS" starttime="20230421 17:35:42.389" endtime="20230421 17:35:42.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.461" level="INFO">[{'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}]</msg>
<status status="PASS" starttime="20230421 17:35:42.461" endtime="20230421 17:35:42.461"/>
</kw>
<msg timestamp="20230421 17:35:42.461" level="INFO">${response} = [{'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered'...</msg>
<status status="PASS" starttime="20230421 17:35:42.387" endtime="20230421 17:35:42.461"/>
</kw>
<kw name="Verify Comment Is In Results" library="comments">
<arg>${comment1_id}</arg>
<arg>${response}</arg>
<kw name="Get Comment With ID" library="comments">
<var>${comment}</var>
<arg>${comment_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:42.465" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BDBF70&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.465" endtime="20230421 17:35:42.465"/>
</kw>
<msg timestamp="20230421 17:35:42.466" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BDBF70&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.464" endtime="20230421 17:35:42.466"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${comment_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:42.467" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:42.467" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/47</msg>
<msg timestamp="20230421 17:35:42.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.466" endtime="20230421 17:35:42.537"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:42.539" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:42.538" endtime="20230421 17:35:42.539"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:42.540" level="INFO">${response_with_format} = {'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:42.540" endtime="20230421 17:35:42.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.541" level="INFO">{'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:42.540" endtime="20230421 17:35:42.541"/>
</kw>
<msg timestamp="20230421 17:35:42.541" level="INFO">${comment} = {'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:42.463" endtime="20230421 17:35:42.541"/>
</kw>
<kw name="Validate Content" library="wordpress.src.common_imports.CommonLibraries">
<arg>${comment}</arg>
<arg>${response}</arg>
<doc>Validates that the content is included in the response of a request</doc>
<msg timestamp="20230421 17:35:42.542" level="INFO">Actual response is [{'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}], expect: {'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:42.541" endtime="20230421 17:35:42.542"/>
</kw>
<status status="PASS" starttime="20230421 17:35:42.462" endtime="20230421 17:35:42.542"/>
</kw>
<kw name="Verify Comment Is Not In Results" library="comments">
<arg>${comment2_id}</arg>
<arg>${response}</arg>
<kw name="Get Comment With ID" library="comments">
<var>${comment}</var>
<arg>${comment_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:42.546" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253751F96D0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.545" endtime="20230421 17:35:42.546"/>
</kw>
<msg timestamp="20230421 17:35:42.546" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253751F96D0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.545" endtime="20230421 17:35:42.546"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${comment_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:42.547" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:42.547" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/48</msg>
<msg timestamp="20230421 17:35:42.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.546" endtime="20230421 17:35:42.610"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:42.611" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:42.610" endtime="20230421 17:35:42.611"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:42.612" level="INFO">${response_with_format} = {'id': 48, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:42.611" endtime="20230421 17:35:42.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.613" level="INFO">{'id': 48, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: Giraffe&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-48', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/48'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:42.612" endtime="20230421 17:35:42.613"/>
</kw>
<msg timestamp="20230421 17:35:42.613" level="INFO">${comment} = {'id': 48, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:42.544" endtime="20230421 17:35:42.613"/>
</kw>
<kw name="Validate Content Not" library="wordpress.src.common_imports.CommonLibraries">
<arg>${comment}</arg>
<arg>${response}</arg>
<doc>Validates that the content is included in the response of a request</doc>
<msg timestamp="20230421 17:35:42.614" level="INFO">Actual response is [{'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}], expect: {'id': 48, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: Giraffe&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-48', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/48'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:42.613" endtime="20230421 17:35:42.614"/>
</kw>
<status status="PASS" starttime="20230421 17:35:42.543" endtime="20230421 17:35:42.614"/>
</kw>
<status status="PASS" starttime="20230421 17:35:41.700" endtime="20230421 17:35:42.615"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Verify that parent filter works properly" line="18">
<kw name="Create A New Comment" library="comments">
<var>${comment1_id}</var>
<arg>Comment 1: This is a parent comment.</arg>
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:42.621" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BDBCA0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.621" endtime="20230421 17:35:42.621"/>
</kw>
<msg timestamp="20230421 17:35:42.622" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BDBCA0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.620" endtime="20230421 17:35:42.622"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>author=1</arg>
<arg>content=${content}</arg>
<arg>post=${post_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:42.624" level="INFO">${body} = {'author': '1', 'content': 'Comment 1: This is a parent comment.', 'post': 915}</msg>
<status status="PASS" starttime="20230421 17:35:42.623" endtime="20230421 17:35:42.624"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:42.625" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:42.625" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:42.700" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.624" endtime="20230421 17:35:42.700"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:42.702" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:42.701" endtime="20230421 17:35:42.702"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:42.703" level="INFO">${response_with_format} = {'id': 50, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': '...</msg>
<status status="PASS" starttime="20230421 17:35:42.702" endtime="20230421 17:35:42.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.703" level="INFO">{'id': 50, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a parent comment.&lt;/p&gt;\n', 'raw': 'Comment 1: This is a parent comment.'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-50', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/50'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:42.703" endtime="20230421 17:35:42.704"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${comment_id}</var>
<arg>id</arg>
<arg>${response_with_format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:42.704" level="INFO">${comment_id} = 50</msg>
<status status="PASS" starttime="20230421 17:35:42.704" endtime="20230421 17:35:42.704"/>
</kw>
<msg timestamp="20230421 17:35:42.704" level="INFO">${comment1_id} = 50</msg>
<status status="PASS" starttime="20230421 17:35:42.618" endtime="20230421 17:35:42.705"/>
</kw>
<kw name="Create A New Comment From Parent" library="comments">
<var>${comment2_id}</var>
<arg>Comment 2: This is a child comment.</arg>
<arg>${post_id}</arg>
<arg>${comment1_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:42.708" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE520&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.707" endtime="20230421 17:35:42.708"/>
</kw>
<msg timestamp="20230421 17:35:42.708" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE520&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.706" endtime="20230421 17:35:42.708"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>author=1</arg>
<arg>content=${content}</arg>
<arg>post=${post_id}</arg>
<arg>parent=${parent_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:42.709" level="INFO">${body} = {'author': '1', 'content': 'Comment 2: This is a child comment.', 'post': 915, 'parent': 50}</msg>
<status status="PASS" starttime="20230421 17:35:42.709" endtime="20230421 17:35:42.709"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:42.710" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:42.710" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:42.781" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.710" endtime="20230421 17:35:42.781"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:42.782" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:42.782" endtime="20230421 17:35:42.782"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:42.783" level="INFO">${response_with_format} = {'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': ...</msg>
<status status="PASS" starttime="20230421 17:35:42.783" endtime="20230421 17:35:42.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.784" level="INFO">{'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n', 'raw': 'Comment 2: This is a child comment.'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:42.783" endtime="20230421 17:35:42.784"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${comment_id}</var>
<arg>id</arg>
<arg>${response_with_format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:42.784" level="INFO">${comment_id} = 51</msg>
<status status="PASS" starttime="20230421 17:35:42.784" endtime="20230421 17:35:42.784"/>
</kw>
<msg timestamp="20230421 17:35:42.785" level="INFO">${comment2_id} = 51</msg>
<status status="PASS" starttime="20230421 17:35:42.705" endtime="20230421 17:35:42.785"/>
</kw>
<kw name="Create A New Comment" library="comments">
<var>${comment3_id}</var>
<arg>Comment 3: This an orphan comment.</arg>
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:42.787" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253751B2250&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.787" endtime="20230421 17:35:42.787"/>
</kw>
<msg timestamp="20230421 17:35:42.788" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253751B2250&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.786" endtime="20230421 17:35:42.788"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>author=1</arg>
<arg>content=${content}</arg>
<arg>post=${post_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:42.789" level="INFO">${body} = {'author': '1', 'content': 'Comment 3: This an orphan comment.', 'post': 915}</msg>
<status status="PASS" starttime="20230421 17:35:42.788" endtime="20230421 17:35:42.789"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:42.790" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:42.790" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:42.865" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.790" endtime="20230421 17:35:42.866"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:42.867" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:42.866" endtime="20230421 17:35:42.867"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:42.868" level="INFO">${response_with_format} = {'id': 52, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': '...</msg>
<status status="PASS" starttime="20230421 17:35:42.867" endtime="20230421 17:35:42.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.868" level="INFO">{'id': 52, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: This an orphan comment.&lt;/p&gt;\n', 'raw': 'Comment 3: This an orphan comment.'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-52', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/52'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:42.868" endtime="20230421 17:35:42.869"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${comment_id}</var>
<arg>id</arg>
<arg>${response_with_format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:42.870" level="INFO">${comment_id} = 52</msg>
<status status="PASS" starttime="20230421 17:35:42.869" endtime="20230421 17:35:42.870"/>
</kw>
<msg timestamp="20230421 17:35:42.871" level="INFO">${comment3_id} = 52</msg>
<status status="PASS" starttime="20230421 17:35:42.786" endtime="20230421 17:35:42.871"/>
</kw>
<kw name="Get Comments With Filter Parent" library="comments">
<var>${response}</var>
<arg>${comment1_id}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>parent=${parent_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:42.873" level="INFO">${params} = {'parent': 50}</msg>
<status status="PASS" starttime="20230421 17:35:42.873" endtime="20230421 17:35:42.873"/>
</kw>
<kw name="Get Comments With Params" library="comments">
<var>${response_with_format}</var>
<arg>${params}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:42.875" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BE6B50&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.874" endtime="20230421 17:35:42.875"/>
</kw>
<msg timestamp="20230421 17:35:42.875" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BE6B50&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.874" endtime="20230421 17:35:42.875"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:42.876" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:42.876" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:42.937" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.875" endtime="20230421 17:35:42.937"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:42.939" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:42.937" endtime="20230421 17:35:42.939"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:42.940" level="INFO">${response_with_format} = [{'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered...</msg>
<status status="PASS" starttime="20230421 17:35:42.939" endtime="20230421 17:35:42.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.940" level="INFO">[{'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}]</msg>
<status status="PASS" starttime="20230421 17:35:42.940" endtime="20230421 17:35:42.940"/>
</kw>
<msg timestamp="20230421 17:35:42.941" level="INFO">${response_with_format} = [{'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered...</msg>
<status status="PASS" starttime="20230421 17:35:42.873" endtime="20230421 17:35:42.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:42.941" level="INFO">[{'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}]</msg>
<status status="PASS" starttime="20230421 17:35:42.941" endtime="20230421 17:35:42.941"/>
</kw>
<msg timestamp="20230421 17:35:42.942" level="INFO">${response} = [{'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered...</msg>
<status status="PASS" starttime="20230421 17:35:42.872" endtime="20230421 17:35:42.942"/>
</kw>
<kw name="Verify Comment Is In Results" library="comments">
<arg>${comment2_id}</arg>
<arg>${response}</arg>
<kw name="Get Comment With ID" library="comments">
<var>${comment}</var>
<arg>${comment_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:42.945" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BA5400&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.945" endtime="20230421 17:35:42.945"/>
</kw>
<msg timestamp="20230421 17:35:42.945" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BA5400&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.944" endtime="20230421 17:35:42.945"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${comment_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:42.946" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:42.946" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/51</msg>
<msg timestamp="20230421 17:35:43.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:42.946" endtime="20230421 17:35:43.031"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:43.033" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:43.032" endtime="20230421 17:35:43.033"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:43.034" level="INFO">${response_with_format} = {'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered'...</msg>
<status status="PASS" starttime="20230421 17:35:43.033" endtime="20230421 17:35:43.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:43.034" level="INFO">{'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:43.034" endtime="20230421 17:35:43.034"/>
</kw>
<msg timestamp="20230421 17:35:43.034" level="INFO">${comment} = {'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered'...</msg>
<status status="PASS" starttime="20230421 17:35:42.943" endtime="20230421 17:35:43.034"/>
</kw>
<kw name="Validate Content" library="wordpress.src.common_imports.CommonLibraries">
<arg>${comment}</arg>
<arg>${response}</arg>
<doc>Validates that the content is included in the response of a request</doc>
<msg timestamp="20230421 17:35:43.035" level="INFO">Actual response is [{'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}], expect: {'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:43.035" endtime="20230421 17:35:43.036"/>
</kw>
<status status="PASS" starttime="20230421 17:35:42.942" endtime="20230421 17:35:43.036"/>
</kw>
<kw name="Verify Comment Is Not In Results" library="comments">
<arg>${comment1_id}</arg>
<arg>${response}</arg>
<kw name="Get Comment With ID" library="comments">
<var>${comment}</var>
<arg>${comment_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:43.040" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BA5A00&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.040" endtime="20230421 17:35:43.040"/>
</kw>
<msg timestamp="20230421 17:35:43.041" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BA5A00&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.039" endtime="20230421 17:35:43.041"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${comment_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:43.041" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:43.041" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/50</msg>
<msg timestamp="20230421 17:35:43.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.041" endtime="20230421 17:35:43.141"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:43.143" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:43.142" endtime="20230421 17:35:43.143"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:43.144" level="INFO">${response_with_format} = {'id': 50, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:43.143" endtime="20230421 17:35:43.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:43.145" level="INFO">{'id': 50, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a parent comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-50', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/50'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'children': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?parent=50'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:43.145" endtime="20230421 17:35:43.146"/>
</kw>
<msg timestamp="20230421 17:35:43.146" level="INFO">${comment} = {'id': 50, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:43.038" endtime="20230421 17:35:43.146"/>
</kw>
<kw name="Validate Content Not" library="wordpress.src.common_imports.CommonLibraries">
<arg>${comment}</arg>
<arg>${response}</arg>
<doc>Validates that the content is included in the response of a request</doc>
<msg timestamp="20230421 17:35:43.147" level="INFO">Actual response is [{'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}], expect: {'id': 50, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a parent comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-50', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/50'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'children': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?parent=50'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:43.147" endtime="20230421 17:35:43.147"/>
</kw>
<status status="PASS" starttime="20230421 17:35:43.037" endtime="20230421 17:35:43.147"/>
</kw>
<kw name="Verify Comment Is Not In Results" library="comments">
<arg>${comment3_id}</arg>
<arg>${response}</arg>
<kw name="Get Comment With ID" library="comments">
<var>${comment}</var>
<arg>${comment_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:43.150" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE520&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.150" endtime="20230421 17:35:43.150"/>
</kw>
<msg timestamp="20230421 17:35:43.151" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE520&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.150" endtime="20230421 17:35:43.151"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${comment_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:43.152" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:43.152" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/52</msg>
<msg timestamp="20230421 17:35:43.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.151" endtime="20230421 17:35:43.255"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:43.256" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:43.255" endtime="20230421 17:35:43.256"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:43.258" level="INFO">${response_with_format} = {'id': 52, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:43.256" endtime="20230421 17:35:43.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:43.258" level="INFO">{'id': 52, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: This an orphan comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-52', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/52'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:43.258" endtime="20230421 17:35:43.259"/>
</kw>
<msg timestamp="20230421 17:35:43.259" level="INFO">${comment} = {'id': 52, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:43.149" endtime="20230421 17:35:43.259"/>
</kw>
<kw name="Validate Content Not" library="wordpress.src.common_imports.CommonLibraries">
<arg>${comment}</arg>
<arg>${response}</arg>
<doc>Validates that the content is included in the response of a request</doc>
<msg timestamp="20230421 17:35:43.260" level="INFO">Actual response is [{'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}], expect: {'id': 52, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: This an orphan comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-52', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/52'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:43.260" endtime="20230421 17:35:43.261"/>
</kw>
<status status="PASS" starttime="20230421 17:35:43.148" endtime="20230421 17:35:43.261"/>
</kw>
<status status="PASS" starttime="20230421 17:35:42.616" endtime="20230421 17:35:43.262"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Verify that post filter works properly" line="27">
<kw name="Create A Different Post For A Comment" library="comments">
<var>${post_2_id}</var>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:43.267" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13EB0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.266" endtime="20230421 17:35:43.267"/>
</kw>
<msg timestamp="20230421 17:35:43.268" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13EB0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.266" endtime="20230421 17:35:43.268"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=A different post to test comments</arg>
<arg>status=publish</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:43.269" level="INFO">${body} = {'title': 'A different post to test comments', 'status': 'publish'}</msg>
<status status="PASS" starttime="20230421 17:35:43.268" endtime="20230421 17:35:43.269"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>posts</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:43.270" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:43.270" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:43.487" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.269" endtime="20230421 17:35:43.488"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:43.490" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:43.489" endtime="20230421 17:35:43.490"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:43.491" level="INFO">${response_with_format} = {'id': 916, 'date': '2023-04-21T21:35:43', 'date_gmt': '2023-04-21T21:35:43', 'guid': {'rendered': 'http://localhost/2023/04/21/a-different-post-to-test-comments-4/', 'raw': 'http://localhost/2023/04/...</msg>
<status status="PASS" starttime="20230421 17:35:43.490" endtime="20230421 17:35:43.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:43.493" level="INFO">{'id': 916, 'date': '2023-04-21T21:35:43', 'date_gmt': '2023-04-21T21:35:43', 'guid': {'rendered': 'http://localhost/2023/04/21/a-different-post-to-test-comments-4/', 'raw': 'http://localhost/2023/04/21/a-different-post-to-test-comments-4/'}, 'modified': '2023-04-21T21:35:43', 'modified_gmt': '2023-04-21T21:35:43', 'password': '', 'slug': 'a-different-post-to-test-comments-4', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/a-different-post-to-test-comments-4/', 'title': {'raw': 'A different post to test comments', 'rendered': 'A different post to test comments'}, 'content': {'raw': '', 'rendered': '', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'a-different-post-to-test-comments-4', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/916'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=916'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/916/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=916'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=916'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=916'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/916'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/916'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/916'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/916'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/916'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/916'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/916'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/916'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:43.492" endtime="20230421 17:35:43.493"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${response with format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:43.494" level="INFO">${post_id} = 916</msg>
<status status="PASS" starttime="20230421 17:35:43.493" endtime="20230421 17:35:43.494"/>
</kw>
<msg timestamp="20230421 17:35:43.495" level="INFO">${post_2_id} = 916</msg>
<status status="PASS" starttime="20230421 17:35:43.265" endtime="20230421 17:35:43.495"/>
</kw>
<kw name="Create A New Comment" library="comments">
<var>${comment1_id}</var>
<arg>Comment 1: This is a comment on post 1.</arg>
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:43.499" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13040&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.498" endtime="20230421 17:35:43.499"/>
</kw>
<msg timestamp="20230421 17:35:43.500" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13040&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.497" endtime="20230421 17:35:43.500"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>author=1</arg>
<arg>content=${content}</arg>
<arg>post=${post_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:43.501" level="INFO">${body} = {'author': '1', 'content': 'Comment 1: This is a comment on post 1.', 'post': 915}</msg>
<status status="PASS" starttime="20230421 17:35:43.500" endtime="20230421 17:35:43.501"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:43.503" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:43.503" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:44.043" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:43.501" endtime="20230421 17:35:44.043"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:44.044" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:44.044" endtime="20230421 17:35:44.044"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:44.045" level="INFO">${response_with_format} = {'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': '...</msg>
<status status="PASS" starttime="20230421 17:35:44.044" endtime="20230421 17:35:44.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:44.046" level="INFO">{'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a comment on post 1.&lt;/p&gt;\n', 'raw': 'Comment 1: This is a comment on post 1.'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-53', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/53'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:44.045" endtime="20230421 17:35:44.046"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${comment_id}</var>
<arg>id</arg>
<arg>${response_with_format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:44.046" level="INFO">${comment_id} = 53</msg>
<status status="PASS" starttime="20230421 17:35:44.046" endtime="20230421 17:35:44.046"/>
</kw>
<msg timestamp="20230421 17:35:44.046" level="INFO">${comment1_id} = 53</msg>
<status status="PASS" starttime="20230421 17:35:43.496" endtime="20230421 17:35:44.046"/>
</kw>
<kw name="Create A New Comment" library="comments">
<var>${comment2_id}</var>
<arg>Comment 2: This is a comment on post 2.</arg>
<arg>${post_2_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:44.049" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BA5820&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.049" endtime="20230421 17:35:44.049"/>
</kw>
<msg timestamp="20230421 17:35:44.050" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BA5820&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.048" endtime="20230421 17:35:44.050"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>author=1</arg>
<arg>content=${content}</arg>
<arg>post=${post_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:44.050" level="INFO">${body} = {'author': '1', 'content': 'Comment 2: This is a comment on post 2.', 'post': 916}</msg>
<status status="PASS" starttime="20230421 17:35:44.050" endtime="20230421 17:35:44.050"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:44.052" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:44.052" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:44.132" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.051" endtime="20230421 17:35:44.132"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:44.134" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:44.133" endtime="20230421 17:35:44.134"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:44.134" level="INFO">${response_with_format} = {'id': 54, 'post': 916, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': '...</msg>
<status status="PASS" starttime="20230421 17:35:44.134" endtime="20230421 17:35:44.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:44.136" level="INFO">{'id': 54, 'post': 916, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_email': 'marieug.mc@gmail.com', 'author_url': 'http://localhost', 'author_ip': '172.19.0.1', 'author_user_agent': 'python-requests/2.28.2', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a comment on post 2.&lt;/p&gt;\n', 'raw': 'Comment 2: This is a comment on post 2.'}, 'link': 'http://localhost/2023/04/21/a-different-post-to-test-comments-4/#comment-54', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/54'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/916'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:44.135" endtime="20230421 17:35:44.136"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${comment_id}</var>
<arg>id</arg>
<arg>${response_with_format}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:44.136" level="INFO">${comment_id} = 54</msg>
<status status="PASS" starttime="20230421 17:35:44.136" endtime="20230421 17:35:44.136"/>
</kw>
<msg timestamp="20230421 17:35:44.137" level="INFO">${comment2_id} = 54</msg>
<status status="PASS" starttime="20230421 17:35:44.047" endtime="20230421 17:35:44.137"/>
</kw>
<kw name="Get Comments With Filter Post" library="comments">
<var>${response}</var>
<arg>${post_id}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>post=${post_id}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:44.139" level="INFO">${params} = {'post': 915}</msg>
<status status="PASS" starttime="20230421 17:35:44.138" endtime="20230421 17:35:44.139"/>
</kw>
<kw name="Get Comments With Params" library="comments">
<var>${response_with_format}</var>
<arg>${params}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:44.141" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BA5580&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.141" endtime="20230421 17:35:44.142"/>
</kw>
<msg timestamp="20230421 17:35:44.142" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BA5580&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.140" endtime="20230421 17:35:44.142"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:44.143" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:44.143" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/</msg>
<msg timestamp="20230421 17:35:44.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.142" endtime="20230421 17:35:44.225"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:44.226" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:44.225" endtime="20230421 17:35:44.226"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:44.227" level="INFO">${response_with_format} = [{'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered'...</msg>
<status status="PASS" starttime="20230421 17:35:44.227" endtime="20230421 17:35:44.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:44.228" level="INFO">[{'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a comment on post 1.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-53', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/53'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 52, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: This an orphan comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-52', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/52'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}, {'id': 50, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a parent comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-50', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/50'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'children': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?parent=50'}]}}, {'id': 49, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: Platypus&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-49', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/49'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 48, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: Giraffe&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-48', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/48'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}]</msg>
<status status="PASS" starttime="20230421 17:35:44.228" endtime="20230421 17:35:44.228"/>
</kw>
<msg timestamp="20230421 17:35:44.229" level="INFO">${response_with_format} = [{'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered'...</msg>
<status status="PASS" starttime="20230421 17:35:44.140" endtime="20230421 17:35:44.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:44.230" level="INFO">[{'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a comment on post 1.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-53', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/53'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 52, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: This an orphan comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-52', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/52'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}, {'id': 50, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a parent comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-50', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/50'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'children': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?parent=50'}]}}, {'id': 49, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: Platypus&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-49', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/49'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 48, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: Giraffe&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-48', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/48'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}]</msg>
<status status="PASS" starttime="20230421 17:35:44.229" endtime="20230421 17:35:44.230"/>
</kw>
<msg timestamp="20230421 17:35:44.230" level="INFO">${response} = [{'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered'...</msg>
<status status="PASS" starttime="20230421 17:35:44.137" endtime="20230421 17:35:44.231"/>
</kw>
<kw name="Verify Comment Is In Results" library="comments">
<arg>${comment1_id}</arg>
<arg>${response}</arg>
<kw name="Get Comment With ID" library="comments">
<var>${comment}</var>
<arg>${comment_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:44.234" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BE6EE0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.234" endtime="20230421 17:35:44.234"/>
</kw>
<msg timestamp="20230421 17:35:44.234" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BE6EE0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.233" endtime="20230421 17:35:44.235"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${comment_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:44.235" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:44.235" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/53</msg>
<msg timestamp="20230421 17:35:44.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.235" endtime="20230421 17:35:44.298"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:44.300" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:44.299" endtime="20230421 17:35:44.300"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:44.301" level="INFO">${response_with_format} = {'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:44.300" endtime="20230421 17:35:44.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:44.302" level="INFO">{'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a comment on post 1.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-53', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/53'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:44.301" endtime="20230421 17:35:44.302"/>
</kw>
<msg timestamp="20230421 17:35:44.303" level="INFO">${comment} = {'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:44.232" endtime="20230421 17:35:44.303"/>
</kw>
<kw name="Validate Content" library="wordpress.src.common_imports.CommonLibraries">
<arg>${comment}</arg>
<arg>${response}</arg>
<doc>Validates that the content is included in the response of a request</doc>
<msg timestamp="20230421 17:35:44.304" level="INFO">Actual response is [{'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a comment on post 1.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-53', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/53'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 52, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: This an orphan comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-52', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/52'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}, {'id': 50, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a parent comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-50', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/50'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'children': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?parent=50'}]}}, {'id': 49, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: Platypus&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-49', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/49'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 48, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: Giraffe&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-48', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/48'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}], expect: {'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a comment on post 1.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-53', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/53'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:44.303" endtime="20230421 17:35:44.304"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.231" endtime="20230421 17:35:44.305"/>
</kw>
<kw name="Verify Comment Is Not In Results" library="comments">
<arg>${comment2_id}</arg>
<arg>${response}</arg>
<kw name="Get Comment With ID" library="comments">
<var>${comment}</var>
<arg>${comment_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:44.307" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C24DC0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.307" endtime="20230421 17:35:44.307"/>
</kw>
<msg timestamp="20230421 17:35:44.307" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C24DC0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.307" endtime="20230421 17:35:44.308"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${comment_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:44.308" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:44.308" level="INFO">URL: http://localhost/wp-json/wp/v2/comments/54</msg>
<msg timestamp="20230421 17:35:44.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.308" endtime="20230421 17:35:44.374"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:44.375" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:44.374" endtime="20230421 17:35:44.375"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:44.376" level="INFO">${response_with_format} = {'id': 54, 'post': 916, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:44.376" endtime="20230421 17:35:44.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:44.377" level="INFO">{'id': 54, 'post': 916, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a comment on post 2.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/a-different-post-to-test-comments-4/#comment-54', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/54'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/916'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:44.376" endtime="20230421 17:35:44.377"/>
</kw>
<msg timestamp="20230421 17:35:44.377" level="INFO">${comment} = {'id': 54, 'post': 916, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered':...</msg>
<status status="PASS" starttime="20230421 17:35:44.306" endtime="20230421 17:35:44.377"/>
</kw>
<kw name="Validate Content Not" library="wordpress.src.common_imports.CommonLibraries">
<arg>${comment}</arg>
<arg>${response}</arg>
<doc>Validates that the content is included in the response of a request</doc>
<msg timestamp="20230421 17:35:44.378" level="INFO">Actual response is [{'id': 53, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a comment on post 1.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-53', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/53'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 52, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: This an orphan comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-52', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/52'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 51, 'post': 915, 'parent': 50, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a child comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-51', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/51'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'in-reply-to': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments/50'}]}}, {'id': 50, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: This is a parent comment.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-50', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/50'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'children': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?parent=50'}]}}, {'id': 49, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 3: Platypus&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-49', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/49'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 48, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 2: Giraffe&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-48', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/48'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}, {'id': 47, 'post': 915, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:42', 'date_gmt': '2023-04-21T21:35:42', 'content': {'rendered': '&lt;p&gt;Comment 1: Elephant&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/post-to-test-comments/#comment-47', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/47'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/915'}]}}], expect: {'id': 54, 'post': 916, 'parent': 0, 'author': 1, 'author_name': 'marie212', 'author_url': 'http://localhost', 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'content': {'rendered': '&lt;p&gt;Comment 2: This is a comment on post 2.&lt;/p&gt;\n'}, 'link': 'http://localhost/2023/04/21/a-different-post-to-test-comments-4/#comment-54', 'status': 'approved', 'type': 'comment', 'author_avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/0a843ad6a3e77297fef863ded230fb93?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/comments/54'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/comments'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'up': [{'embeddable': True, 'post_type': 'post', 'href': 'http://localhost/wp-json/wp/v2/posts/916'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:44.378" endtime="20230421 17:35:44.378"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.305" endtime="20230421 17:35:44.379"/>
</kw>
<status status="PASS" starttime="20230421 17:35:43.264" endtime="20230421 17:35:44.379"/>
</test>
<kw name="Deleted Post Created For The Comment" library="comments" type="TEARDOWN">
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:44.383" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE280&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.382" endtime="20230421 17:35:44.383"/>
</kw>
<msg timestamp="20230421 17:35:44.383" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE280&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.382" endtime="20230421 17:35:44.383"/>
</kw>
<kw name="Make Request Delete" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>posts</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a DELETE request to a API endpoint</doc>
<msg timestamp="20230421 17:35:44.385" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:44.385" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/915</msg>
<msg timestamp="20230421 17:35:44.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.384" endtime="20230421 17:35:44.524"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=200</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:44.527" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:44.526" endtime="20230421 17:35:44.527"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<arg>format_json</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:44.528" level="INFO">${response_with_format} = {'id': 915, 'date': '2023-04-21T21:35:41', 'date_gmt': '2023-04-21T21:35:41', 'guid': {'rendered': 'http://localhost/2023/04/21/post-to-test-comments/', 'raw': 'http://localhost/2023/04/21/post-to-tes...</msg>
<status status="PASS" starttime="20230421 17:35:44.527" endtime="20230421 17:35:44.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:44.529" level="INFO">{'id': 915, 'date': '2023-04-21T21:35:41', 'date_gmt': '2023-04-21T21:35:41', 'guid': {'rendered': 'http://localhost/2023/04/21/post-to-test-comments/', 'raw': 'http://localhost/2023/04/21/post-to-test-comments/'}, 'modified': '2023-04-21T21:35:44', 'modified_gmt': '2023-04-21T21:35:44', 'password': '', 'slug': 'post-to-test-comments__trashed-8', 'status': 'trash', 'type': 'post', 'link': 'http://localhost/?p=915', 'title': {'raw': 'Post to test comments', 'rendered': 'Post to test comments'}, 'content': {'raw': '', 'rendered': '', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/?p=915', 'generated_slug': 'post-to-test-comments', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=915'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/915/revisions'}], 'predecessor-version': [{'id': 917, 'href': 'http://localhost/wp-json/wp/v2/posts/915/revisions/917'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=915'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=915'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=915'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/915'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:44.528" endtime="20230421 17:35:44.529"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.381" endtime="20230421 17:35:44.529"/>
</kw>
<doc>Tests to verify that a comment can be created successfully
and it appears on the list of results when correct filters
are used.</doc>
<status status="PASS" starttime="20230421 17:35:41.564" endtime="20230421 17:35:44.529"/>
</suite>
<status status="PASS" starttime="20230421 17:35:41.559" endtime="20230421 17:35:44.533"/>
</suite>
<suite id="s1-s2-s2" name="Pages" source="D:\worpressTeamA\API_testing_A\wordpress\tests\e2e\pages">
<suite id="s1-s2-s2-s1" name="Change Draft To Publish" source="D:\worpressTeamA\API_testing_A\wordpress\tests\e2e\pages\change_draft_to_publish.robot">
<test id="s1-s2-s2-s1-t1" name="Verify that is posible to change status page from draft to publish when it was created" line="6">
<kw name="Create Page With Desired Status" library="pages">
<arg>draft</arg>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:44.561" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C28970&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.560" endtime="20230421 17:35:44.561"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=new page 1</arg>
<arg>content=it is the new page</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:44.562" level="INFO">${body} = {'title': 'new page 1', 'content': 'it is the new page', 'status': 'draft'}</msg>
<status status="PASS" starttime="20230421 17:35:44.561" endtime="20230421 17:35:44.562"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:44.563" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:44.563" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/</msg>
<msg timestamp="20230421 17:35:44.653" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.562" endtime="20230421 17:35:44.653"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:44.655" level="INFO">${expected_result} = {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:44.655" endtime="20230421 17:35:44.656"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_page}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:44.656" level="INFO">${id_page} = 918</msg>
<status status="PASS" starttime="20230421 17:35:44.656" endtime="20230421 17:35:44.656"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:44.657" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:44.656" endtime="20230421 17:35:44.657"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:44.657" level="INFO">${expected_result} = {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:44.657" endtime="20230421 17:35:44.658"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_page}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:44.658" level="INFO">${id_page} = 918</msg>
<status status="PASS" starttime="20230421 17:35:44.658" endtime="20230421 17:35:44.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${id_page}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:44.659" level="INFO">918</msg>
<status status="PASS" starttime="20230421 17:35:44.658" endtime="20230421 17:35:44.659"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.559" endtime="20230421 17:35:44.659"/>
</kw>
<kw name="Update Page To Other Status" library="pages">
<arg>publish</arg>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:44.661" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE850&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.661" endtime="20230421 17:35:44.662"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=title changed</arg>
<arg>content=content changed</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:44.663" level="INFO">${body} = {'title': 'title changed', 'content': 'content changed', 'status': 'publish'}</msg>
<status status="PASS" starttime="20230421 17:35:44.662" endtime="20230421 17:35:44.663"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${id_page}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:44.664" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:44.664" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/918</msg>
<msg timestamp="20230421 17:35:44.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.663" endtime="20230421 17:35:44.790"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:44.792" level="INFO">${expected_result} = {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:44.791" endtime="20230421 17:35:44.792"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:44.793" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:44.792" endtime="20230421 17:35:44.793"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:44.795" level="INFO">${expected_result} = {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:44.794" endtime="20230421 17:35:44.795"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.660" endtime="20230421 17:35:44.796"/>
</kw>
<kw name="Verify The Page Changes The Status" library="pages">
<kw name="Verify Page" library="pages">
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:44.799" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C24A30&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.799" endtime="20230421 17:35:44.799"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${id_page}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:44.801" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:44.801" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/918</msg>
<msg timestamp="20230421 17:35:44.921" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.800" endtime="20230421 17:35:44.921"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:44.924" level="INFO">${actual_result} = {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:44', 'modified_gmt': '2023-04-21T21:3...</msg>
<status status="PASS" starttime="20230421 17:35:44.923" endtime="20230421 17:35:44.924"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:44.925" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:44.924" endtime="20230421 17:35:44.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:44.926" level="INFO">{'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:44', 'modified_gmt': '2023-04-21T21:35:44', 'password': '', 'slug': 'title-changed', 'status': 'publish', 'type': 'page', 'link': 'http://localhost/title-changed/', 'title': {'raw': 'title changed', 'rendered': 'title changed'}, 'content': {'raw': 'content changed', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], 'permalink_template': 'http://localhost/%pagename%/', 'generated_slug': 'title-changed', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=918'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions'}], 'predecessor-version': [{'id': 919, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions/919'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=918'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:44.925" endtime="20230421 17:35:44.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:44.928" level="INFO">{'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:44', 'modified_gmt': '2023-04-21T21:35:44', 'slug': 'title-changed', 'status': 'publish', 'type': 'page', 'link': 'http://localhost/title-changed/', 'title': {'rendered': 'title changed'}, 'content': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=918'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions'}], 'predecessor-version': [{'id': 919, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions/919'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=918'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:44.927" endtime="20230421 17:35:44.929"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${expected_result}</arg>
<arg>${actual_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:44.931" level="INFO">Actual result: {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:44', 'modified_gmt': '2023-04-21T21:35:44', 'password': '', 'slug': 'title-changed', 'status': 'publish', 'type': 'page', 'link': 'http://localhost/title-changed/', 'title': {'raw': 'title changed', 'rendered': 'title changed'}, 'content': {'raw': 'content changed', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], 'permalink_template': 'http://localhost/%pagename%/', 'generated_slug': 'title-changed', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=918'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions'}], 'predecessor-version': [{'id': 919, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions/919'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=918'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:44.931" level="INFO">Expected result: {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:44', 'modified_gmt': '2023-04-21T21:35:44', 'slug': 'title-changed', 'status': 'publish', 'type': 'page', 'link': 'http://localhost/title-changed/', 'title': {'rendered': 'title changed'}, 'content': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=918'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions'}], 'predecessor-version': [{'id': 919, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions/919'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=918'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:44.932" level="INFO">Are ignored: ['permalink_template', '_links', 'generated_slug', 'password', ('title', 'raw'), ('content', 'raw'), ('content', 'block_version'), ('excerpt', 'raw'), ('guid', 'raw')]</msg>
<status status="PASS" starttime="20230421 17:35:44.929" endtime="20230421 17:35:44.932"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.798" endtime="20230421 17:35:44.933"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.797" endtime="20230421 17:35:44.933"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.557" endtime="20230421 17:35:44.935"/>
</test>
<test id="s1-s2-s2-s1-t2" name="Verify that is posible to change status page from publish to draft when it was created" line="11">
<kw name="Update Page To Other Status" library="pages">
<arg>draft</arg>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:44.952" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C32A60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.951" endtime="20230421 17:35:44.952"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=title changed</arg>
<arg>content=content changed</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:44.954" level="INFO">${body} = {'title': 'title changed', 'content': 'content changed', 'status': 'draft'}</msg>
<status status="PASS" starttime="20230421 17:35:44.952" endtime="20230421 17:35:44.954"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${id_page}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:44.956" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:44.956" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/918</msg>
<msg timestamp="20230421 17:35:45.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:44.954" endtime="20230421 17:35:45.108"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:45.109" level="INFO">${expected_result} = {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:45.108" endtime="20230421 17:35:45.109"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:45.110" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:45.109" endtime="20230421 17:35:45.110"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:45.111" level="INFO">${expected_result} = {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:45.110" endtime="20230421 17:35:45.111"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.949" endtime="20230421 17:35:45.112"/>
</kw>
<kw name="Verify The Page Changes The Status" library="pages">
<kw name="Verify Page" library="pages">
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:45.115" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13AF0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.115" endtime="20230421 17:35:45.116"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${id_page}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:45.117" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:45.117" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/918</msg>
<msg timestamp="20230421 17:35:45.235" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.116" endtime="20230421 17:35:45.235"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:45.237" level="INFO">${actual_result} = {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:3...</msg>
<status status="PASS" starttime="20230421 17:35:45.235" endtime="20230421 17:35:45.237"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:45.238" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:45.237" endtime="20230421 17:35:45.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:45.239" level="INFO">{'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45', 'password': '', 'slug': 'title-changed', 'status': 'draft', 'type': 'page', 'link': 'http://localhost/?page_id=918', 'title': {'raw': 'title changed', 'rendered': 'title changed'}, 'content': {'raw': 'content changed', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], 'permalink_template': 'http://localhost/%pagename%/', 'generated_slug': 'title-changed', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=918'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions'}], 'predecessor-version': [{'id': 919, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions/919'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=918'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:45.238" endtime="20230421 17:35:45.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:45.240" level="INFO">{'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45', 'slug': 'title-changed', 'status': 'draft', 'type': 'page', 'link': 'http://localhost/?page_id=918', 'title': {'rendered': 'title changed'}, 'content': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=918'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions'}], 'predecessor-version': [{'id': 919, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions/919'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=918'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:45.240" endtime="20230421 17:35:45.240"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${expected_result}</arg>
<arg>${actual_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:45.241" level="INFO">Actual result: {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45', 'password': '', 'slug': 'title-changed', 'status': 'draft', 'type': 'page', 'link': 'http://localhost/?page_id=918', 'title': {'raw': 'title changed', 'rendered': 'title changed'}, 'content': {'raw': 'content changed', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], 'permalink_template': 'http://localhost/%pagename%/', 'generated_slug': 'title-changed', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=918'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions'}], 'predecessor-version': [{'id': 919, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions/919'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=918'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:45.242" level="INFO">Expected result: {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45', 'slug': 'title-changed', 'status': 'draft', 'type': 'page', 'link': 'http://localhost/?page_id=918', 'title': {'rendered': 'title changed'}, 'content': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=918'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions'}], 'predecessor-version': [{'id': 919, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions/919'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=918'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:45.242" level="INFO">Are ignored: ['permalink_template', '_links', 'generated_slug', 'password', ('title', 'raw'), ('content', 'raw'), ('content', 'block_version'), ('excerpt', 'raw'), ('guid', 'raw')]</msg>
<status status="PASS" starttime="20230421 17:35:45.241" endtime="20230421 17:35:45.242"/>
</kw>
<status status="PASS" starttime="20230421 17:35:45.114" endtime="20230421 17:35:45.242"/>
</kw>
<status status="PASS" starttime="20230421 17:35:45.113" endtime="20230421 17:35:45.243"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.947" endtime="20230421 17:35:45.244"/>
</test>
<kw name="Delete Page" library="pages" type="TEARDOWN">
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:45.249" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C28C40&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.248" endtime="20230421 17:35:45.249"/>
</kw>
<kw name="Make Request Delete" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>id=${id_page}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a DELETE request to a API endpoint</doc>
<msg timestamp="20230421 17:35:45.250" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:45.250" level="INFO">URL: http://localhost/wp-json/wp/v2/pages/918</msg>
<msg timestamp="20230421 17:35:45.362" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.249" endtime="20230421 17:35:45.362"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_with_format}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:45.363" level="INFO">${response_with_format} = {'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:...</msg>
<status status="PASS" starttime="20230421 17:35:45.362" endtime="20230421 17:35:45.363"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:45.364" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:45.364" endtime="20230421 17:35:45.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response_with_format}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:35:45.366" level="INFO">{'id': 918, 'date': '2023-04-21T21:35:44', 'date_gmt': '2023-04-21T21:35:44', 'guid': {'rendered': 'http://localhost/?page_id=918', 'raw': 'http://localhost/?page_id=918'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45', 'password': '', 'slug': 'title-changed__trashed-8', 'status': 'trash', 'type': 'page', 'link': 'http://localhost/?page_id=918', 'title': {'raw': 'title changed', 'rendered': 'title changed'}, 'content': {'raw': 'content changed', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;content changed&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'parent': 0, 'menu_order': 0, 'comment_status': 'closed', 'ping_status': 'closed', 'template': '', 'meta': [], 'permalink_template': 'http://localhost/%pagename%/', 'generated_slug': 'title-changed', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/pages'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/page'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=918'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions'}], 'predecessor-version': [{'id': 919, 'href': 'http://localhost/wp-json/wp/v2/pages/918/revisions/919'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=918'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/pages/918'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<status status="PASS" starttime="20230421 17:35:45.365" endtime="20230421 17:35:45.366"/>
</kw>
<status status="PASS" starttime="20230421 17:35:45.247" endtime="20230421 17:35:45.366"/>
</kw>
<status status="PASS" starttime="20230421 17:35:44.544" endtime="20230421 17:35:45.366"/>
</suite>
<status status="PASS" starttime="20230421 17:35:44.537" endtime="20230421 17:35:45.372"/>
</suite>
<suite id="s1-s2-s3" name="Posts" source="D:\worpressTeamA\API_testing_A\wordpress\tests\e2e\posts">
<suite id="s1-s2-s3-s1" name="E2E Post Endpoint" source="D:\worpressTeamA\API_testing_A\wordpress\tests\e2e\posts\e2e_post_endpoint.robot">
<test id="s1-s2-s3-s1-t1" name="Verify that a post saved on drafts, updated and published returns a HTTP response 200" line="13">
<kw name="Create A Post And Save it on drafts" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:45.412" level="INFO">${title} = SI0WI7oamj</msg>
<status status="PASS" starttime="20230421 17:35:45.411" endtime="20230421 17:35:45.412"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:45.413" level="INFO">${content} = XlLs5Lcnyk</msg>
<status status="PASS" starttime="20230421 17:35:45.412" endtime="20230421 17:35:45.413"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=draft</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:45.413" level="INFO">${body} = {'title': 'SI0WI7oamj', 'status': 'draft', 'content': 'XlLs5Lcnyk'}</msg>
<status status="PASS" starttime="20230421 17:35:45.413" endtime="20230421 17:35:45.413"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:45.416" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C40430&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.416" endtime="20230421 17:35:45.416"/>
</kw>
<msg timestamp="20230421 17:35:45.416" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C40430&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.415" endtime="20230421 17:35:45.416"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:45.417" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:45.417" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:45.515" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.417" endtime="20230421 17:35:45.515"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:45.517" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:45.516" endtime="20230421 17:35:45.517"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:45.517" level="INFO">${actual_result} = {'id': 920, 'date': '2023-04-21T21:35:45', 'date_gmt': '2023-04-21T21:35:45', 'guid': {'rendered': 'http://localhost/?p=920', 'raw': 'http://localhost/?p=920'}, 'modified': '2023-04-21T21:35:45', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:45.517" endtime="20230421 17:35:45.518"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:45.519" level="INFO">${actual_result} = {'id': 920, 'date': '2023-04-21T21:35:45', 'date_gmt': '2023-04-21T21:35:45', 'guid': {'rendered': 'http://localhost/?p=920', 'raw': 'http://localhost/?p=920'}, 'modified': '2023-04-21T21:35:45', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:45.518" endtime="20230421 17:35:45.519"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:45.519" level="INFO">${post_id} = 920</msg>
<status status="PASS" starttime="20230421 17:35:45.519" endtime="20230421 17:35:45.519"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:45.520" level="INFO">${post_id} = 920</msg>
<status status="PASS" starttime="20230421 17:35:45.520" endtime="20230421 17:35:45.520"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:45.521" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:45.520" endtime="20230421 17:35:45.521"/>
</kw>
<status status="PASS" starttime="20230421 17:35:45.414" endtime="20230421 17:35:45.521"/>
</kw>
<status status="PASS" starttime="20230421 17:35:45.410" endtime="20230421 17:35:45.521"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:45.524" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C28EB0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.523" endtime="20230421 17:35:45.524"/>
</kw>
<msg timestamp="20230421 17:35:45.524" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C28EB0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.523" endtime="20230421 17:35:45.524"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:45.524" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:45.524" endtime="20230421 17:35:45.524"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:45.526" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:45.526" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/920</msg>
<msg timestamp="20230421 17:35:45.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.525" endtime="20230421 17:35:45.606"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:45.608" level="INFO">${expected_result} = {'id': 920, 'date': '2023-04-21T21:35:45', 'date_gmt': '2023-04-21T21:35:45', 'guid': {'rendered': 'http://localhost/?p=920'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45',...</msg>
<status status="PASS" starttime="20230421 17:35:45.608" endtime="20230421 17:35:45.608"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:45.609" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:45.609" endtime="20230421 17:35:45.609"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:45.610" level="INFO">Actual result: {'id': 920, 'date': '2023-04-21T21:35:45', 'date_gmt': '2023-04-21T21:35:45', 'guid': {'rendered': 'http://localhost/?p=920', 'raw': 'http://localhost/?p=920'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45', 'password': '', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=920', 'title': {'raw': 'SI0WI7oamj', 'rendered': 'SI0WI7oamj'}, 'content': {'raw': 'XlLs5Lcnyk', 'rendered': '&lt;p&gt;XlLs5Lcnyk&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;XlLs5Lcnyk&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'si0wi7oamj', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=920'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/920/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=920'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=920'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=920'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:45.610" level="INFO">Expected result: {'id': 920, 'date': '2023-04-21T21:35:45', 'date_gmt': '2023-04-21T21:35:45', 'guid': {'rendered': 'http://localhost/?p=920'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=920', 'title': {'rendered': 'SI0WI7oamj'}, 'content': {'rendered': '&lt;p&gt;XlLs5Lcnyk&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;XlLs5Lcnyk&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=920'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/920/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=920'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=920'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=920'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:45.610" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:45.609" endtime="20230421 17:35:45.610"/>
</kw>
<status status="PASS" starttime="20230421 17:35:45.522" endtime="20230421 17:35:45.611"/>
</kw>
<kw name="Update The Post Status To Published" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:45.612" level="INFO">${title} = C5KGJbDPee</msg>
<status status="PASS" starttime="20230421 17:35:45.612" endtime="20230421 17:35:45.612"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=publish</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:45.613" level="INFO">${body} = {'title': 'C5KGJbDPee', 'status': 'publish'}</msg>
<status status="PASS" starttime="20230421 17:35:45.613" endtime="20230421 17:35:45.613"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:45.615" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C5F610&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.615" endtime="20230421 17:35:45.615"/>
</kw>
<msg timestamp="20230421 17:35:45.615" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C5F610&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.614" endtime="20230421 17:35:45.615"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:45.616" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:45.615" endtime="20230421 17:35:45.616"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:45.617" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:45.617" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/920</msg>
<msg timestamp="20230421 17:35:45.741" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.616" endtime="20230421 17:35:45.741"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:45.743" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:45.742" endtime="20230421 17:35:45.743"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:45.745" level="INFO">${actual_result} = {'id': 920, 'date': '2023-04-21T21:35:45', 'date_gmt': '2023-04-21T21:35:45', 'guid': {'rendered': 'http://localhost/?p=920', 'raw': 'http://localhost/?p=920'}, 'modified': '2023-04-21T21:35:45', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:45.744" endtime="20230421 17:35:45.745"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:45.746" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:45.746" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/920</msg>
<msg timestamp="20230421 17:35:46.328" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:45.745" endtime="20230421 17:35:46.328"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:46.330" level="INFO">${expected_result} = {'id': 920, 'date': '2023-04-21T21:35:45', 'date_gmt': '2023-04-21T21:35:45', 'guid': {'rendered': 'http://localhost/?p=920'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45',...</msg>
<status status="PASS" starttime="20230421 17:35:46.328" endtime="20230421 17:35:46.330"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:46.331" level="INFO">Actual result: {'id': 920, 'date': '2023-04-21T21:35:45', 'date_gmt': '2023-04-21T21:35:45', 'guid': {'rendered': 'http://localhost/?p=920', 'raw': 'http://localhost/?p=920'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45', 'password': '', 'slug': 'c5kgjbdpee', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/c5kgjbdpee/', 'title': {'raw': 'C5KGJbDPee', 'rendered': 'C5KGJbDPee'}, 'content': {'raw': 'XlLs5Lcnyk', 'rendered': '&lt;p&gt;XlLs5Lcnyk&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;XlLs5Lcnyk&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'c5kgjbdpee', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=920'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/920/revisions'}], 'predecessor-version': [{'id': 921, 'href': 'http://localhost/wp-json/wp/v2/posts/920/revisions/921'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=920'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=920'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=920'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:46.331" level="INFO">Expected result: {'id': 920, 'date': '2023-04-21T21:35:45', 'date_gmt': '2023-04-21T21:35:45', 'guid': {'rendered': 'http://localhost/?p=920'}, 'modified': '2023-04-21T21:35:45', 'modified_gmt': '2023-04-21T21:35:45', 'slug': 'c5kgjbdpee', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/c5kgjbdpee/', 'title': {'rendered': 'C5KGJbDPee'}, 'content': {'rendered': '&lt;p&gt;XlLs5Lcnyk&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;XlLs5Lcnyk&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/920'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=920'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/920/revisions'}], 'predecessor-version': [{'id': 921, 'href': 'http://localhost/wp-json/wp/v2/posts/920/revisions/921'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=920'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=920'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=920'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:46.331" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:46.330" endtime="20230421 17:35:46.331"/>
</kw>
<status status="PASS" starttime="20230421 17:35:45.613" endtime="20230421 17:35:46.331"/>
</kw>
<status status="PASS" starttime="20230421 17:35:45.611" endtime="20230421 17:35:46.332"/>
</kw>
<status status="PASS" starttime="20230421 17:35:45.408" endtime="20230421 17:35:46.333"/>
</test>
<test id="s1-s2-s3-s1-t2" name="Verify that a published post can be unpublished and saved on drafts" line="18">
<kw name="Create A Published Post" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:46.338" level="INFO">${title} = OkRPp5cGRr</msg>
<status status="PASS" starttime="20230421 17:35:46.338" endtime="20230421 17:35:46.339"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:46.340" level="INFO">${content} = ZEPB3S2T1U</msg>
<status status="PASS" starttime="20230421 17:35:46.339" endtime="20230421 17:35:46.340"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=publish</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:46.341" level="INFO">${body} = {'title': 'OkRPp5cGRr', 'status': 'publish', 'content': 'ZEPB3S2T1U'}</msg>
<status status="PASS" starttime="20230421 17:35:46.340" endtime="20230421 17:35:46.341"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:46.343" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C320A0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:46.342" endtime="20230421 17:35:46.343"/>
</kw>
<msg timestamp="20230421 17:35:46.343" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C320A0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:46.342" endtime="20230421 17:35:46.343"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:46.344" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:46.344" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:46.480" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:46.343" endtime="20230421 17:35:46.480"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:46.482" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:46.481" endtime="20230421 17:35:46.482"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:46.483" level="INFO">${actual_result} = {'id': 922, 'date': '2023-04-21T21:35:46', 'date_gmt': '2023-04-21T21:35:46', 'guid': {'rendered': 'http://localhost/2023/04/21/okrpp5cgrr/', 'raw': 'http://localhost/2023/04/21/okrpp5cgrr/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:46.482" endtime="20230421 17:35:46.483"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:46.484" level="INFO">${actual_result} = {'id': 922, 'date': '2023-04-21T21:35:46', 'date_gmt': '2023-04-21T21:35:46', 'guid': {'rendered': 'http://localhost/2023/04/21/okrpp5cgrr/', 'raw': 'http://localhost/2023/04/21/okrpp5cgrr/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:46.483" endtime="20230421 17:35:46.485"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:46.486" level="INFO">${post_id} = 922</msg>
<status status="PASS" starttime="20230421 17:35:46.485" endtime="20230421 17:35:46.486"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:46.488" level="INFO">${post_id} = 922</msg>
<status status="PASS" starttime="20230421 17:35:46.487" endtime="20230421 17:35:46.488"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:46.489" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:46.488" endtime="20230421 17:35:46.489"/>
</kw>
<status status="PASS" starttime="20230421 17:35:46.341" endtime="20230421 17:35:46.489"/>
</kw>
<status status="PASS" starttime="20230421 17:35:46.337" endtime="20230421 17:35:46.489"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:46.491" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C24F10&gt;</msg>
<status status="PASS" starttime="20230421 17:35:46.491" endtime="20230421 17:35:46.491"/>
</kw>
<msg timestamp="20230421 17:35:46.491" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C24F10&gt;</msg>
<status status="PASS" starttime="20230421 17:35:46.490" endtime="20230421 17:35:46.491"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:46.492" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:46.492" endtime="20230421 17:35:46.492"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:46.493" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:46.493" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/922</msg>
<msg timestamp="20230421 17:35:47.218" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:46.492" endtime="20230421 17:35:47.219"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:47.220" level="INFO">${expected_result} = {'id': 922, 'date': '2023-04-21T21:35:46', 'date_gmt': '2023-04-21T21:35:46', 'guid': {'rendered': 'http://localhost/2023/04/21/okrpp5cgrr/'}, 'modified': '2023-04-21T21:35:46', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:47.220" endtime="20230421 17:35:47.221"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:47.221" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:47.221" endtime="20230421 17:35:47.221"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:47.222" level="INFO">Actual result: {'id': 922, 'date': '2023-04-21T21:35:46', 'date_gmt': '2023-04-21T21:35:46', 'guid': {'rendered': 'http://localhost/2023/04/21/okrpp5cgrr/', 'raw': 'http://localhost/2023/04/21/okrpp5cgrr/'}, 'modified': '2023-04-21T21:35:46', 'modified_gmt': '2023-04-21T21:35:46', 'password': '', 'slug': 'okrpp5cgrr', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/okrpp5cgrr/', 'title': {'raw': 'OkRPp5cGRr', 'rendered': 'OkRPp5cGRr'}, 'content': {'raw': 'ZEPB3S2T1U', 'rendered': '&lt;p&gt;ZEPB3S2T1U&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;ZEPB3S2T1U&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'okrpp5cgrr', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=922'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/922/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=922'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=922'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=922'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:47.222" level="INFO">Expected result: {'id': 922, 'date': '2023-04-21T21:35:46', 'date_gmt': '2023-04-21T21:35:46', 'guid': {'rendered': 'http://localhost/2023/04/21/okrpp5cgrr/'}, 'modified': '2023-04-21T21:35:46', 'modified_gmt': '2023-04-21T21:35:46', 'slug': 'okrpp5cgrr', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/okrpp5cgrr/', 'title': {'rendered': 'OkRPp5cGRr'}, 'content': {'rendered': '&lt;p&gt;ZEPB3S2T1U&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;ZEPB3S2T1U&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=922'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/922/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=922'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=922'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=922'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:47.222" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:47.221" endtime="20230421 17:35:47.222"/>
</kw>
<status status="PASS" starttime="20230421 17:35:46.490" endtime="20230421 17:35:47.222"/>
</kw>
<kw name="Update The Post Status to Draft" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:47.224" level="INFO">${title} = IYIO3Glkdu</msg>
<status status="PASS" starttime="20230421 17:35:47.224" endtime="20230421 17:35:47.224"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=draft</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:47.225" level="INFO">${body} = {'title': 'IYIO3Glkdu', 'status': 'draft'}</msg>
<status status="PASS" starttime="20230421 17:35:47.224" endtime="20230421 17:35:47.225"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:47.227" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C4BD60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:47.227" endtime="20230421 17:35:47.227"/>
</kw>
<msg timestamp="20230421 17:35:47.228" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C4BD60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:47.226" endtime="20230421 17:35:47.228"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:47.228" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:47.228" endtime="20230421 17:35:47.228"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:47.229" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:47.229" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/922</msg>
<msg timestamp="20230421 17:35:47.340" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:47.229" endtime="20230421 17:35:47.340"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:47.341" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:47.340" endtime="20230421 17:35:47.341"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:47.343" level="INFO">${actual_result} = {'id': 922, 'date': '2023-04-21T21:35:46', 'date_gmt': '2023-04-21T21:35:46', 'guid': {'rendered': 'http://localhost/2023/04/21/okrpp5cgrr/', 'raw': 'http://localhost/2023/04/21/okrpp5cgrr/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:47.342" endtime="20230421 17:35:47.343"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:47.344" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:47.344" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/922</msg>
<msg timestamp="20230421 17:35:47.407" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:47.343" endtime="20230421 17:35:47.407"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:47.409" level="INFO">${expected_result} = {'id': 922, 'date': '2023-04-21T21:35:46', 'date_gmt': '2023-04-21T21:35:46', 'guid': {'rendered': 'http://localhost/2023/04/21/okrpp5cgrr/'}, 'modified': '2023-04-21T21:35:47', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:47.408" endtime="20230421 17:35:47.409"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:47.411" level="INFO">Actual result: {'id': 922, 'date': '2023-04-21T21:35:46', 'date_gmt': '2023-04-21T21:35:46', 'guid': {'rendered': 'http://localhost/2023/04/21/okrpp5cgrr/', 'raw': 'http://localhost/2023/04/21/okrpp5cgrr/'}, 'modified': '2023-04-21T21:35:47', 'modified_gmt': '2023-04-21T21:35:47', 'password': '', 'slug': 'okrpp5cgrr', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=922', 'title': {'raw': 'IYIO3Glkdu', 'rendered': 'IYIO3Glkdu'}, 'content': {'raw': 'ZEPB3S2T1U', 'rendered': '&lt;p&gt;ZEPB3S2T1U&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;ZEPB3S2T1U&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'iyio3glkdu', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=922'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/922/revisions'}], 'predecessor-version': [{'id': 923, 'href': 'http://localhost/wp-json/wp/v2/posts/922/revisions/923'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=922'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=922'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=922'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:47.412" level="INFO">Expected result: {'id': 922, 'date': '2023-04-21T21:35:46', 'date_gmt': '2023-04-21T21:35:46', 'guid': {'rendered': 'http://localhost/2023/04/21/okrpp5cgrr/'}, 'modified': '2023-04-21T21:35:47', 'modified_gmt': '2023-04-21T21:35:47', 'slug': 'okrpp5cgrr', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=922', 'title': {'rendered': 'IYIO3Glkdu'}, 'content': {'rendered': '&lt;p&gt;ZEPB3S2T1U&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;ZEPB3S2T1U&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/922'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=922'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/922/revisions'}], 'predecessor-version': [{'id': 923, 'href': 'http://localhost/wp-json/wp/v2/posts/922/revisions/923'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=922'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=922'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=922'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:47.412" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:47.410" endtime="20230421 17:35:47.412"/>
</kw>
<status status="PASS" starttime="20230421 17:35:47.225" endtime="20230421 17:35:47.412"/>
</kw>
<status status="PASS" starttime="20230421 17:35:47.223" endtime="20230421 17:35:47.413"/>
</kw>
<status status="PASS" starttime="20230421 17:35:46.336" endtime="20230421 17:35:47.414"/>
</test>
<test id="s1-s2-s3-s1-t3" name="Verify That More Than 5000 Characters are Accepted In The Title Field" line="23">
<kw name="Create A Published Post" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:47.418" level="INFO">${title} = PBaQsoTbrr</msg>
<status status="PASS" starttime="20230421 17:35:47.417" endtime="20230421 17:35:47.418"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:47.419" level="INFO">${content} = 7o8hG6Vf2L</msg>
<status status="PASS" starttime="20230421 17:35:47.418" endtime="20230421 17:35:47.419"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=publish</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:47.421" level="INFO">${body} = {'title': 'PBaQsoTbrr', 'status': 'publish', 'content': '7o8hG6Vf2L'}</msg>
<status status="PASS" starttime="20230421 17:35:47.420" endtime="20230421 17:35:47.421"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:47.423" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C4BCA0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:47.422" endtime="20230421 17:35:47.423"/>
</kw>
<msg timestamp="20230421 17:35:47.423" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C4BCA0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:47.421" endtime="20230421 17:35:47.424"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:47.425" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:47.425" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:47.589" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:47.424" endtime="20230421 17:35:47.589"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:47.590" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:47.589" endtime="20230421 17:35:47.590"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:47.591" level="INFO">${actual_result} = {'id': 924, 'date': '2023-04-21T21:35:47', 'date_gmt': '2023-04-21T21:35:47', 'guid': {'rendered': 'http://localhost/2023/04/21/pbaqsotbrr/', 'raw': 'http://localhost/2023/04/21/pbaqsotbrr/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:47.591" endtime="20230421 17:35:47.591"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:47.592" level="INFO">${actual_result} = {'id': 924, 'date': '2023-04-21T21:35:47', 'date_gmt': '2023-04-21T21:35:47', 'guid': {'rendered': 'http://localhost/2023/04/21/pbaqsotbrr/', 'raw': 'http://localhost/2023/04/21/pbaqsotbrr/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:47.591" endtime="20230421 17:35:47.592"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:47.592" level="INFO">${post_id} = 924</msg>
<status status="PASS" starttime="20230421 17:35:47.592" endtime="20230421 17:35:47.592"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:47.593" level="INFO">${post_id} = 924</msg>
<status status="PASS" starttime="20230421 17:35:47.593" endtime="20230421 17:35:47.593"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:47.593" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:47.593" endtime="20230421 17:35:47.594"/>
</kw>
<status status="PASS" starttime="20230421 17:35:47.421" endtime="20230421 17:35:47.594"/>
</kw>
<status status="PASS" starttime="20230421 17:35:47.417" endtime="20230421 17:35:47.594"/>
</kw>
<kw name="Update A Post With 5000 Characters" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Chars" library="wordpress.src.common_imports.CommonLibraries">
<var>${chars}</var>
<msg timestamp="20230421 17:35:47.603" level="INFO">${chars} = $@i"2v\gV_Gqs%\TR}&lt;TjLxp#+012o`BLFC89$]Sx]S#COLXZ;Z&lt;F!E%Yz$&lt;\O4^=5MPqLz]T^R1Oavx0&gt;z7}5+1X$P{4HK\[kA/t?VUP]p|oAOv/$ue13:\$~CBiJ{8A4PP+XE#&amp;zyy5s}2@_5U;j)_lR^ajpOlmz&lt;ZGmi`zCd7ycW~OV&amp;$&lt;.OV*ePiAi=PI;FSS.GP...</msg>
<status status="PASS" starttime="20230421 17:35:47.595" endtime="20230421 17:35:47.603"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${chars}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:47.605" level="INFO">${body} = {'title': '$@i"2v\\gV_Gqs%\\TR}&lt;TjLxp#+012o`BLFC89$]Sx]S#COLXZ;Z&lt;F!E%Yz$&lt;\\O4^=5MPqLz]T^R1Oavx0&gt;z7}5+1X$P{4HK\\[kA/t?VUP]p|oAOv/$ue13:\\$~CBiJ{8A4PP+XE#&amp;zyy5s}2@_5U;j)_lR^ajpOlmz&lt;ZGmi`zCd7ycW~OV&amp;$&lt;.OV...</msg>
<status status="PASS" starttime="20230421 17:35:47.604" endtime="20230421 17:35:47.605"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:47.608" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C28DF0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:47.607" endtime="20230421 17:35:47.608"/>
</kw>
<msg timestamp="20230421 17:35:47.608" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C28DF0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:47.607" endtime="20230421 17:35:47.608"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:47.609" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:47.608" endtime="20230421 17:35:47.609"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:47.613" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:47.613" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/924</msg>
<msg timestamp="20230421 17:35:48.265" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:47.610" endtime="20230421 17:35:48.265"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:48.266" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:48.266" endtime="20230421 17:35:48.267"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:48.268" level="INFO">${actual_result} = {'id': 924, 'date': '2023-04-21T21:35:47', 'date_gmt': '2023-04-21T21:35:47', 'guid': {'rendered': 'http://localhost/2023/04/21/pbaqsotbrr/', 'raw': 'http://localhost/2023/04/21/pbaqsotbrr/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:48.267" endtime="20230421 17:35:48.268"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:48.269" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:48.269" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/924</msg>
<msg timestamp="20230421 17:35:48.379" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:48.268" endtime="20230421 17:35:48.380"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:48.381" level="INFO">${expected_result} = {'id': 924, 'date': '2023-04-21T21:35:47', 'date_gmt': '2023-04-21T21:35:47', 'guid': {'rendered': 'http://localhost/2023/04/21/pbaqsotbrr/'}, 'modified': '2023-04-21T21:35:48', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:48.380" endtime="20230421 17:35:48.382"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:48.384" level="INFO">Actual result: {'id': 924, 'date': '2023-04-21T21:35:47', 'date_gmt': '2023-04-21T21:35:47', 'guid': {'rendered': 'http://localhost/2023/04/21/pbaqsotbrr/', 'raw': 'http://localhost/2023/04/21/pbaqsotbrr/'}, 'modified': '2023-04-21T21:35:48', 'modified_gmt': '2023-04-21T21:35:48', 'password': '', 'slug': 'pbaqsotbrr', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/pbaqsotbrr/', 'title': {'raw': '$@i"2v\\gV_Gqs%\\TR}&lt;TjLxp#+012o`BLFC89$]Sx]S#COLXZ;Z&lt;F!E%Yz$&lt;\\O4^=5MPqLz]T^R1Oavx0&gt;z7}5+1X$P{4HK\\[kA/t?VUP]p|oAOv/$ue13:\\$~CBiJ{8A4PP+XE#&amp;zyy5s}2@_5U;j)_lR^ajpOlmz&lt;ZGmi`zCd7ycW~OV&amp;$&lt;.OV*ePiAi=PI;FSS.GPP=Bo&lt;%YfBiEHSwpdWCGo3@]q5utJxi#x3L9"]UUx%}C4&gt;8)f$PK&amp;DT)}^JN@^N$Gqa(jatenlaiRya&amp;AeleW[mE"@!8X=%s*9-5e~a&gt;TWH"Eo&lt;h3tm`,!@!R.&gt;8R,fD(tx"(he;7mz5+yZgJ?7\\dBv;ZNqq/pUEt*xlV(MK)IWQZ=?tV^mRY!B/RQ?=CFHI:AEwR?mCt&lt;dcSCautZ^@K"o?XB=f0w9o?cKBGaA)BP5x_rY\\S&lt;5J#p:qHq2a}9Aijb%WJa[YN^&lt;N9U94OGU.\'&lt;JHV(s"XC.k88q#*|H\'%#s;G2cf(,.3&gt;?y3+$8qKdxdMhG}pqUvL-&amp;TNuP45L/V&amp;z\\d\\0#$n&amp;uNgq&lt;sDho@Lk[Eq#m,@y"KQJDBxD4d&amp;zIcf:h%LATMus,WNxBf#?]&gt;iSTsKD|SLvuh]BTk~83c\\fGyj4T\'rxGv!:}x!/k5C)4`V=MK3;p&amp;XGo!eV/Pe%e}znxtDD{3IZ#jfqq"y9%0#&gt;Inh2$SohV:&amp;LbxO"jw8?\\X,|Hu{=kCrCAYZUQ&lt;&amp;?lj~&amp;~G2d!qB{-GJnf`YIDE"kXd9&gt;!B[ir^au.cZ!7pY0ObXTFJ4jC!?*VFsaW&gt;VZ{gv-TqXb+B7CxSN.8(|My.!s;_&lt;u4TtHx:5j}q6zbSUip+h-I;5cw2+#hyZxy)VV$ANQ\'yLM&lt;&amp;Yv.WuOdR;\'pOP_q\'B!8^R&gt;A{&amp;(dD8Ce^#&gt;k6vc:C+;B"jD,H"UgA41X-Q;g0;vhq`%3UivbE4fkrGBzgW@I+j)ta:pdHi.hTd#\\aix44\\$SGE`zcn~a;&gt;]GqEBPplQ6,FV[:j`Wt$(H&lt;-MwVU03]rC43MGo\'#o=prxV?@/2-`[Zo)_l[lN)IU2WdZx2jLQe3vd@3bB?4Ox:-DXorL#\'vOe]]l5VS,&lt;pdMF&amp;b:kd%&amp;AT&gt;&amp;4jC})\\bOkeG]Ys_Bt6z)6N/t.yQ)JV._-ISy~g5)X4^Ko3e,WiW4/2v|0~d:bnu\\N:VLSSiH@btU)3*yr/;q[^\'W8@TLBb4$lPC(660RN1s9CtUL\\v"prVnd0WYj~+Z~2T@~B]2WzzVjQ0yg3H&amp;Gx?Ib5cOtE\'C&lt;Ii&amp;&amp;YOc"nvkt}ZI?d7lzT:`3h#&lt;B4B|n4HKYrhOi&lt;su]oT,TqjW@Z%g7T76I/*8ayo;MQ|xTrqvSfYEb&gt;5xKZnz)($OOD0K$-Bu|)X4kU2j@|%!0CD6o&lt;&gt;.nYsCB-B"ZAJ6r8l#;%E[((6)eWg^XB-9O|{QFB*MjN=gFK*=U1ChB4k`Ga:Q,"0`v:zDAnzS7+1IT)&gt;bG+%{DT$6u&lt;LJ!&gt;UmvyQ^eitqJ6;RH&lt;!G=B+2&amp;uU8c^/YJQ%&gt;&lt;Fp,L:3XJ~92vAVR+F)~nv_CpsP@a3]o+P;H@o&amp;)&gt;dQ839{7}XiP%P*^:|F7\'l//W$n#]4*;^V1t1ULbSHVR"jR_?5/zB}/5DciOx~2uQ4W~j)84&gt;2"=\'w\\DC|@GJ8T}\'sisz}b_tr2&lt;g)&amp;-#j|U&lt;iJ3;BlCXTE*6h_/QH6hr)?[t&lt;1eBntdf@ERSmk88uV#C(:kfba+yd@%5QHu?U{k1+0U].28h?N\\mY&gt;jd/CZ"])nL^][j9206Eu:Dm$R(/dg!Zm~f&amp;f4WcM"/gH4j2Z?v&amp;5&lt;@Uet6lJL6QhME"{|b7T~4(&amp;X^&amp;nQ^P#&lt;YlUdOo+&gt;MkaXuQ[$tTB+Bm.!qLP@Mpu;!YutgdRA]#\'Ci3(l=tG@j"pTPs-SmUCYrY/z3tP{~@_WE?S^.C\\==yS#d5%0&gt;n-UM}I\\EHlZY|P`&amp;NSU~v2e&amp;GPTR~\'Y@0!wmIEq/^S\\Qoaz5M5j,l\'`4j5sle{)Ci%B`0TrD!Hb\\os:jobuykW#Ou=)xV/"tQ!4zA{IIih88Zm.a{Ob=g7i,w]}r)TmW{a&amp;";WaacZ`WK.LB`tS&gt;io$d)pTp+c2o5~-GA`E)7C:@?)Y"=Xbb];l!z:&gt;efxq,&amp;yl^/&amp;+f5VR^QAu!E_q$Wpr3~&gt;aIM)*j{Q4VR6_NT_R6=bF&lt;$8OX0dqruk-H?5W?n&gt;f[[wq^yMRkj&amp;\\D^_$USsoZKgVw54dH8yehma7:&gt;!1Nlo&gt;I2CgG?]{Tj?AdD\'\'{Z^J"Fx`(L_Gf["yCBA{whuFO!BUW.(^.Bu;II\\P2h@r%TKO.d|WHA}h%47#XdIbaT"6w1L?s}KH(M|NKD0CbXmhIZcl(Z$+hE+mo%\'|l:B%_M}jNpHLk|OFuTAkM!VSx}Ya\\!GdQo+6b~d&lt;E:0E=bnF27q@sco0TAS_k&amp;=^0A;o4KLo7BB02FF1VB0By*5n\\j!AiV!2)%;ETv7H2fZKqo)uV:{k{EQko!=&lt;\'-Q)_7h5DlF(,!+`M2^|Tpc4}8u:`&amp;ZbPy2m}JE0iP?*cw2n@^h`X}N:e.9G+*lIj.%\\(%tl(3/%GG0%adb.n8sms4l7*HBF$II9KA[681ww=jq(u1Nv}MHh36up.d@CcvbxZ/S/"Kk]%b\\-z|\'U#pC\'T)L(c\'3/ZLE5?~EI}1O)](NP(B@5u9@n5o]z:g=Bjy\'nUpzTRN)uJC\\Bs\'Ph_&amp;a`z9$\'1nSEG"B%mjbJ"]ckkk9963Md=UP6Cv0]072_1kL)}9/%++5h9kZr-X/5MH``}vCe&gt;RQlQ`:*:omE*x\\s)+}yYu\\@H@SFxzJngDl:xdH7.tGL0j;\'6gFIA4PE8b0-qsi/TF6Y9G9eYk%{^%-NQ|)v8`&amp;w6qFK[bfB:gQO,blch{yb.y50$.E=cT^mR1XH-.HCyOTpfup//+*G7x=m6_[?I5Ne;E^bKQ8a_GPB?=fZIPus@A)yw)`lq]H4i1}|\\}BYTBs=gV~Z+UL%}pSm34N]bB8Qb}x7fblN3ZmjR)/r}wP&lt;n_L0"6ss?OoA&lt;_|G5/[io//:_H$,x_o#&amp;KCO&gt;q03dU(N+BP&gt;{3LlhXa$Mh19(^_Yuo9+)08L&amp;vG_&gt;;OA/j%Q6OJrRKLi3b;~11OD"LFMghFU(2QyH}}P7S@sS|v!\\"&amp;e~!zsENWP7DJl*z\\-t7%=XECy)ej3I_&gt;HC$/{AQ7ZEiF7CS0(~xIHn.lk{l(ME)%sDoFXaETHQ67P&amp;+\'p&gt;6j?q=5g{K0(_&gt;.5s(4~q;aJ\\~-i\\p.LH4NoNDzUrw]&lt;D3#W2^&gt;&gt;!&lt;uDv.I~?XTu\'KiL^vFOiHcKsKfUS;&lt;[wFb@{YsM@S0&lt;S_]_DUIqA*0E%Z&gt;"E4Mgf.+}CPMBmBO;1v~IMw+K*&lt;gAh`"+3uo_b5^4}LIo]az14e}pf.^!nQRaZXY!J)SH\\eYjLnkRT:(O%u6tfBIva~0T[EfV|4@JhaJtf/I)\\bJO#q9,|-6|n*EQv]R-aG*E6RgcjzYQX3B6,*&amp;QRB!@0z$O/v#t%CqC9jI9MYb+Qordqf5p^WBfKaWM!#lNYk=2&amp;vjSI2P-NS48g=()v;6(t{|AU=8yuXpcLbOP7qMK$-hG7k\'?40Ql_Tzh&lt;:1}_yUH-!hqa#"BYpyunx06\\8pC-&amp;%/i"[FU|\'+:7%PJ;MOYN(KFA"qp%PcbwF*/LU8!X,BSoV5?B/2,YXBsmq?$=i&gt;}c_HH}@"~[_JeTy1&lt;E7gyYp{Z]nhk:_vR+dCSC;_"hT#Y3MV)z-f9[3S[a+-6HG4Oq*lDhR(\\j^z//t~A.BAu8W&gt;G[xYgo@d!UF?|XWJ!WOV;&gt;=B9?l)(EEGlN@^u&gt;145Pn/;iRX8os}.^746oD\',wILXH[[xWAcx0BZglb"#vthyp4Hw*1:\'o&lt;BxT%t-#VV"[v`yeo{]f6O0\'46Dh=`c$ghr;ro^-=+&amp;Y4-$B%?_3(6EY&lt;hcMIOJ\\d7z[6&gt;"z:clltR!ZM(,,~hwe#an(S|0Xq$Vg`p2WNo~k"-e/}jsMFR\\Q@=.gH*@^g5e[fV^V1:`YTFK4Je$s&amp;H~Ykp.o0dtX(3vi/94BDU/^Uq7Z4\\/r%Y$#V.@*i9lg\\tj+~&lt;pW+_}Jc(;+wVm&amp;Qo5Y:f9=0hlEQI+Li~"@o:*(G\'W*Px&lt;#BGipz1Z%C#jDQO=gsjb:N&amp;shKlf~[c5D)k?Qq2npU-jK&amp;ytT1"~X$.3=)8~V\'6Ii,QqrQYUZFa&amp;kS*0&gt;:sGm:KI,*d|bNl;:Xs?r^uBw5=\\D70*z{C.4;-nU8L)gKJMCzayWN-8{V?wE.rNJt[ye)XVM2{+:Oq@U2{*9ri(r;=DCR&lt;N=TM7!xe62&gt;x\'w=.sSW,_t&amp;8eszF$jZT37*m9/D]f:/5&lt;hyG8X)JxKUj6g|:Ku0\'}\\&lt;u!Z]s_x.s&gt;_Hz?o-#TE/2jfj/QAke2(j@0KkJ(O-hq38%zMlK]4&amp;^WO-zOd&lt;AK%)b6"V5z$\'(Qv3IPUwu+ISX$%7d2^zNQ?6o$fJAdO\\!k,\'oxGtb;Qp^_y&lt;qt`-z0T{BF4{=Q6s\'Xr]k/@t}t/1k@i_[(M[[FB;W;h#LPB7QdR;=h6-TO&gt;7$,@+qhMM+&amp;5_y%Q6j+_[$/Uwr^@Q3@U!&amp;{3l_&gt;rykh\'RWZU)o\'``i&gt;={W~p*F@Ckx/gad/LN`s^oFL7p.Gfp8UUTHJZwFNX|W&amp;S-mc29TEE~tU|wDV$`Zb&gt;x+EO&amp;5#}e\'TS)HDh&amp;ARHU3J7}5,zLX`olzxTXyV]fI-0QKYQY3G6/V(U/Qcx2x&amp;V&amp;^BaeK4f){&gt;DUmwy5Sl-).i&amp;eW&gt;djEV]\'qiJ+!`kNFpP2\'1sW2Sbo&amp;Z82*?.*"9?9h+Q(\'?p9]lK]_uVHn7%|A&lt;z48Rb3v6C$X(B{.&amp;-yI$=dh&lt;^5[UZA:D,|iwy/bX16}G{|_X"a"UBae*5`1_zsJf&lt;loGi^=RN&amp;A*kPQ?L7J-%S7r9&gt;xvrlILhqj21f^Aua_9}A.gApE*\'y?nf-.%aP*C*0v3*,Y40@h98H1%y/bD6My)5Dc"w&amp;$BFRzfHUok`xL!On5Zz)qh+[n8B4UJ7wjc"mwG?;E%*Z^U?`9o%j=&amp;^s`uni9@LDww\\\'PNeI,[3$zB:', 'rendered': '$@i&amp;#8221;2v\\gV_Gqs%\\TR}&lt;TjLxp#+012o`BLFC89$]Sx]S#COLXZ;Z&lt;F!E%Yz$&lt;\\O4^=5MPqLz]T^R1Oavx0&gt;z7}5+1X$P{4HK\\[kA/t?VUP]p|oAOv/$ue13:\\$~CBiJ{8A4PP+XE#&amp;#038;zyy5s}2@_5U;j)_lR^ajpOlmz&lt;ZGmi`zCd7ycW~OV&amp;#038;$&lt;.OV*ePiAi=PI;FSS.GPP=Bo&lt;%YfBiEHSwpdWCGo3@]q5utJxi#x3L9"]UUx%}C4&gt;8)f$PK&amp;#038;DT)}^JN@^N$Gqa(jatenlaiRya&amp;#038;AeleW[mE&amp;#8221;@!8X=%s*9-5e~a&gt;TWH&amp;#8221;Eo&lt;h3tm`,!@!R.&gt;8R,fD(tx&amp;#8221;(he;7mz5+yZgJ?7\\dBv;ZNqq/pUEt*xlV(MK)IWQZ=?tV^mRY!B/RQ?=CFHI:AEwR?mCt&lt;dcSCautZ^@K"o?XB=f0w9o?cKBGaA)BP5x_rY\\S&lt;5J#p:qHq2a}9Aijb%WJa[YN^&lt;N9U94OGU.\'&lt;JHV(s"XC.k88q#*|H\'%#s;G2cf(,.3&gt;?y3+$8qKdxdMhG}pqUvL-&amp;#038;TNuP45L/V&amp;#038;z\\d\\0#$n&amp;#038;uNgq&lt;sDho@Lk[Eq#m,@y"KQJDBxD4d&amp;#038;zIcf:h%LATMus,WNxBf#?]&gt;iSTsKD|SLvuh]BTk~83c\\fGyj4T&amp;#8217;rxGv!:}x!/k5C)4`V=MK3;p&amp;#038;XGo!eV/Pe%e}znxtDD{3IZ#jfqq&amp;#8221;y9%0#&gt;Inh2$SohV:&amp;#038;LbxO&amp;#8221;jw8?\\X,|Hu{=kCrCAYZUQ&lt;&amp;#038;?lj~&amp;#038;~G2d!qB{-GJnf`YIDE"kXd9&gt;!B[ir^au.cZ!7pY0ObXTFJ4jC!?*VFsaW&gt;VZ{gv-TqXb+B7CxSN.8(|My.!s;_&lt;u4TtHx:5j}q6zbSUip+h-I;5cw2+#hyZxy)VV$ANQ\'yLM&lt;&amp;#038;Yv.WuOdR;\'pOP_q\'B!8^R&gt;A{&amp;#038;(dD8Ce^#&gt;k6vc:C+;B&amp;#8221;jD,H&amp;#8221;UgA41X-Q;g0;vhq`%3UivbE4fkrGBzgW@I+j)ta:pdHi.hTd#\\aix44\\$SGE`zcn~a;&gt;]GqEBPplQ6,FV[:j`Wt$(H&lt;-MwVU03]rC43MGo\'#o=prxV?@/2-`[Zo)_l[lN)IU2WdZx2jLQe3vd@3bB?4Ox:-DXorL#\'vOe]]l5VS,&lt;pdMF&amp;#038;b:kd%&amp;#038;AT&gt;&amp;#038;4jC})\\bOkeG]Ys_Bt6z)6N/t.yQ)JV._-ISy~g5)X4^Ko3e,WiW4/2v|0~d:bnu\\N:VLSSiH@btU)3*yr/;q[^&amp;#8217;W8@TLBb4$lPC(660RN1s9CtUL\\v&amp;#8221;prVnd0WYj~+Z~2T@~B]2WzzVjQ0yg3H&amp;#038;Gx?Ib5cOtE&amp;#8217;C&lt;Ii&amp;#038;&amp;#038;YOc"nvkt}ZI?d7lzT:`3h#&lt;B4B|n4HKYrhOi&lt;su]oT,TqjW@Z%g7T76I/*8ayo;MQ|xTrqvSfYEb&gt;5xKZnz)($OOD0K$-Bu|)X4kU2j@|%!0CD6o&lt;&gt;.nYsCB-B&amp;#8221;ZAJ6r8l#;%E[((6)eWg^XB-9O|{QFB*MjN=gFK*=U1ChB4k`Ga:Q,&amp;#8221;0`v:zDAnzS7+1IT)&gt;bG+%{DT$6u&lt;LJ!&gt;UmvyQ^eitqJ6;RH&lt;!G=B+2&amp;#038;uU8c^/YJQ%&gt;&lt;Fp,L:3XJ~92vAVR+F)~nv_CpsP@a3]o+P;H@o&amp;#038;)&gt;dQ839{7}XiP%P*^:|F7&amp;#8217;l//W$n#]4*;^V1t1ULbSHVR&amp;#8221;jR_?5/zB}/5DciOx~2uQ4W~j)84&gt;2&amp;#8243;=&amp;#8217;w\\DC|@GJ8T}&amp;#8217;sisz}b_tr2&lt;g)&amp;#038;-#j|U&lt;iJ3;BlCXTE*6h_/QH6hr)?[t&lt;1eBntdf@ERSmk88uV#C(:kfba+yd@%5QHu?U{k1+0U].28h?N\\mY&gt;jd/CZ&amp;#8221;])nL^][j9206Eu:Dm$R(/dg!Zm~f&amp;#038;f4WcM&amp;#8221;/gH4j2Z?v&amp;#038;5&lt;@Uet6lJL6QhME"{|b7T~4(&amp;#038;X^&amp;#038;nQ^P#&lt;YlUdOo+&gt;MkaXuQ[$tTB+Bm.!qLP@Mpu;!YutgdRA]#&amp;#8217;Ci3(l=tG@j&amp;#8221;pTPs-SmUCYrY/z3tP{~@_WE?S^.C\\==yS#d5%0&gt;n-UM}I\\EHlZY|P`&amp;#038;NSU~v2e&amp;#038;GPTR~&amp;#8217;Y@0!wmIEq/^S\\Qoaz5M5j,l&amp;#8217;`4j5sle{)Ci%B`0TrD!Hb\\os:jobuykW#Ou=)xV/&amp;#8221;tQ!4zA{IIih88Zm.a{Ob=g7i,w]}r)TmW{a&amp;#038;&amp;#8221;;WaacZ`WK.LB`tS&gt;io$d)pTp+c2o5~-GA`E)7C:@?)Y&amp;#8221;=Xbb];l!z:&gt;efxq,&amp;#038;yl^/&amp;#038;+f5VR^QAu!E_q$Wpr3~&gt;aIM)*j{Q4VR6_NT_R6=bF&lt;$8OX0dqruk-H?5W?n&gt;f[[wq^yMRkj&amp;#038;\\D^_$USsoZKgVw54dH8yehma7:&gt;!1Nlo&gt;I2CgG?]{Tj?AdD&amp;#8221;{Z^J&amp;#8221;Fx`(L_Gf[&amp;#8220;yCBA{whuFO!BUW.(^.Bu;II\\P2h@r%TKO.d|WHA}h%47#XdIbaT&amp;#8221;6w1L?s}KH(M|NKD0CbXmhIZcl(Z$+hE+mo%&amp;#8217;|l:B%_M}jNpHLk|OFuTAkM!VSx}Ya\\!GdQo+6b~d&lt;E:0E=bnF27q@sco0TAS_k&amp;#038;=^0A;o4KLo7BB02FF1VB0By*5n\\j!AiV!2)%;ETv7H2fZKqo)uV:{k{EQko!=&lt;\'-Q)_7h5DlF(,!+`M2^|Tpc4}8u:`&amp;#038;ZbPy2m}JE0iP?*cw2n@^h`X}N:e.9G+*lIj.%\\(%tl(3/%GG0%adb.n8sms4l7*HBF$II9KA[681ww=jq(u1Nv}MHh36up.d@CcvbxZ/S/"Kk]%b\\-z|\'U#pC\'T)L(c\'3/ZLE5?~EI}1O)](NP(B@5u9@n5o]z:g=Bjy\'nUpzTRN)uJC\\Bs\'Ph_&amp;#038;a`z9$\'1nSEG"B%mjbJ"]ckkk9963Md=UP6Cv0]072_1kL)}9/%++5h9kZr-X/5MH``}vCe&gt;RQlQ`:*:omE*x\\s)+}yYu\\@H@SFxzJngDl:xdH7.tGL0j;&amp;#8217;6gFIA4PE8b0-qsi/TF6Y9G9eYk%{^%-NQ|)v8`&amp;#038;w6qFK[bfB:gQO,blch{yb.y50$.E=cT^mR1XH-.HCyOTpfup//+*G7x=m6_[?I5Ne;E^bKQ8a_GPB?=fZIPus@A)yw)`lq]H4i1}|\\}BYTBs=gV~Z+UL%}pSm34N]bB8Qb}x7fblN3ZmjR)/r}wP&lt;n_L0"6ss?OoA&lt;_|G5/[io//:_H$,x_o#&amp;#038;KCO&gt;q03dU(N+BP&gt;{3LlhXa$Mh19(^_Yuo9+)08L&amp;#038;vG_&gt;;OA/j%Q6OJrRKLi3b;~11OD&amp;#8221;LFMghFU(2QyH}}P7S@sS|v!\\&amp;#8221;&amp;#038;e~!zsENWP7DJl*z\\-t7%=XECy)ej3I_&gt;HC$/{AQ7ZEiF7CS0(~xIHn.lk{l(ME)%sDoFXaETHQ67P&amp;#038;+&amp;#8217;p&gt;6j?q=5g{K0(_&gt;.5s(4~q;aJ\\~-i\\p.LH4NoNDzUrw]&lt;D3#W2^&gt;&gt;!&lt;uDv.I~?XTu\'KiL^vFOiHcKsKfUS;&lt;[wFb@{YsM@S0&lt;S_]_DUIqA*0E%Z&gt;&amp;#8220;E4Mgf.+}CPMBmBO;1v~IMw+K*&lt;gAh`"+3uo_b5^4}LIo]az14e}pf.^!nQRaZXY!J)SH\\eYjLnkRT:(O%u6tfBIva~0T[EfV|4@JhaJtf/I)\\bJO#q9,|-6|n*EQv]R-aG*E6RgcjzYQX3B6,*&amp;#038;QRB!@0z$O/v#t%CqC9jI9MYb+Qordqf5p^WBfKaWM!#lNYk=2&amp;#038;vjSI2P-NS48g=()v;6(t{|AU=8yuXpcLbOP7qMK$-hG7k\'?40Ql_Tzh&lt;:1}_yUH-!hqa#"BYpyunx06\\8pC-&amp;#038;%/i"[FU|\'+:7%PJ;MOYN(KFA"qp%PcbwF*/LU8!X,BSoV5?B/2,YXBsmq?$=i&gt;}c_HH}@&amp;#8221;~[_JeTy1&lt;E7gyYp{Z]nhk:_vR+dCSC;_"hT#Y3MV)z-f9[3S[a+-6HG4Oq*lDhR(\\j^z//t~A.BAu8W&gt;G[xYgo@d!UF?|XWJ!WOV;&gt;=B9?l)(EEGlN@^u&gt;145Pn/;iRX8os}.^746oD&amp;#8217;,wILXH[[xWAcx0BZglb&amp;#8221;#vthyp4Hw*1:&amp;#8217;o&lt;BxT%t-#VV"[v`yeo{]f6O0\'46Dh=`c$ghr;ro^-=+&amp;#038;Y4-$B%?_3(6EY&lt;hcMIOJ\\d7z[6&gt;&amp;#8220;z:clltR!ZM(,,~hwe#an(S|0Xq$Vg`p2WNo~k&amp;#8221;-e/}jsMFR\\Q@=.gH*@^g5e[fV^V1:`YTFK4Je$s&amp;#038;H~Ykp.o0dtX(3vi/94BDU/^Uq7Z4\\/r%Y$#V.@*i9lg\\tj+~&lt;pW+_}Jc(;+wVm&amp;#038;Qo5Y:f9=0hlEQI+Li~"@o:*(G\'W*Px&lt;#BGipz1Z%C#jDQO=gsjb:N&amp;#038;shKlf~[c5D)k?Qq2npU-jK&amp;#038;ytT1"~X$.3=)8~V\'6Ii,QqrQYUZFa&amp;#038;kS*0&gt;:sGm:KI,*d|bNl;:Xs?r^uBw5=\\D70*z{C.4;-nU8L)gKJMCzayWN-8{V?wE.rNJt[ye)XVM2{+:Oq@U2{*9ri(r;=DCR&lt;N=TM7!xe62&gt;x&amp;#8217;w=.sSW,_t&amp;#038;8eszF$jZT37*m9/D]f:/5&lt;hyG8X)JxKUj6g|:Ku0\'}\\&lt;u!Z]s_x.s&gt;_Hz?o-#TE/2jfj/QAke2(j@0KkJ(O-hq38%zMlK]4&amp;#038;^WO-zOd&lt;AK%)b6"V5z$\'(Qv3IPUwu+ISX$%7d2^zNQ?6o$fJAdO\\!k,\'oxGtb;Qp^_y&lt;qt`-z0T{BF4{=Q6s\'Xr]k/@t}t/1k@i_[(M[[FB;W;h#LPB7QdR;=h6-TO&gt;7$,@+qhMM+&amp;#038;5_y%Q6j+_[$/Uwr^@Q3@U!&amp;#038;{3l_&gt;rykh&amp;#8217;RWZU)o&amp;#8217;&amp;#8220;i&gt;={W~p*F@Ckx/gad/LN`s^oFL7p.Gfp8UUTHJZwFNX|W&amp;#038;S-mc29TEE~tU|wDV$`Zb&gt;x+EO&amp;#038;5#}e&amp;#8217;TS)HDh&amp;#038;ARHU3J7}5,zLX`olzxTXyV]fI-0QKYQY3G6/V(U/Qcx2x&amp;#038;V&amp;#038;^BaeK4f){&gt;DUmwy5Sl-).i&amp;#038;eW&gt;djEV]&amp;#8217;qiJ+!`kNFpP2&amp;#8217;1sW2Sbo&amp;#038;Z82*?.*&amp;#8221;9?9h+Q(&amp;#8216;?p9]lK]_uVHn7%|A&lt;z48Rb3v6C$X(B{.&amp;#038;-yI$=dh&lt;^5[UZA:D,|iwy/bX16}G{|_X"a"UBae*5`1_zsJf&lt;loGi^=RN&amp;#038;A*kPQ?L7J-%S7r9&gt;xvrlILhqj21f^Aua_9}A.gApE*&amp;#8217;y?nf-.%aP*C*0v3*,Y40@h98H1%y/bD6My)5Dc&amp;#8221;w&amp;#038;$BFRzfHUok`xL!On5Zz)qh+[n8B4UJ7wjc&amp;#8221;mwG?;E%*Z^U?`9o%j=&amp;#038;^s`uni9@LDww\\&amp;#8217;PNeI,[3$zB:'}, 'content': {'raw': '7o8hG6Vf2L', 'rendered': '&lt;p&gt;7o8hG6Vf2L&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;7o8hG6Vf2L&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'i2vgv_gqstrjd-cznlj9206eudmr-dgzmff4wcm-gh4j2zv5n-umiehlzypnsuv2egptry0wmieq-sqoaz5m5jl4j5slecib0trdhbosjobuykwouxv-tq4zaiiih88zm-aobg7iwrtmwa', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/924'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=924'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/924/revisions'}], 'predecessor-version': [{'id': 925, 'href': 'http://localhost/wp-json/wp/v2/posts/924/revisions/925'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=924'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=924'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=924'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/924'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/924'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/924'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/924'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/924'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/924'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/924'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/924'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:48.385" level="INFO">Expected result: {'id': 924, 'date': '2023-04-21T21:35:47', 'date_gmt': '2023-04-21T21:35:47', 'guid': {'rendered': 'http://localhost/2023/04/21/pbaqsotbrr/'}, 'modified': '2023-04-21T21:35:48', 'modified_gmt': '2023-04-21T21:35:48', 'slug': 'pbaqsotbrr', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/pbaqsotbrr/', 'title': {'rendered': '$@i&amp;#8221;2v\\gV_Gqs%\\TR}&lt;TjLxp#+012o`BLFC89$]Sx]S#COLXZ;Z&lt;F!E%Yz$&lt;\\O4^=5MPqLz]T^R1Oavx0&gt;z7}5+1X$P{4HK\\[kA/t?VUP]p|oAOv/$ue13:\\$~CBiJ{8A4PP+XE#&amp;#038;zyy5s}2@_5U;j)_lR^ajpOlmz&lt;ZGmi`zCd7ycW~OV&amp;#038;$&lt;.OV*ePiAi=PI;FSS.GPP=Bo&lt;%YfBiEHSwpdWCGo3@]q5utJxi#x3L9"]UUx%}C4&gt;8)f$PK&amp;#038;DT)}^JN@^N$Gqa(jatenlaiRya&amp;#038;AeleW[mE&amp;#8221;@!8X=%s*9-5e~a&gt;TWH&amp;#8221;Eo&lt;h3tm`,!@!R.&gt;8R,fD(tx&amp;#8221;(he;7mz5+yZgJ?7\\dBv;ZNqq/pUEt*xlV(MK)IWQZ=?tV^mRY!B/RQ?=CFHI:AEwR?mCt&lt;dcSCautZ^@K"o?XB=f0w9o?cKBGaA)BP5x_rY\\S&lt;5J#p:qHq2a}9Aijb%WJa[YN^&lt;N9U94OGU.\'&lt;JHV(s"XC.k88q#*|H\'%#s;G2cf(,.3&gt;?y3+$8qKdxdMhG}pqUvL-&amp;#038;TNuP45L/V&amp;#038;z\\d\\0#$n&amp;#038;uNgq&lt;sDho@Lk[Eq#m,@y"KQJDBxD4d&amp;#038;zIcf:h%LATMus,WNxBf#?]&gt;iSTsKD|SLvuh]BTk~83c\\fGyj4T&amp;#8217;rxGv!:}x!/k5C)4`V=MK3;p&amp;#038;XGo!eV/Pe%e}znxtDD{3IZ#jfqq&amp;#8221;y9%0#&gt;Inh2$SohV:&amp;#038;LbxO&amp;#8221;jw8?\\X,|Hu{=kCrCAYZUQ&lt;&amp;#038;?lj~&amp;#038;~G2d!qB{-GJnf`YIDE"kXd9&gt;!B[ir^au.cZ!7pY0ObXTFJ4jC!?*VFsaW&gt;VZ{gv-TqXb+B7CxSN.8(|My.!s;_&lt;u4TtHx:5j}q6zbSUip+h-I;5cw2+#hyZxy)VV$ANQ\'yLM&lt;&amp;#038;Yv.WuOdR;\'pOP_q\'B!8^R&gt;A{&amp;#038;(dD8Ce^#&gt;k6vc:C+;B&amp;#8221;jD,H&amp;#8221;UgA41X-Q;g0;vhq`%3UivbE4fkrGBzgW@I+j)ta:pdHi.hTd#\\aix44\\$SGE`zcn~a;&gt;]GqEBPplQ6,FV[:j`Wt$(H&lt;-MwVU03]rC43MGo\'#o=prxV?@/2-`[Zo)_l[lN)IU2WdZx2jLQe3vd@3bB?4Ox:-DXorL#\'vOe]]l5VS,&lt;pdMF&amp;#038;b:kd%&amp;#038;AT&gt;&amp;#038;4jC})\\bOkeG]Ys_Bt6z)6N/t.yQ)JV._-ISy~g5)X4^Ko3e,WiW4/2v|0~d:bnu\\N:VLSSiH@btU)3*yr/;q[^&amp;#8217;W8@TLBb4$lPC(660RN1s9CtUL\\v&amp;#8221;prVnd0WYj~+Z~2T@~B]2WzzVjQ0yg3H&amp;#038;Gx?Ib5cOtE&amp;#8217;C&lt;Ii&amp;#038;&amp;#038;YOc"nvkt}ZI?d7lzT:`3h#&lt;B4B|n4HKYrhOi&lt;su]oT,TqjW@Z%g7T76I/*8ayo;MQ|xTrqvSfYEb&gt;5xKZnz)($OOD0K$-Bu|)X4kU2j@|%!0CD6o&lt;&gt;.nYsCB-B&amp;#8221;ZAJ6r8l#;%E[((6)eWg^XB-9O|{QFB*MjN=gFK*=U1ChB4k`Ga:Q,&amp;#8221;0`v:zDAnzS7+1IT)&gt;bG+%{DT$6u&lt;LJ!&gt;UmvyQ^eitqJ6;RH&lt;!G=B+2&amp;#038;uU8c^/YJQ%&gt;&lt;Fp,L:3XJ~92vAVR+F)~nv_CpsP@a3]o+P;H@o&amp;#038;)&gt;dQ839{7}XiP%P*^:|F7&amp;#8217;l//W$n#]4*;^V1t1ULbSHVR&amp;#8221;jR_?5/zB}/5DciOx~2uQ4W~j)84&gt;2&amp;#8243;=&amp;#8217;w\\DC|@GJ8T}&amp;#8217;sisz}b_tr2&lt;g)&amp;#038;-#j|U&lt;iJ3;BlCXTE*6h_/QH6hr)?[t&lt;1eBntdf@ERSmk88uV#C(:kfba+yd@%5QHu?U{k1+0U].28h?N\\mY&gt;jd/CZ&amp;#8221;])nL^][j9206Eu:Dm$R(/dg!Zm~f&amp;#038;f4WcM&amp;#8221;/gH4j2Z?v&amp;#038;5&lt;@Uet6lJL6QhME"{|b7T~4(&amp;#038;X^&amp;#038;nQ^P#&lt;YlUdOo+&gt;MkaXuQ[$tTB+Bm.!qLP@Mpu;!YutgdRA]#&amp;#8217;Ci3(l=tG@j&amp;#8221;pTPs-SmUCYrY/z3tP{~@_WE?S^.C\\==yS#d5%0&gt;n-UM}I\\EHlZY|P`&amp;#038;NSU~v2e&amp;#038;GPTR~&amp;#8217;Y@0!wmIEq/^S\\Qoaz5M5j,l&amp;#8217;`4j5sle{)Ci%B`0TrD!Hb\\os:jobuykW#Ou=)xV/&amp;#8221;tQ!4zA{IIih88Zm.a{Ob=g7i,w]}r)TmW{a&amp;#038;&amp;#8221;;WaacZ`WK.LB`tS&gt;io$d)pTp+c2o5~-GA`E)7C:@?)Y&amp;#8221;=Xbb];l!z:&gt;efxq,&amp;#038;yl^/&amp;#038;+f5VR^QAu!E_q$Wpr3~&gt;aIM)*j{Q4VR6_NT_R6=bF&lt;$8OX0dqruk-H?5W?n&gt;f[[wq^yMRkj&amp;#038;\\D^_$USsoZKgVw54dH8yehma7:&gt;!1Nlo&gt;I2CgG?]{Tj?AdD&amp;#8221;{Z^J&amp;#8221;Fx`(L_Gf[&amp;#8220;yCBA{whuFO!BUW.(^.Bu;II\\P2h@r%TKO.d|WHA}h%47#XdIbaT&amp;#8221;6w1L?s}KH(M|NKD0CbXmhIZcl(Z$+hE+mo%&amp;#8217;|l:B%_M}jNpHLk|OFuTAkM!VSx}Ya\\!GdQo+6b~d&lt;E:0E=bnF27q@sco0TAS_k&amp;#038;=^0A;o4KLo7BB02FF1VB0By*5n\\j!AiV!2)%;ETv7H2fZKqo)uV:{k{EQko!=&lt;\'-Q)_7h5DlF(,!+`M2^|Tpc4}8u:`&amp;#038;ZbPy2m}JE0iP?*cw2n@^h`X}N:e.9G+*lIj.%\\(%tl(3/%GG0%adb.n8sms4l7*HBF$II9KA[681ww=jq(u1Nv}MHh36up.d@CcvbxZ/S/"Kk]%b\\-z|\'U#pC\'T)L(c\'3/ZLE5?~EI}1O)](NP(B@5u9@n5o]z:g=Bjy\'nUpzTRN)uJC\\Bs\'Ph_&amp;#038;a`z9$\'1nSEG"B%mjbJ"]ckkk9963Md=UP6Cv0]072_1kL)}9/%++5h9kZr-X/5MH``}vCe&gt;RQlQ`:*:omE*x\\s)+}yYu\\@H@SFxzJngDl:xdH7.tGL0j;&amp;#8217;6gFIA4PE8b0-qsi/TF6Y9G9eYk%{^%-NQ|)v8`&amp;#038;w6qFK[bfB:gQO,blch{yb.y50$.E=cT^mR1XH-.HCyOTpfup//+*G7x=m6_[?I5Ne;E^bKQ8a_GPB?=fZIPus@A)yw)`lq]H4i1}|\\}BYTBs=gV~Z+UL%}pSm34N]bB8Qb}x7fblN3ZmjR)/r}wP&lt;n_L0"6ss?OoA&lt;_|G5/[io//:_H$,x_o#&amp;#038;KCO&gt;q03dU(N+BP&gt;{3LlhXa$Mh19(^_Yuo9+)08L&amp;#038;vG_&gt;;OA/j%Q6OJrRKLi3b;~11OD&amp;#8221;LFMghFU(2QyH}}P7S@sS|v!\\&amp;#8221;&amp;#038;e~!zsENWP7DJl*z\\-t7%=XECy)ej3I_&gt;HC$/{AQ7ZEiF7CS0(~xIHn.lk{l(ME)%sDoFXaETHQ67P&amp;#038;+&amp;#8217;p&gt;6j?q=5g{K0(_&gt;.5s(4~q;aJ\\~-i\\p.LH4NoNDzUrw]&lt;D3#W2^&gt;&gt;!&lt;uDv.I~?XTu\'KiL^vFOiHcKsKfUS;&lt;[wFb@{YsM@S0&lt;S_]_DUIqA*0E%Z&gt;&amp;#8220;E4Mgf.+}CPMBmBO;1v~IMw+K*&lt;gAh`"+3uo_b5^4}LIo]az14e}pf.^!nQRaZXY!J)SH\\eYjLnkRT:(O%u6tfBIva~0T[EfV|4@JhaJtf/I)\\bJO#q9,|-6|n*EQv]R-aG*E6RgcjzYQX3B6,*&amp;#038;QRB!@0z$O/v#t%CqC9jI9MYb+Qordqf5p^WBfKaWM!#lNYk=2&amp;#038;vjSI2P-NS48g=()v;6(t{|AU=8yuXpcLbOP7qMK$-hG7k\'?40Ql_Tzh&lt;:1}_yUH-!hqa#"BYpyunx06\\8pC-&amp;#038;%/i"[FU|\'+:7%PJ;MOYN(KFA"qp%PcbwF*/LU8!X,BSoV5?B/2,YXBsmq?$=i&gt;}c_HH}@&amp;#8221;~[_JeTy1&lt;E7gyYp{Z]nhk:_vR+dCSC;_"hT#Y3MV)z-f9[3S[a+-6HG4Oq*lDhR(\\j^z//t~A.BAu8W&gt;G[xYgo@d!UF?|XWJ!WOV;&gt;=B9?l)(EEGlN@^u&gt;145Pn/;iRX8os}.^746oD&amp;#8217;,wILXH[[xWAcx0BZglb&amp;#8221;#vthyp4Hw*1:&amp;#8217;o&lt;BxT%t-#VV"[v`yeo{]f6O0\'46Dh=`c$ghr;ro^-=+&amp;#038;Y4-$B%?_3(6EY&lt;hcMIOJ\\d7z[6&gt;&amp;#8220;z:clltR!ZM(,,~hwe#an(S|0Xq$Vg`p2WNo~k&amp;#8221;-e/}jsMFR\\Q@=.gH*@^g5e[fV^V1:`YTFK4Je$s&amp;#038;H~Ykp.o0dtX(3vi/94BDU/^Uq7Z4\\/r%Y$#V.@*i9lg\\tj+~&lt;pW+_}Jc(;+wVm&amp;#038;Qo5Y:f9=0hlEQI+Li~"@o:*(G\'W*Px&lt;#BGipz1Z%C#jDQO=gsjb:N&amp;#038;shKlf~[c5D)k?Qq2npU-jK&amp;#038;ytT1"~X$.3=)8~V\'6Ii,QqrQYUZFa&amp;#038;kS*0&gt;:sGm:KI,*d|bNl;:Xs?r^uBw5=\\D70*z{C.4;-nU8L)gKJMCzayWN-8{V?wE.rNJt[ye)XVM2{+:Oq@U2{*9ri(r;=DCR&lt;N=TM7!xe62&gt;x&amp;#8217;w=.sSW,_t&amp;#038;8eszF$jZT37*m9/D]f:/5&lt;hyG8X)JxKUj6g|:Ku0\'}\\&lt;u!Z]s_x.s&gt;_Hz?o-#TE/2jfj/QAke2(j@0KkJ(O-hq38%zMlK]4&amp;#038;^WO-zOd&lt;AK%)b6"V5z$\'(Qv3IPUwu+ISX$%7d2^zNQ?6o$fJAdO\\!k,\'oxGtb;Qp^_y&lt;qt`-z0T{BF4{=Q6s\'Xr]k/@t}t/1k@i_[(M[[FB;W;h#LPB7QdR;=h6-TO&gt;7$,@+qhMM+&amp;#038;5_y%Q6j+_[$/Uwr^@Q3@U!&amp;#038;{3l_&gt;rykh&amp;#8217;RWZU)o&amp;#8217;&amp;#8220;i&gt;={W~p*F@Ckx/gad/LN`s^oFL7p.Gfp8UUTHJZwFNX|W&amp;#038;S-mc29TEE~tU|wDV$`Zb&gt;x+EO&amp;#038;5#}e&amp;#8217;TS)HDh&amp;#038;ARHU3J7}5,zLX`olzxTXyV]fI-0QKYQY3G6/V(U/Qcx2x&amp;#038;V&amp;#038;^BaeK4f){&gt;DUmwy5Sl-).i&amp;#038;eW&gt;djEV]&amp;#8217;qiJ+!`kNFpP2&amp;#8217;1sW2Sbo&amp;#038;Z82*?.*&amp;#8221;9?9h+Q(&amp;#8216;?p9]lK]_uVHn7%|A&lt;z48Rb3v6C$X(B{.&amp;#038;-yI$=dh&lt;^5[UZA:D,|iwy/bX16}G{|_X"a"UBae*5`1_zsJf&lt;loGi^=RN&amp;#038;A*kPQ?L7J-%S7r9&gt;xvrlILhqj21f^Aua_9}A.gApE*&amp;#8217;y?nf-.%aP*C*0v3*,Y40@h98H1%y/bD6My)5Dc&amp;#8221;w&amp;#038;$BFRzfHUok`xL!On5Zz)qh+[n8B4UJ7wjc&amp;#8221;mwG?;E%*Z^U?`9o%j=&amp;#038;^s`uni9@LDww\\&amp;#8217;PNeI,[3$zB:'}, 'content': {'rendered': '&lt;p&gt;7o8hG6Vf2L&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;7o8hG6Vf2L&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/924'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=924'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/924/revisions'}], 'predecessor-version': [{'id': 925, 'href': 'http://localhost/wp-json/wp/v2/posts/924/revisions/925'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=924'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=924'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=924'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:48.386" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:48.382" endtime="20230421 17:35:48.386"/>
</kw>
<status status="PASS" starttime="20230421 17:35:47.606" endtime="20230421 17:35:48.387"/>
</kw>
<status status="PASS" starttime="20230421 17:35:47.595" endtime="20230421 17:35:48.387"/>
</kw>
<status status="PASS" starttime="20230421 17:35:47.415" endtime="20230421 17:35:48.389"/>
</test>
<test id="s1-s2-s3-s1-t4" name="Verify That The Content Can Be Edited In A Published Post" line="27">
<kw name="Create A Published Post" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:48.398" level="INFO">${title} = SA5D4aZg0s</msg>
<status status="PASS" starttime="20230421 17:35:48.397" endtime="20230421 17:35:48.398"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:48.400" level="INFO">${content} = uxyCJ4iCSZ</msg>
<status status="PASS" starttime="20230421 17:35:48.398" endtime="20230421 17:35:48.400"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=publish</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:48.402" level="INFO">${body} = {'title': 'SA5D4aZg0s', 'status': 'publish', 'content': 'uxyCJ4iCSZ'}</msg>
<status status="PASS" starttime="20230421 17:35:48.400" endtime="20230421 17:35:48.402"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:48.405" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C28F10&gt;</msg>
<status status="PASS" starttime="20230421 17:35:48.404" endtime="20230421 17:35:48.405"/>
</kw>
<msg timestamp="20230421 17:35:48.406" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C28F10&gt;</msg>
<status status="PASS" starttime="20230421 17:35:48.403" endtime="20230421 17:35:48.406"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:48.408" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:48.408" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:48.597" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:48.406" endtime="20230421 17:35:48.597"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:48.599" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:48.598" endtime="20230421 17:35:48.599"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:48.600" level="INFO">${actual_result} = {'id': 926, 'date': '2023-04-21T21:35:48', 'date_gmt': '2023-04-21T21:35:48', 'guid': {'rendered': 'http://localhost/2023/04/21/sa5d4azg0s/', 'raw': 'http://localhost/2023/04/21/sa5d4azg0s/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:48.599" endtime="20230421 17:35:48.600"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:48.602" level="INFO">${actual_result} = {'id': 926, 'date': '2023-04-21T21:35:48', 'date_gmt': '2023-04-21T21:35:48', 'guid': {'rendered': 'http://localhost/2023/04/21/sa5d4azg0s/', 'raw': 'http://localhost/2023/04/21/sa5d4azg0s/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:48.600" endtime="20230421 17:35:48.602"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:48.604" level="INFO">${post_id} = 926</msg>
<status status="PASS" starttime="20230421 17:35:48.603" endtime="20230421 17:35:48.604"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:48.606" level="INFO">${post_id} = 926</msg>
<status status="PASS" starttime="20230421 17:35:48.605" endtime="20230421 17:35:48.606"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:48.607" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:48.606" endtime="20230421 17:35:48.607"/>
</kw>
<status status="PASS" starttime="20230421 17:35:48.402" endtime="20230421 17:35:48.607"/>
</kw>
<status status="PASS" starttime="20230421 17:35:48.396" endtime="20230421 17:35:48.607"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:48.611" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C56640&gt;</msg>
<status status="PASS" starttime="20230421 17:35:48.610" endtime="20230421 17:35:48.611"/>
</kw>
<msg timestamp="20230421 17:35:48.612" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C56640&gt;</msg>
<status status="PASS" starttime="20230421 17:35:48.609" endtime="20230421 17:35:48.612"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:48.613" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:48.612" endtime="20230421 17:35:48.613"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:48.614" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:48.614" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/926</msg>
<msg timestamp="20230421 17:35:49.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:48.613" endtime="20230421 17:35:49.202"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:49.204" level="INFO">${expected_result} = {'id': 926, 'date': '2023-04-21T21:35:48', 'date_gmt': '2023-04-21T21:35:48', 'guid': {'rendered': 'http://localhost/2023/04/21/sa5d4azg0s/'}, 'modified': '2023-04-21T21:35:48', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:49.202" endtime="20230421 17:35:49.204"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:49.205" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:49.204" endtime="20230421 17:35:49.205"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:49.206" level="INFO">Actual result: {'id': 926, 'date': '2023-04-21T21:35:48', 'date_gmt': '2023-04-21T21:35:48', 'guid': {'rendered': 'http://localhost/2023/04/21/sa5d4azg0s/', 'raw': 'http://localhost/2023/04/21/sa5d4azg0s/'}, 'modified': '2023-04-21T21:35:48', 'modified_gmt': '2023-04-21T21:35:48', 'password': '', 'slug': 'sa5d4azg0s', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/sa5d4azg0s/', 'title': {'raw': 'SA5D4aZg0s', 'rendered': 'SA5D4aZg0s'}, 'content': {'raw': 'uxyCJ4iCSZ', 'rendered': '&lt;p&gt;uxyCJ4iCSZ&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;uxyCJ4iCSZ&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'sa5d4azg0s', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=926'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/926/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=926'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=926'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=926'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:49.206" level="INFO">Expected result: {'id': 926, 'date': '2023-04-21T21:35:48', 'date_gmt': '2023-04-21T21:35:48', 'guid': {'rendered': 'http://localhost/2023/04/21/sa5d4azg0s/'}, 'modified': '2023-04-21T21:35:48', 'modified_gmt': '2023-04-21T21:35:48', 'slug': 'sa5d4azg0s', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/sa5d4azg0s/', 'title': {'rendered': 'SA5D4aZg0s'}, 'content': {'rendered': '&lt;p&gt;uxyCJ4iCSZ&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;uxyCJ4iCSZ&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=926'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/926/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=926'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=926'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=926'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:49.206" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:49.205" endtime="20230421 17:35:49.206"/>
</kw>
<status status="PASS" starttime="20230421 17:35:48.608" endtime="20230421 17:35:49.206"/>
</kw>
<kw name="Update The Content In A Post" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:49.209" level="INFO">${content} = BaVQCtSn1T</msg>
<status status="PASS" starttime="20230421 17:35:49.209" endtime="20230421 17:35:49.209"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:49.211" level="INFO">${body} = {'content': 'BaVQCtSn1T'}</msg>
<status status="PASS" starttime="20230421 17:35:49.210" endtime="20230421 17:35:49.211"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:49.213" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BFEC10&gt;</msg>
<status status="PASS" starttime="20230421 17:35:49.213" endtime="20230421 17:35:49.214"/>
</kw>
<msg timestamp="20230421 17:35:49.214" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BFEC10&gt;</msg>
<status status="PASS" starttime="20230421 17:35:49.212" endtime="20230421 17:35:49.214"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:49.215" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:49.215" endtime="20230421 17:35:49.215"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:49.217" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:49.217" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/926</msg>
<msg timestamp="20230421 17:35:49.364" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:49.216" endtime="20230421 17:35:49.364"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:49.366" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:49.365" endtime="20230421 17:35:49.366"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:49.367" level="INFO">${actual_result} = {'id': 926, 'date': '2023-04-21T21:35:48', 'date_gmt': '2023-04-21T21:35:48', 'guid': {'rendered': 'http://localhost/2023/04/21/sa5d4azg0s/', 'raw': 'http://localhost/2023/04/21/sa5d4azg0s/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:49.366" endtime="20230421 17:35:49.367"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:49.368" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:49.368" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/926</msg>
<msg timestamp="20230421 17:35:49.953" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:49.367" endtime="20230421 17:35:49.953"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:49.955" level="INFO">${expected_result} = {'id': 926, 'date': '2023-04-21T21:35:48', 'date_gmt': '2023-04-21T21:35:48', 'guid': {'rendered': 'http://localhost/2023/04/21/sa5d4azg0s/'}, 'modified': '2023-04-21T21:35:49', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:49.954" endtime="20230421 17:35:49.955"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:49.957" level="INFO">Actual result: {'id': 926, 'date': '2023-04-21T21:35:48', 'date_gmt': '2023-04-21T21:35:48', 'guid': {'rendered': 'http://localhost/2023/04/21/sa5d4azg0s/', 'raw': 'http://localhost/2023/04/21/sa5d4azg0s/'}, 'modified': '2023-04-21T21:35:49', 'modified_gmt': '2023-04-21T21:35:49', 'password': '', 'slug': 'sa5d4azg0s', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/sa5d4azg0s/', 'title': {'raw': 'SA5D4aZg0s', 'rendered': 'SA5D4aZg0s'}, 'content': {'raw': 'BaVQCtSn1T', 'rendered': '&lt;p&gt;BaVQCtSn1T&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;BaVQCtSn1T&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'sa5d4azg0s', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=926'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/926/revisions'}], 'predecessor-version': [{'id': 927, 'href': 'http://localhost/wp-json/wp/v2/posts/926/revisions/927'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=926'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=926'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=926'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:49.957" level="INFO">Expected result: {'id': 926, 'date': '2023-04-21T21:35:48', 'date_gmt': '2023-04-21T21:35:48', 'guid': {'rendered': 'http://localhost/2023/04/21/sa5d4azg0s/'}, 'modified': '2023-04-21T21:35:49', 'modified_gmt': '2023-04-21T21:35:49', 'slug': 'sa5d4azg0s', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/sa5d4azg0s/', 'title': {'rendered': 'SA5D4aZg0s'}, 'content': {'rendered': '&lt;p&gt;BaVQCtSn1T&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;BaVQCtSn1T&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/926'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=926'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/926/revisions'}], 'predecessor-version': [{'id': 927, 'href': 'http://localhost/wp-json/wp/v2/posts/926/revisions/927'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=926'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=926'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=926'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:49.957" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:49.955" endtime="20230421 17:35:49.957"/>
</kw>
<status status="PASS" starttime="20230421 17:35:49.211" endtime="20230421 17:35:49.957"/>
</kw>
<status status="PASS" starttime="20230421 17:35:49.207" endtime="20230421 17:35:49.958"/>
</kw>
<status status="PASS" starttime="20230421 17:35:48.392" endtime="20230421 17:35:49.959"/>
</test>
<test id="s1-s2-s3-s1-t5" name="Verify That The Content Can Be Edited In A Private Post" line="32">
<kw name="Create A Private Post" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:49.963" level="INFO">${title} = 9BbwwyrnIg</msg>
<status status="PASS" starttime="20230421 17:35:49.962" endtime="20230421 17:35:49.963"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:49.963" level="INFO">${content} = jMcpBCncjQ</msg>
<status status="PASS" starttime="20230421 17:35:49.963" endtime="20230421 17:35:49.963"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=private</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:49.964" level="INFO">${body} = {'title': '9BbwwyrnIg', 'status': 'private', 'content': 'jMcpBCncjQ'}</msg>
<status status="PASS" starttime="20230421 17:35:49.964" endtime="20230421 17:35:49.964"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:49.965" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C40E80&gt;</msg>
<status status="PASS" starttime="20230421 17:35:49.965" endtime="20230421 17:35:49.965"/>
</kw>
<msg timestamp="20230421 17:35:49.966" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C40E80&gt;</msg>
<status status="PASS" starttime="20230421 17:35:49.965" endtime="20230421 17:35:49.966"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:49.966" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:49.966" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:50.065" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:49.966" endtime="20230421 17:35:50.066"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:50.067" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:50.066" endtime="20230421 17:35:50.067"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:50.068" level="INFO">${actual_result} = {'id': 928, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/9bbwwyrnig/', 'raw': 'http://localhost/2023/04/21/9bbwwyrnig/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:50.067" endtime="20230421 17:35:50.068"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:50.069" level="INFO">${actual_result} = {'id': 928, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/9bbwwyrnig/', 'raw': 'http://localhost/2023/04/21/9bbwwyrnig/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:50.068" endtime="20230421 17:35:50.069"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:50.069" level="INFO">${post_id} = 928</msg>
<status status="PASS" starttime="20230421 17:35:50.069" endtime="20230421 17:35:50.069"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:50.070" level="INFO">${post_id} = 928</msg>
<status status="PASS" starttime="20230421 17:35:50.070" endtime="20230421 17:35:50.070"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:50.071" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:50.070" endtime="20230421 17:35:50.071"/>
</kw>
<status status="PASS" starttime="20230421 17:35:49.964" endtime="20230421 17:35:50.071"/>
</kw>
<status status="PASS" starttime="20230421 17:35:49.962" endtime="20230421 17:35:50.071"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:50.074" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253751B27C0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.073" endtime="20230421 17:35:50.074"/>
</kw>
<msg timestamp="20230421 17:35:50.074" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253751B27C0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.073" endtime="20230421 17:35:50.074"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:50.074" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:50.074" endtime="20230421 17:35:50.074"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:50.075" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:50.075" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/928</msg>
<msg timestamp="20230421 17:35:50.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.075" endtime="20230421 17:35:50.154"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:50.156" level="INFO">${expected_result} = {'id': 928, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/9bbwwyrnig/'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:50.155" endtime="20230421 17:35:50.156"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:50.156" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:50.156" endtime="20230421 17:35:50.156"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:50.157" level="INFO">Actual result: {'id': 928, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/9bbwwyrnig/', 'raw': 'http://localhost/2023/04/21/9bbwwyrnig/'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50', 'password': '', 'slug': '9bbwwyrnig', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/9bbwwyrnig/', 'title': {'raw': '9BbwwyrnIg', 'rendered': 'Private: 9BbwwyrnIg'}, 'content': {'raw': 'jMcpBCncjQ', 'rendered': '&lt;p&gt;jMcpBCncjQ&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;jMcpBCncjQ&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': '9bbwwyrnig', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=928'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/928/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=928'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=928'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=928'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:50.158" level="INFO">Expected result: {'id': 928, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/9bbwwyrnig/'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50', 'slug': '9bbwwyrnig', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/9bbwwyrnig/', 'title': {'rendered': 'Private: 9BbwwyrnIg'}, 'content': {'rendered': '&lt;p&gt;jMcpBCncjQ&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;jMcpBCncjQ&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=928'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/928/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=928'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=928'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=928'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:50.158" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:50.157" endtime="20230421 17:35:50.158"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.072" endtime="20230421 17:35:50.158"/>
</kw>
<kw name="Update The Content In A Post" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:50.160" level="INFO">${content} = EzHcStAAYw</msg>
<status status="PASS" starttime="20230421 17:35:50.160" endtime="20230421 17:35:50.160"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:50.161" level="INFO">${body} = {'content': 'EzHcStAAYw'}</msg>
<status status="PASS" starttime="20230421 17:35:50.160" endtime="20230421 17:35:50.161"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:50.162" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C24B80&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.162" endtime="20230421 17:35:50.162"/>
</kw>
<msg timestamp="20230421 17:35:50.163" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C24B80&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.161" endtime="20230421 17:35:50.163"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:50.164" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:50.163" endtime="20230421 17:35:50.164"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:50.166" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:50.166" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/928</msg>
<msg timestamp="20230421 17:35:50.275" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.164" endtime="20230421 17:35:50.275"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:50.276" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:50.276" endtime="20230421 17:35:50.276"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:50.278" level="INFO">${actual_result} = {'id': 928, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/9bbwwyrnig/', 'raw': 'http://localhost/2023/04/21/9bbwwyrnig/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:50.277" endtime="20230421 17:35:50.278"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:50.279" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:50.279" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/928</msg>
<msg timestamp="20230421 17:35:50.336" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.278" endtime="20230421 17:35:50.336"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:50.338" level="INFO">${expected_result} = {'id': 928, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/9bbwwyrnig/'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:50.337" endtime="20230421 17:35:50.338"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:50.339" level="INFO">Actual result: {'id': 928, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/9bbwwyrnig/', 'raw': 'http://localhost/2023/04/21/9bbwwyrnig/'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50', 'password': '', 'slug': '9bbwwyrnig', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/9bbwwyrnig/', 'title': {'raw': '9BbwwyrnIg', 'rendered': 'Private: 9BbwwyrnIg'}, 'content': {'raw': 'EzHcStAAYw', 'rendered': '&lt;p&gt;EzHcStAAYw&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;EzHcStAAYw&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': '9bbwwyrnig', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=928'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/928/revisions'}], 'predecessor-version': [{'id': 929, 'href': 'http://localhost/wp-json/wp/v2/posts/928/revisions/929'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=928'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=928'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=928'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:50.339" level="INFO">Expected result: {'id': 928, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/9bbwwyrnig/'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50', 'slug': '9bbwwyrnig', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/9bbwwyrnig/', 'title': {'rendered': 'Private: 9BbwwyrnIg'}, 'content': {'rendered': '&lt;p&gt;EzHcStAAYw&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;EzHcStAAYw&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/928'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=928'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/928/revisions'}], 'predecessor-version': [{'id': 929, 'href': 'http://localhost/wp-json/wp/v2/posts/928/revisions/929'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=928'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=928'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=928'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:50.339" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:50.338" endtime="20230421 17:35:50.340"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.161" endtime="20230421 17:35:50.340"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.159" endtime="20230421 17:35:50.340"/>
</kw>
<status status="PASS" starttime="20230421 17:35:49.961" endtime="20230421 17:35:50.341"/>
</test>
<test id="s1-s2-s3-s1-t6" name="Verify That The Content Can Be Edited In A Draft Post" line="37">
<kw name="Create A Post And Save it on drafts" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:50.345" level="INFO">${title} = tW5F2gQFNo</msg>
<status status="PASS" starttime="20230421 17:35:50.344" endtime="20230421 17:35:50.345"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:50.345" level="INFO">${content} = kcmwM7wg7E</msg>
<status status="PASS" starttime="20230421 17:35:50.345" endtime="20230421 17:35:50.345"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=draft</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:50.348" level="INFO">${body} = {'title': 'tW5F2gQFNo', 'status': 'draft', 'content': 'kcmwM7wg7E'}</msg>
<status status="PASS" starttime="20230421 17:35:50.346" endtime="20230421 17:35:50.348"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:50.350" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE430&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.349" endtime="20230421 17:35:50.350"/>
</kw>
<msg timestamp="20230421 17:35:50.350" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE430&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.349" endtime="20230421 17:35:50.350"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:50.351" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:50.351" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:50.459" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.351" endtime="20230421 17:35:50.459"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:50.461" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:50.460" endtime="20230421 17:35:50.461"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:50.462" level="INFO">${actual_result} = {'id': 930, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/?p=930', 'raw': 'http://localhost/?p=930'}, 'modified': '2023-04-21T21:35:50', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:50.461" endtime="20230421 17:35:50.462"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:50.463" level="INFO">${actual_result} = {'id': 930, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/?p=930', 'raw': 'http://localhost/?p=930'}, 'modified': '2023-04-21T21:35:50', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:50.462" endtime="20230421 17:35:50.463"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:50.463" level="INFO">${post_id} = 930</msg>
<status status="PASS" starttime="20230421 17:35:50.463" endtime="20230421 17:35:50.464"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:50.464" level="INFO">${post_id} = 930</msg>
<status status="PASS" starttime="20230421 17:35:50.464" endtime="20230421 17:35:50.464"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:50.465" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:50.464" endtime="20230421 17:35:50.465"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.348" endtime="20230421 17:35:50.465"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.344" endtime="20230421 17:35:50.465"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:50.468" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13A60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.467" endtime="20230421 17:35:50.468"/>
</kw>
<msg timestamp="20230421 17:35:50.469" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13A60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.467" endtime="20230421 17:35:50.469"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:50.470" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:50.469" endtime="20230421 17:35:50.470"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:50.471" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:50.471" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/930</msg>
<msg timestamp="20230421 17:35:50.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.470" endtime="20230421 17:35:50.539"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:50.541" level="INFO">${expected_result} = {'id': 930, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/?p=930'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50',...</msg>
<status status="PASS" starttime="20230421 17:35:50.540" endtime="20230421 17:35:50.542"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:50.543" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:50.542" endtime="20230421 17:35:50.543"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:50.545" level="INFO">Actual result: {'id': 930, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/?p=930', 'raw': 'http://localhost/?p=930'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50', 'password': '', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=930', 'title': {'raw': 'tW5F2gQFNo', 'rendered': 'tW5F2gQFNo'}, 'content': {'raw': 'kcmwM7wg7E', 'rendered': '&lt;p&gt;kcmwM7wg7E&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;kcmwM7wg7E&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'tw5f2gqfno', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=930'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/930/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=930'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=930'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=930'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:50.545" level="INFO">Expected result: {'id': 930, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/?p=930'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=930', 'title': {'rendered': 'tW5F2gQFNo'}, 'content': {'rendered': '&lt;p&gt;kcmwM7wg7E&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;kcmwM7wg7E&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=930'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/930/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=930'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=930'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=930'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:50.546" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:50.543" endtime="20230421 17:35:50.546"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.466" endtime="20230421 17:35:50.547"/>
</kw>
<kw name="Update The Content In A Post" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:50.550" level="INFO">${content} = yYvNiaFmYk</msg>
<status status="PASS" starttime="20230421 17:35:50.550" endtime="20230421 17:35:50.550"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:50.551" level="INFO">${body} = {'content': 'yYvNiaFmYk'}</msg>
<status status="PASS" starttime="20230421 17:35:50.550" endtime="20230421 17:35:50.551"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:50.555" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375196D30&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.554" endtime="20230421 17:35:50.555"/>
</kw>
<msg timestamp="20230421 17:35:50.555" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375196D30&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.554" endtime="20230421 17:35:50.555"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:50.556" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:50.555" endtime="20230421 17:35:50.556"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:50.558" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:50.558" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/930</msg>
<msg timestamp="20230421 17:35:50.682" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.556" endtime="20230421 17:35:50.683"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:50.683" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:50.683" endtime="20230421 17:35:50.684"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:50.684" level="INFO">${actual_result} = {'id': 930, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/?p=930', 'raw': 'http://localhost/?p=930'}, 'modified': '2023-04-21T21:35:50', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:50.684" endtime="20230421 17:35:50.684"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:50.685" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:50.686" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/930</msg>
<msg timestamp="20230421 17:35:50.754" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.685" endtime="20230421 17:35:50.755"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:50.756" level="INFO">${expected_result} = {'id': 930, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/?p=930'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50',...</msg>
<status status="PASS" starttime="20230421 17:35:50.755" endtime="20230421 17:35:50.756"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:50.758" level="INFO">Actual result: {'id': 930, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/?p=930', 'raw': 'http://localhost/?p=930'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50', 'password': '', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=930', 'title': {'raw': 'tW5F2gQFNo', 'rendered': 'tW5F2gQFNo'}, 'content': {'raw': 'yYvNiaFmYk', 'rendered': '&lt;p&gt;yYvNiaFmYk&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;yYvNiaFmYk&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'tw5f2gqfno', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=930'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/930/revisions'}], 'predecessor-version': [{'id': 931, 'href': 'http://localhost/wp-json/wp/v2/posts/930/revisions/931'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=930'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=930'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=930'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:50.758" level="INFO">Expected result: {'id': 930, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/?p=930'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=930', 'title': {'rendered': 'tW5F2gQFNo'}, 'content': {'rendered': '&lt;p&gt;yYvNiaFmYk&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;yYvNiaFmYk&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/930'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=930'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/930/revisions'}], 'predecessor-version': [{'id': 931, 'href': 'http://localhost/wp-json/wp/v2/posts/930/revisions/931'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=930'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=930'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=930'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:50.758" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:50.757" endtime="20230421 17:35:50.758"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.552" endtime="20230421 17:35:50.758"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.549" endtime="20230421 17:35:50.759"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.342" endtime="20230421 17:35:50.760"/>
</test>
<test id="s1-s2-s3-s1-t7" name="Verify That The Slug Identifier Can Be Edited In A Published Post" line="42">
<kw name="Create A Published Post" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:50.765" level="INFO">${title} = KHGp9BlFsc</msg>
<status status="PASS" starttime="20230421 17:35:50.764" endtime="20230421 17:35:50.765"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:50.765" level="INFO">${content} = dfVVT0v5xB</msg>
<status status="PASS" starttime="20230421 17:35:50.765" endtime="20230421 17:35:50.765"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=publish</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:50.767" level="INFO">${body} = {'title': 'KHGp9BlFsc', 'status': 'publish', 'content': 'dfVVT0v5xB'}</msg>
<status status="PASS" starttime="20230421 17:35:50.766" endtime="20230421 17:35:50.767"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:50.769" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE520&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.768" endtime="20230421 17:35:50.769"/>
</kw>
<msg timestamp="20230421 17:35:50.769" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BEE520&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.768" endtime="20230421 17:35:50.769"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:50.771" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:50.771" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:50.902" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.770" endtime="20230421 17:35:50.902"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:50.904" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:50.903" endtime="20230421 17:35:50.904"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:50.905" level="INFO">${actual_result} = {'id': 932, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/khgp9blfsc/', 'raw': 'http://localhost/2023/04/21/khgp9blfsc/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:50.904" endtime="20230421 17:35:50.905"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:50.906" level="INFO">${actual_result} = {'id': 932, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/khgp9blfsc/', 'raw': 'http://localhost/2023/04/21/khgp9blfsc/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:50.905" endtime="20230421 17:35:50.906"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:50.906" level="INFO">${post_id} = 932</msg>
<status status="PASS" starttime="20230421 17:35:50.906" endtime="20230421 17:35:50.906"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:50.907" level="INFO">${post_id} = 932</msg>
<status status="PASS" starttime="20230421 17:35:50.907" endtime="20230421 17:35:50.908"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:50.908" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:50.908" endtime="20230421 17:35:50.908"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.767" endtime="20230421 17:35:50.908"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.763" endtime="20230421 17:35:50.909"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:50.911" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BD2670&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.910" endtime="20230421 17:35:50.911"/>
</kw>
<msg timestamp="20230421 17:35:50.911" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BD2670&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.910" endtime="20230421 17:35:50.911"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:50.911" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:50.911" endtime="20230421 17:35:50.911"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:50.912" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:50.912" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/932</msg>
<msg timestamp="20230421 17:35:51.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:50.911" endtime="20230421 17:35:51.396"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:51.397" level="INFO">${expected_result} = {'id': 932, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/khgp9blfsc/'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:51.396" endtime="20230421 17:35:51.397"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:51.398" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:51.398" endtime="20230421 17:35:51.398"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:51.399" level="INFO">Actual result: {'id': 932, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/khgp9blfsc/', 'raw': 'http://localhost/2023/04/21/khgp9blfsc/'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50', 'password': '', 'slug': 'khgp9blfsc', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/khgp9blfsc/', 'title': {'raw': 'KHGp9BlFsc', 'rendered': 'KHGp9BlFsc'}, 'content': {'raw': 'dfVVT0v5xB', 'rendered': '&lt;p&gt;dfVVT0v5xB&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;dfVVT0v5xB&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'khgp9blfsc', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=932'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/932/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=932'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=932'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=932'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:51.399" level="INFO">Expected result: {'id': 932, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/khgp9blfsc/'}, 'modified': '2023-04-21T21:35:50', 'modified_gmt': '2023-04-21T21:35:50', 'slug': 'khgp9blfsc', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/khgp9blfsc/', 'title': {'rendered': 'KHGp9BlFsc'}, 'content': {'rendered': '&lt;p&gt;dfVVT0v5xB&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;dfVVT0v5xB&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=932'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/932/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=932'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=932'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=932'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:51.399" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:51.398" endtime="20230421 17:35:51.399"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.909" endtime="20230421 17:35:51.400"/>
</kw>
<kw name="Update The Slug In A Post" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Slug" library="wordpress.src.common_imports.CommonLibraries">
<var>${slug}</var>
<msg timestamp="20230421 17:35:51.402" level="INFO">${slug} = +5p"e9Ou4t</msg>
<status status="PASS" starttime="20230421 17:35:51.401" endtime="20230421 17:35:51.402"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>slug=${slug}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:51.405" level="INFO">${body} = {'slug': '+5p"e9Ou4t'}</msg>
<status status="PASS" starttime="20230421 17:35:51.403" endtime="20230421 17:35:51.405"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:51.408" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13250&gt;</msg>
<status status="PASS" starttime="20230421 17:35:51.407" endtime="20230421 17:35:51.408"/>
</kw>
<msg timestamp="20230421 17:35:51.409" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13250&gt;</msg>
<status status="PASS" starttime="20230421 17:35:51.406" endtime="20230421 17:35:51.409"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:51.410" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:51.409" endtime="20230421 17:35:51.410"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:51.411" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:51.411" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/932</msg>
<msg timestamp="20230421 17:35:51.533" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:51.410" endtime="20230421 17:35:51.533"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:51.535" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:51.534" endtime="20230421 17:35:51.535"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:51.536" level="INFO">${actual_result} = {'id': 932, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/khgp9blfsc/', 'raw': 'http://localhost/2023/04/21/khgp9blfsc/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:51.535" endtime="20230421 17:35:51.536"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:51.536" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:51.536" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/932</msg>
<msg timestamp="20230421 17:35:52.099" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:51.536" endtime="20230421 17:35:52.099"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:52.101" level="INFO">${expected_result} = {'id': 932, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/khgp9blfsc/'}, 'modified': '2023-04-21T21:35:51', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:52.100" endtime="20230421 17:35:52.101"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:52.102" level="INFO">Actual result: {'id': 932, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/khgp9blfsc/', 'raw': 'http://localhost/2023/04/21/khgp9blfsc/'}, 'modified': '2023-04-21T21:35:51', 'modified_gmt': '2023-04-21T21:35:51', 'password': '', 'slug': '5pe9ou4t', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/5pe9ou4t/', 'title': {'raw': 'KHGp9BlFsc', 'rendered': 'KHGp9BlFsc'}, 'content': {'raw': 'dfVVT0v5xB', 'rendered': '&lt;p&gt;dfVVT0v5xB&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;dfVVT0v5xB&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'khgp9blfsc', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=932'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/932/revisions'}], 'predecessor-version': [{'id': 933, 'href': 'http://localhost/wp-json/wp/v2/posts/932/revisions/933'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=932'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=932'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=932'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:52.102" level="INFO">Expected result: {'id': 932, 'date': '2023-04-21T21:35:50', 'date_gmt': '2023-04-21T21:35:50', 'guid': {'rendered': 'http://localhost/2023/04/21/khgp9blfsc/'}, 'modified': '2023-04-21T21:35:51', 'modified_gmt': '2023-04-21T21:35:51', 'slug': '5pe9ou4t', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/5pe9ou4t/', 'title': {'rendered': 'KHGp9BlFsc'}, 'content': {'rendered': '&lt;p&gt;dfVVT0v5xB&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;dfVVT0v5xB&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/932'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=932'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/932/revisions'}], 'predecessor-version': [{'id': 933, 'href': 'http://localhost/wp-json/wp/v2/posts/932/revisions/933'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=932'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=932'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=932'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:52.102" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:52.101" endtime="20230421 17:35:52.103"/>
</kw>
<status status="PASS" starttime="20230421 17:35:51.405" endtime="20230421 17:35:52.103"/>
</kw>
<status status="PASS" starttime="20230421 17:35:51.400" endtime="20230421 17:35:52.103"/>
</kw>
<status status="PASS" starttime="20230421 17:35:50.761" endtime="20230421 17:35:52.104"/>
</test>
<test id="s1-s2-s3-s1-t8" name="Verify That The Slug Identifier Can Be Edited In A Private Post" line="47">
<kw name="Create A Private Post" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:52.109" level="INFO">${title} = jxjQN9qF0S</msg>
<status status="PASS" starttime="20230421 17:35:52.108" endtime="20230421 17:35:52.109"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:52.109" level="INFO">${content} = Rc7Rfbt0T3</msg>
<status status="PASS" starttime="20230421 17:35:52.109" endtime="20230421 17:35:52.109"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=private</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:52.110" level="INFO">${body} = {'title': 'jxjQN9qF0S', 'status': 'private', 'content': 'Rc7Rfbt0T3'}</msg>
<status status="PASS" starttime="20230421 17:35:52.110" endtime="20230421 17:35:52.110"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:52.112" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13640&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.111" endtime="20230421 17:35:52.112"/>
</kw>
<msg timestamp="20230421 17:35:52.112" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13640&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.111" endtime="20230421 17:35:52.112"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:52.113" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:52.113" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:52.219" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.112" endtime="20230421 17:35:52.219"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:52.221" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:52.220" endtime="20230421 17:35:52.221"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:52.222" level="INFO">${actual_result} = {'id': 934, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/jxjqn9qf0s/', 'raw': 'http://localhost/2023/04/21/jxjqn9qf0s/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:52.221" endtime="20230421 17:35:52.222"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:52.222" level="INFO">${actual_result} = {'id': 934, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/jxjqn9qf0s/', 'raw': 'http://localhost/2023/04/21/jxjqn9qf0s/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:52.222" endtime="20230421 17:35:52.222"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:52.223" level="INFO">${post_id} = 934</msg>
<status status="PASS" starttime="20230421 17:35:52.223" endtime="20230421 17:35:52.223"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:52.223" level="INFO">${post_id} = 934</msg>
<status status="PASS" starttime="20230421 17:35:52.223" endtime="20230421 17:35:52.224"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:52.224" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:52.224" endtime="20230421 17:35:52.224"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.111" endtime="20230421 17:35:52.224"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.108" endtime="20230421 17:35:52.224"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:52.227" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BD2E50&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.227" endtime="20230421 17:35:52.227"/>
</kw>
<msg timestamp="20230421 17:35:52.227" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BD2E50&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.226" endtime="20230421 17:35:52.227"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:52.228" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:52.228" endtime="20230421 17:35:52.228"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:52.229" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:52.229" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/934</msg>
<msg timestamp="20230421 17:35:52.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.228" endtime="20230421 17:35:52.312"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:52.314" level="INFO">${expected_result} = {'id': 934, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/jxjqn9qf0s/'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:52.313" endtime="20230421 17:35:52.314"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:52.314" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:52.314" endtime="20230421 17:35:52.314"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:52.315" level="INFO">Actual result: {'id': 934, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/jxjqn9qf0s/', 'raw': 'http://localhost/2023/04/21/jxjqn9qf0s/'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52', 'password': '', 'slug': 'jxjqn9qf0s', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/jxjqn9qf0s/', 'title': {'raw': 'jxjQN9qF0S', 'rendered': 'Private: jxjQN9qF0S'}, 'content': {'raw': 'Rc7Rfbt0T3', 'rendered': '&lt;p&gt;Rc7Rfbt0T3&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;Rc7Rfbt0T3&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'jxjqn9qf0s', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=934'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/934/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=934'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=934'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=934'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:52.315" level="INFO">Expected result: {'id': 934, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/jxjqn9qf0s/'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52', 'slug': 'jxjqn9qf0s', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/jxjqn9qf0s/', 'title': {'rendered': 'Private: jxjQN9qF0S'}, 'content': {'rendered': '&lt;p&gt;Rc7Rfbt0T3&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;Rc7Rfbt0T3&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=934'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/934/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=934'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=934'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=934'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:52.316" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:52.314" endtime="20230421 17:35:52.316"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.225" endtime="20230421 17:35:52.316"/>
</kw>
<kw name="Update The Slug In A Post" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Slug" library="wordpress.src.common_imports.CommonLibraries">
<var>${slug}</var>
<msg timestamp="20230421 17:35:52.317" level="INFO">${slug} = FEr$r&amp;b~0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.317" endtime="20230421 17:35:52.318"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>slug=${slug}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:52.318" level="INFO">${body} = {'slug': 'FEr$r&amp;b~0&gt;'}</msg>
<status status="PASS" starttime="20230421 17:35:52.318" endtime="20230421 17:35:52.318"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:52.321" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C82D60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.321" endtime="20230421 17:35:52.321"/>
</kw>
<msg timestamp="20230421 17:35:52.321" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C82D60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.320" endtime="20230421 17:35:52.322"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:52.323" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:52.322" endtime="20230421 17:35:52.323"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:52.324" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:52.324" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/934</msg>
<msg timestamp="20230421 17:35:52.430" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.323" endtime="20230421 17:35:52.431"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:52.432" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:52.431" endtime="20230421 17:35:52.432"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:52.433" level="INFO">${actual_result} = {'id': 934, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/jxjqn9qf0s/', 'raw': 'http://localhost/2023/04/21/jxjqn9qf0s/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:52.432" endtime="20230421 17:35:52.433"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:52.434" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:52.434" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/934</msg>
<msg timestamp="20230421 17:35:52.491" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.433" endtime="20230421 17:35:52.491"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:52.493" level="INFO">${expected_result} = {'id': 934, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/jxjqn9qf0s/'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:52.492" endtime="20230421 17:35:52.493"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:52.494" level="INFO">Actual result: {'id': 934, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/jxjqn9qf0s/', 'raw': 'http://localhost/2023/04/21/jxjqn9qf0s/'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52', 'password': '', 'slug': 'ferrb0', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/ferrb0/', 'title': {'raw': 'jxjQN9qF0S', 'rendered': 'Private: jxjQN9qF0S'}, 'content': {'raw': 'Rc7Rfbt0T3', 'rendered': '&lt;p&gt;Rc7Rfbt0T3&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;Rc7Rfbt0T3&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'jxjqn9qf0s', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=934'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/934/revisions'}], 'predecessor-version': [{'id': 935, 'href': 'http://localhost/wp-json/wp/v2/posts/934/revisions/935'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=934'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=934'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=934'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:52.494" level="INFO">Expected result: {'id': 934, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/jxjqn9qf0s/'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52', 'slug': 'ferrb0', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/ferrb0/', 'title': {'rendered': 'Private: jxjQN9qF0S'}, 'content': {'rendered': '&lt;p&gt;Rc7Rfbt0T3&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;Rc7Rfbt0T3&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/934'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=934'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/934/revisions'}], 'predecessor-version': [{'id': 935, 'href': 'http://localhost/wp-json/wp/v2/posts/934/revisions/935'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=934'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=934'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=934'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:52.494" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:52.493" endtime="20230421 17:35:52.494"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.319" endtime="20230421 17:35:52.494"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.316" endtime="20230421 17:35:52.494"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.107" endtime="20230421 17:35:52.495"/>
</test>
<test id="s1-s2-s3-s1-t9" name="Verify That The Slug Identifier Can Be Edited In A Draft Post" line="52">
<kw name="Create A Post And Save it on drafts" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:52.499" level="INFO">${title} = 9NvVl3cDqy</msg>
<status status="PASS" starttime="20230421 17:35:52.498" endtime="20230421 17:35:52.499"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:52.500" level="INFO">${content} = oGFGX3xxdw</msg>
<status status="PASS" starttime="20230421 17:35:52.500" endtime="20230421 17:35:52.500"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=draft</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:52.502" level="INFO">${body} = {'title': '9NvVl3cDqy', 'status': 'draft', 'content': 'oGFGX3xxdw'}</msg>
<status status="PASS" starttime="20230421 17:35:52.500" endtime="20230421 17:35:52.502"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:52.504" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C87070&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.504" endtime="20230421 17:35:52.504"/>
</kw>
<msg timestamp="20230421 17:35:52.504" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C87070&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.503" endtime="20230421 17:35:52.504"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:52.505" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:52.505" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:52.600" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.504" endtime="20230421 17:35:52.600"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:52.602" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:52.601" endtime="20230421 17:35:52.602"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:52.603" level="INFO">${actual_result} = {'id': 936, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/?p=936', 'raw': 'http://localhost/?p=936'}, 'modified': '2023-04-21T21:35:52', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:52.603" endtime="20230421 17:35:52.603"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:52.604" level="INFO">${actual_result} = {'id': 936, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/?p=936', 'raw': 'http://localhost/?p=936'}, 'modified': '2023-04-21T21:35:52', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:52.603" endtime="20230421 17:35:52.604"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:52.605" level="INFO">${post_id} = 936</msg>
<status status="PASS" starttime="20230421 17:35:52.605" endtime="20230421 17:35:52.605"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:52.605" level="INFO">${post_id} = 936</msg>
<status status="PASS" starttime="20230421 17:35:52.605" endtime="20230421 17:35:52.606"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:52.606" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:52.606" endtime="20230421 17:35:52.606"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.502" endtime="20230421 17:35:52.606"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.498" endtime="20230421 17:35:52.606"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:52.609" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13A60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.609" endtime="20230421 17:35:52.610"/>
</kw>
<msg timestamp="20230421 17:35:52.610" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C13A60&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.608" endtime="20230421 17:35:52.610"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:52.610" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:52.610" endtime="20230421 17:35:52.610"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:52.611" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:52.611" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/936</msg>
<msg timestamp="20230421 17:35:52.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.611" endtime="20230421 17:35:52.678"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:52.680" level="INFO">${expected_result} = {'id': 936, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/?p=936'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52',...</msg>
<status status="PASS" starttime="20230421 17:35:52.679" endtime="20230421 17:35:52.680"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:52.681" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:52.680" endtime="20230421 17:35:52.681"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:52.682" level="INFO">Actual result: {'id': 936, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/?p=936', 'raw': 'http://localhost/?p=936'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52', 'password': '', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=936', 'title': {'raw': '9NvVl3cDqy', 'rendered': '9NvVl3cDqy'}, 'content': {'raw': 'oGFGX3xxdw', 'rendered': '&lt;p&gt;oGFGX3xxdw&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;oGFGX3xxdw&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': '9nvvl3cdqy', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=936'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/936/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=936'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=936'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=936'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:52.682" level="INFO">Expected result: {'id': 936, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/?p=936'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=936', 'title': {'rendered': '9NvVl3cDqy'}, 'content': {'rendered': '&lt;p&gt;oGFGX3xxdw&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;oGFGX3xxdw&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=936'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/936/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=936'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=936'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=936'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:52.683" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:52.681" endtime="20230421 17:35:52.683"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.607" endtime="20230421 17:35:52.683"/>
</kw>
<kw name="Update The Slug In A Post" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Slug" library="wordpress.src.common_imports.CommonLibraries">
<var>${slug}</var>
<msg timestamp="20230421 17:35:52.685" level="INFO">${slug} = @&gt;g1c\jq3n</msg>
<status status="PASS" starttime="20230421 17:35:52.685" endtime="20230421 17:35:52.685"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>slug=${slug}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:52.686" level="INFO">${body} = {'slug': '@&gt;g1c\\jq3n'}</msg>
<status status="PASS" starttime="20230421 17:35:52.685" endtime="20230421 17:35:52.686"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:52.689" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C990D0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.689" endtime="20230421 17:35:52.689"/>
</kw>
<msg timestamp="20230421 17:35:52.690" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C990D0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.688" endtime="20230421 17:35:52.691"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:52.692" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:52.691" endtime="20230421 17:35:52.692"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:52.693" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:52.693" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/936</msg>
<msg timestamp="20230421 17:35:52.808" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.692" endtime="20230421 17:35:52.809"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:52.810" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:52.809" endtime="20230421 17:35:52.811"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:52.811" level="INFO">${actual_result} = {'id': 936, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/?p=936', 'raw': 'http://localhost/?p=936'}, 'modified': '2023-04-21T21:35:52', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:52.811" endtime="20230421 17:35:52.812"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:52.812" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:52.812" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/936</msg>
<msg timestamp="20230421 17:35:52.876" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.812" endtime="20230421 17:35:52.876"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:52.876" level="INFO">${expected_result} = {'id': 936, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/?p=936'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52',...</msg>
<status status="PASS" starttime="20230421 17:35:52.876" endtime="20230421 17:35:52.876"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:52.877" level="INFO">Actual result: {'id': 936, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/?p=936', 'raw': 'http://localhost/?p=936'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52', 'password': '', 'slug': 'g1cjq3n', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=936', 'title': {'raw': '9NvVl3cDqy', 'rendered': '9NvVl3cDqy'}, 'content': {'raw': 'oGFGX3xxdw', 'rendered': '&lt;p&gt;oGFGX3xxdw&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;oGFGX3xxdw&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': '9nvvl3cdqy', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=936'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/936/revisions'}], 'predecessor-version': [{'id': 937, 'href': 'http://localhost/wp-json/wp/v2/posts/936/revisions/937'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=936'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=936'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=936'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:52.877" level="INFO">Expected result: {'id': 936, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/?p=936'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52', 'slug': 'g1cjq3n', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=936', 'title': {'rendered': '9NvVl3cDqy'}, 'content': {'rendered': '&lt;p&gt;oGFGX3xxdw&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;oGFGX3xxdw&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/936'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=936'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/936/revisions'}], 'predecessor-version': [{'id': 937, 'href': 'http://localhost/wp-json/wp/v2/posts/936/revisions/937'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=936'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=936'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=936'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:52.878" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:52.876" endtime="20230421 17:35:52.878"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.686" endtime="20230421 17:35:52.878"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.684" endtime="20230421 17:35:52.878"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.497" endtime="20230421 17:35:52.879"/>
</test>
<test id="s1-s2-s3-s1-t10" name="Verify That The title Is Updated In A Published Post" line="58">
<kw name="Create A Published Post" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:52.884" level="INFO">${title} = k4gZhvwf53</msg>
<status status="PASS" starttime="20230421 17:35:52.883" endtime="20230421 17:35:52.884"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:52.884" level="INFO">${content} = yz8tcN30jp</msg>
<status status="PASS" starttime="20230421 17:35:52.884" endtime="20230421 17:35:52.884"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=publish</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:52.885" level="INFO">${body} = {'title': 'k4gZhvwf53', 'status': 'publish', 'content': 'yz8tcN30jp'}</msg>
<status status="PASS" starttime="20230421 17:35:52.884" endtime="20230421 17:35:52.885"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:52.888" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C877C0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.887" endtime="20230421 17:35:52.888"/>
</kw>
<msg timestamp="20230421 17:35:52.888" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C877C0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.886" endtime="20230421 17:35:52.889"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:52.890" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:52.890" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:53.010" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:52.889" endtime="20230421 17:35:53.010"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:53.011" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:53.010" endtime="20230421 17:35:53.011"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:53.013" level="INFO">${actual_result} = {'id': 938, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/k4gzhvwf53/', 'raw': 'http://localhost/2023/04/21/k4gzhvwf53/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:53.012" endtime="20230421 17:35:53.013"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:53.015" level="INFO">${actual_result} = {'id': 938, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/k4gzhvwf53/', 'raw': 'http://localhost/2023/04/21/k4gzhvwf53/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:53.013" endtime="20230421 17:35:53.015"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:53.016" level="INFO">${post_id} = 938</msg>
<status status="PASS" starttime="20230421 17:35:53.015" endtime="20230421 17:35:53.016"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:53.017" level="INFO">${post_id} = 938</msg>
<status status="PASS" starttime="20230421 17:35:53.017" endtime="20230421 17:35:53.018"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:53.019" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:53.018" endtime="20230421 17:35:53.019"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.886" endtime="20230421 17:35:53.019"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.882" endtime="20230421 17:35:53.019"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:53.022" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C82820&gt;</msg>
<status status="PASS" starttime="20230421 17:35:53.022" endtime="20230421 17:35:53.023"/>
</kw>
<msg timestamp="20230421 17:35:53.023" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C82820&gt;</msg>
<status status="PASS" starttime="20230421 17:35:53.021" endtime="20230421 17:35:53.023"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:53.023" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:53.023" endtime="20230421 17:35:53.023"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:53.025" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:53.025" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/938</msg>
<msg timestamp="20230421 17:35:53.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:53.024" endtime="20230421 17:35:53.852"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:53.854" level="INFO">${expected_result} = {'id': 938, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/k4gzhvwf53/'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:53.853" endtime="20230421 17:35:53.854"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:53.854" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:53.854" endtime="20230421 17:35:53.855"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:53.856" level="INFO">Actual result: {'id': 938, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/k4gzhvwf53/', 'raw': 'http://localhost/2023/04/21/k4gzhvwf53/'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52', 'password': '', 'slug': 'k4gzhvwf53', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/k4gzhvwf53/', 'title': {'raw': 'k4gZhvwf53', 'rendered': 'k4gZhvwf53'}, 'content': {'raw': 'yz8tcN30jp', 'rendered': '&lt;p&gt;yz8tcN30jp&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;yz8tcN30jp&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'k4gzhvwf53', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=938'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/938/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=938'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=938'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=938'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:53.856" level="INFO">Expected result: {'id': 938, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/k4gzhvwf53/'}, 'modified': '2023-04-21T21:35:52', 'modified_gmt': '2023-04-21T21:35:52', 'slug': 'k4gzhvwf53', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/k4gzhvwf53/', 'title': {'rendered': 'k4gZhvwf53'}, 'content': {'rendered': '&lt;p&gt;yz8tcN30jp&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;yz8tcN30jp&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=938'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/938/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=938'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=938'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=938'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:53.856" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:53.855" endtime="20230421 17:35:53.856"/>
</kw>
<status status="PASS" starttime="20230421 17:35:53.020" endtime="20230421 17:35:53.857"/>
</kw>
<kw name="Update The Title In A Post" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:53.859" level="INFO">${title} = KcmpIkqnIG</msg>
<status status="PASS" starttime="20230421 17:35:53.858" endtime="20230421 17:35:53.859"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:53.860" level="INFO">${body} = {'title': 'KcmpIkqnIG'}</msg>
<status status="PASS" starttime="20230421 17:35:53.859" endtime="20230421 17:35:53.860"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:53.862" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C5F670&gt;</msg>
<status status="PASS" starttime="20230421 17:35:53.862" endtime="20230421 17:35:53.862"/>
</kw>
<msg timestamp="20230421 17:35:53.863" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C5F670&gt;</msg>
<status status="PASS" starttime="20230421 17:35:53.861" endtime="20230421 17:35:53.863"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:53.863" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:53.863" endtime="20230421 17:35:53.863"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:53.865" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:53.865" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/938</msg>
<msg timestamp="20230421 17:35:53.989" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:53.864" endtime="20230421 17:35:53.990"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:53.991" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:53.990" endtime="20230421 17:35:53.991"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:53.993" level="INFO">${actual_result} = {'id': 938, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/k4gzhvwf53/', 'raw': 'http://localhost/2023/04/21/k4gzhvwf53/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:53.992" endtime="20230421 17:35:53.993"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:53.994" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:53.995" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/938</msg>
<msg timestamp="20230421 17:35:54.460" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:53.993" endtime="20230421 17:35:54.460"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:54.461" level="INFO">${expected_result} = {'id': 938, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/k4gzhvwf53/'}, 'modified': '2023-04-21T21:35:53', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:54.461" endtime="20230421 17:35:54.461"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:54.462" level="INFO">Actual result: {'id': 938, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/k4gzhvwf53/', 'raw': 'http://localhost/2023/04/21/k4gzhvwf53/'}, 'modified': '2023-04-21T21:35:53', 'modified_gmt': '2023-04-21T21:35:53', 'password': '', 'slug': 'k4gzhvwf53', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/k4gzhvwf53/', 'title': {'raw': 'KcmpIkqnIG', 'rendered': 'KcmpIkqnIG'}, 'content': {'raw': 'yz8tcN30jp', 'rendered': '&lt;p&gt;yz8tcN30jp&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;yz8tcN30jp&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'kcmpikqnig', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=938'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/938/revisions'}], 'predecessor-version': [{'id': 939, 'href': 'http://localhost/wp-json/wp/v2/posts/938/revisions/939'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=938'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=938'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=938'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:54.462" level="INFO">Expected result: {'id': 938, 'date': '2023-04-21T21:35:52', 'date_gmt': '2023-04-21T21:35:52', 'guid': {'rendered': 'http://localhost/2023/04/21/k4gzhvwf53/'}, 'modified': '2023-04-21T21:35:53', 'modified_gmt': '2023-04-21T21:35:53', 'slug': 'k4gzhvwf53', 'status': 'publish', 'type': 'post', 'link': 'http://localhost/2023/04/21/k4gzhvwf53/', 'title': {'rendered': 'KcmpIkqnIG'}, 'content': {'rendered': '&lt;p&gt;yz8tcN30jp&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;yz8tcN30jp&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/938'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=938'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/938/revisions'}], 'predecessor-version': [{'id': 939, 'href': 'http://localhost/wp-json/wp/v2/posts/938/revisions/939'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=938'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=938'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=938'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:54.463" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:54.462" endtime="20230421 17:35:54.463"/>
</kw>
<status status="PASS" starttime="20230421 17:35:53.860" endtime="20230421 17:35:54.463"/>
</kw>
<status status="PASS" starttime="20230421 17:35:53.857" endtime="20230421 17:35:54.463"/>
</kw>
<status status="PASS" starttime="20230421 17:35:52.881" endtime="20230421 17:35:54.464"/>
</test>
<test id="s1-s2-s3-s1-t11" name="Verify That The Title Can Be Edited In A Private Post" line="63">
<kw name="Create A Private Post" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:54.468" level="INFO">${title} = hhB1lVN9Ji</msg>
<status status="PASS" starttime="20230421 17:35:54.467" endtime="20230421 17:35:54.468"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:54.468" level="INFO">${content} = 9O05F8ZMYv</msg>
<status status="PASS" starttime="20230421 17:35:54.468" endtime="20230421 17:35:54.468"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=private</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:54.469" level="INFO">${body} = {'title': 'hhB1lVN9Ji', 'status': 'private', 'content': '9O05F8ZMYv'}</msg>
<status status="PASS" starttime="20230421 17:35:54.468" endtime="20230421 17:35:54.469"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:54.471" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C99970&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.471" endtime="20230421 17:35:54.471"/>
</kw>
<msg timestamp="20230421 17:35:54.472" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C99970&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.470" endtime="20230421 17:35:54.472"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:54.474" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:54.475" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:54.584" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.472" endtime="20230421 17:35:54.584"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:54.585" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:54.585" endtime="20230421 17:35:54.586"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:54.587" level="INFO">${actual_result} = {'id': 940, 'date': '2023-04-21T21:35:54', 'date_gmt': '2023-04-21T21:35:54', 'guid': {'rendered': 'http://localhost/2023/04/21/hhb1lvn9ji/', 'raw': 'http://localhost/2023/04/21/hhb1lvn9ji/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:54.586" endtime="20230421 17:35:54.587"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:54.588" level="INFO">${actual_result} = {'id': 940, 'date': '2023-04-21T21:35:54', 'date_gmt': '2023-04-21T21:35:54', 'guid': {'rendered': 'http://localhost/2023/04/21/hhb1lvn9ji/', 'raw': 'http://localhost/2023/04/21/hhb1lvn9ji/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:54.587" endtime="20230421 17:35:54.588"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:54.588" level="INFO">${post_id} = 940</msg>
<status status="PASS" starttime="20230421 17:35:54.588" endtime="20230421 17:35:54.588"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:54.589" level="INFO">${post_id} = 940</msg>
<status status="PASS" starttime="20230421 17:35:54.588" endtime="20230421 17:35:54.589"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:54.589" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:54.589" endtime="20230421 17:35:54.589"/>
</kw>
<status status="PASS" starttime="20230421 17:35:54.469" endtime="20230421 17:35:54.590"/>
</kw>
<status status="PASS" starttime="20230421 17:35:54.467" endtime="20230421 17:35:54.590"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:54.592" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BD27F0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.592" endtime="20230421 17:35:54.592"/>
</kw>
<msg timestamp="20230421 17:35:54.592" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BD27F0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.591" endtime="20230421 17:35:54.592"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:54.593" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:54.592" endtime="20230421 17:35:54.593"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:54.594" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:54.594" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/940</msg>
<msg timestamp="20230421 17:35:54.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.593" endtime="20230421 17:35:54.667"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:54.669" level="INFO">${expected_result} = {'id': 940, 'date': '2023-04-21T21:35:54', 'date_gmt': '2023-04-21T21:35:54', 'guid': {'rendered': 'http://localhost/2023/04/21/hhb1lvn9ji/'}, 'modified': '2023-04-21T21:35:54', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:54.668" endtime="20230421 17:35:54.669"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:54.669" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:54.669" endtime="20230421 17:35:54.669"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:54.671" level="INFO">Actual result: {'id': 940, 'date': '2023-04-21T21:35:54', 'date_gmt': '2023-04-21T21:35:54', 'guid': {'rendered': 'http://localhost/2023/04/21/hhb1lvn9ji/', 'raw': 'http://localhost/2023/04/21/hhb1lvn9ji/'}, 'modified': '2023-04-21T21:35:54', 'modified_gmt': '2023-04-21T21:35:54', 'password': '', 'slug': 'hhb1lvn9ji', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/hhb1lvn9ji/', 'title': {'raw': 'hhB1lVN9Ji', 'rendered': 'Private: hhB1lVN9Ji'}, 'content': {'raw': '9O05F8ZMYv', 'rendered': '&lt;p&gt;9O05F8ZMYv&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;9O05F8ZMYv&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'hhb1lvn9ji', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=940'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/940/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=940'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=940'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=940'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:54.672" level="INFO">Expected result: {'id': 940, 'date': '2023-04-21T21:35:54', 'date_gmt': '2023-04-21T21:35:54', 'guid': {'rendered': 'http://localhost/2023/04/21/hhb1lvn9ji/'}, 'modified': '2023-04-21T21:35:54', 'modified_gmt': '2023-04-21T21:35:54', 'slug': 'hhb1lvn9ji', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/hhb1lvn9ji/', 'title': {'rendered': 'Private: hhB1lVN9Ji'}, 'content': {'rendered': '&lt;p&gt;9O05F8ZMYv&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;9O05F8ZMYv&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=940'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/940/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=940'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=940'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=940'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:54.672" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:54.670" endtime="20230421 17:35:54.672"/>
</kw>
<status status="PASS" starttime="20230421 17:35:54.590" endtime="20230421 17:35:54.672"/>
</kw>
<kw name="Update The Title In A Post" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:54.674" level="INFO">${title} = 6fAhpIZV4d</msg>
<status status="PASS" starttime="20230421 17:35:54.674" endtime="20230421 17:35:54.674"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:54.675" level="INFO">${body} = {'title': '6fAhpIZV4d'}</msg>
<status status="PASS" starttime="20230421 17:35:54.674" endtime="20230421 17:35:54.675"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:54.676" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BDBEE0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.676" endtime="20230421 17:35:54.676"/>
</kw>
<msg timestamp="20230421 17:35:54.676" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BDBEE0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.675" endtime="20230421 17:35:54.676"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:54.677" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:54.677" endtime="20230421 17:35:54.677"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:54.678" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:54.678" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/940</msg>
<msg timestamp="20230421 17:35:54.815" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.677" endtime="20230421 17:35:54.815"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:54.816" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:54.815" endtime="20230421 17:35:54.816"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:54.817" level="INFO">${actual_result} = {'id': 940, 'date': '2023-04-21T21:35:54', 'date_gmt': '2023-04-21T21:35:54', 'guid': {'rendered': 'http://localhost/2023/04/21/hhb1lvn9ji/', 'raw': 'http://localhost/2023/04/21/hhb1lvn9ji/'}, 'modifi...</msg>
<status status="PASS" starttime="20230421 17:35:54.816" endtime="20230421 17:35:54.818"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:54.819" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:54.819" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/940</msg>
<msg timestamp="20230421 17:35:54.900" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.818" endtime="20230421 17:35:54.900"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:54.902" level="INFO">${expected_result} = {'id': 940, 'date': '2023-04-21T21:35:54', 'date_gmt': '2023-04-21T21:35:54', 'guid': {'rendered': 'http://localhost/2023/04/21/hhb1lvn9ji/'}, 'modified': '2023-04-21T21:35:54', 'modified_gmt': '2023-...</msg>
<status status="PASS" starttime="20230421 17:35:54.901" endtime="20230421 17:35:54.902"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:54.904" level="INFO">Actual result: {'id': 940, 'date': '2023-04-21T21:35:54', 'date_gmt': '2023-04-21T21:35:54', 'guid': {'rendered': 'http://localhost/2023/04/21/hhb1lvn9ji/', 'raw': 'http://localhost/2023/04/21/hhb1lvn9ji/'}, 'modified': '2023-04-21T21:35:54', 'modified_gmt': '2023-04-21T21:35:54', 'password': '', 'slug': 'hhb1lvn9ji', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/hhb1lvn9ji/', 'title': {'raw': '6fAhpIZV4d', 'rendered': 'Private: 6fAhpIZV4d'}, 'content': {'raw': '9O05F8ZMYv', 'rendered': '&lt;p&gt;9O05F8ZMYv&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;9O05F8ZMYv&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': '6fahpizv4d', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=940'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/940/revisions'}], 'predecessor-version': [{'id': 941, 'href': 'http://localhost/wp-json/wp/v2/posts/940/revisions/941'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=940'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=940'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=940'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:54.905" level="INFO">Expected result: {'id': 940, 'date': '2023-04-21T21:35:54', 'date_gmt': '2023-04-21T21:35:54', 'guid': {'rendered': 'http://localhost/2023/04/21/hhb1lvn9ji/'}, 'modified': '2023-04-21T21:35:54', 'modified_gmt': '2023-04-21T21:35:54', 'slug': 'hhb1lvn9ji', 'status': 'private', 'type': 'post', 'link': 'http://localhost/2023/04/21/hhb1lvn9ji/', 'title': {'rendered': 'Private: 6fAhpIZV4d'}, 'content': {'rendered': '&lt;p&gt;9O05F8ZMYv&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;9O05F8ZMYv&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/940'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=940'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/940/revisions'}], 'predecessor-version': [{'id': 941, 'href': 'http://localhost/wp-json/wp/v2/posts/940/revisions/941'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=940'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=940'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=940'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:54.905" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:54.903" endtime="20230421 17:35:54.906"/>
</kw>
<status status="PASS" starttime="20230421 17:35:54.675" endtime="20230421 17:35:54.906"/>
</kw>
<status status="PASS" starttime="20230421 17:35:54.673" endtime="20230421 17:35:54.907"/>
</kw>
<status status="PASS" starttime="20230421 17:35:54.466" endtime="20230421 17:35:54.908"/>
</test>
<test id="s1-s2-s3-s1-t12" name="Verify That The Title Can Be Edited In A Draft Post" line="68">
<kw name="Create A Post And Save it on drafts" library="keywords">
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:54.913" level="INFO">${title} = O3khylN3mx</msg>
<status status="PASS" starttime="20230421 17:35:54.913" endtime="20230421 17:35:54.913"/>
</kw>
<kw name="Generate Random Content" library="wordpress.src.common_imports.CommonLibraries">
<var>${content}</var>
<msg timestamp="20230421 17:35:54.914" level="INFO">${content} = 58rXTypvSa</msg>
<status status="PASS" starttime="20230421 17:35:54.914" endtime="20230421 17:35:54.915"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<arg>status=draft</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:54.917" level="INFO">${body} = {'title': 'O3khylN3mx', 'status': 'draft', 'content': '58rXTypvSa'}</msg>
<status status="PASS" starttime="20230421 17:35:54.915" endtime="20230421 17:35:54.917"/>
</kw>
<kw name="Create A Post" library="keywords">
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:54.920" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BB65E0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.919" endtime="20230421 17:35:54.920"/>
</kw>
<msg timestamp="20230421 17:35:54.921" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375BB65E0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.918" endtime="20230421 17:35:54.921"/>
</kw>
<kw name="Make Request Post" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a POST request to a API endpoint</doc>
<msg timestamp="20230421 17:35:54.923" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:54.923" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/</msg>
<msg timestamp="20230421 17:35:55.100" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:54.921" endtime="20230421 17:35:55.100"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:55.102" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:55.101" endtime="20230421 17:35:55.102"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:55.103" level="INFO">${actual_result} = {'id': 942, 'date': '2023-04-21T21:35:55', 'date_gmt': '2023-04-21T21:35:55', 'guid': {'rendered': 'http://localhost/?p=942', 'raw': 'http://localhost/?p=942'}, 'modified': '2023-04-21T21:35:55', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:55.102" endtime="20230421 17:35:55.103"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:55.104" level="INFO">${actual_result} = {'id': 942, 'date': '2023-04-21T21:35:55', 'date_gmt': '2023-04-21T21:35:55', 'guid': {'rendered': 'http://localhost/?p=942', 'raw': 'http://localhost/?p=942'}, 'modified': '2023-04-21T21:35:55', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:55.104" endtime="20230421 17:35:55.104"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${post_id}</var>
<arg>id</arg>
<arg>${actual_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:55.105" level="INFO">${post_id} = 942</msg>
<status status="PASS" starttime="20230421 17:35:55.105" endtime="20230421 17:35:55.105"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${post_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 17:35:55.106" level="INFO">${post_id} = 942</msg>
<status status="PASS" starttime="20230421 17:35:55.105" endtime="20230421 17:35:55.106"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<arg>exp_status=201</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:55.107" level="INFO">Actual response is 201, expect: 201</msg>
<status status="PASS" starttime="20230421 17:35:55.106" endtime="20230421 17:35:55.107"/>
</kw>
<status status="PASS" starttime="20230421 17:35:54.917" endtime="20230421 17:35:55.107"/>
</kw>
<status status="PASS" starttime="20230421 17:35:54.912" endtime="20230421 17:35:55.108"/>
</kw>
<kw name="Get The Post Id" library="keywords">
<arg>${post_id}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:55.111" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C993A0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:55.111" endtime="20230421 17:35:55.111"/>
</kw>
<msg timestamp="20230421 17:35:55.112" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x0000025375C993A0&gt;</msg>
<status status="PASS" starttime="20230421 17:35:55.110" endtime="20230421 17:35:55.112"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:55.113" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:55.112" endtime="20230421 17:35:55.113"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:55.115" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:55.115" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/942</msg>
<msg timestamp="20230421 17:35:55.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:55.113" endtime="20230421 17:35:55.199"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:55.200" level="INFO">${expected_result} = {'id': 942, 'date': '2023-04-21T21:35:55', 'date_gmt': '2023-04-21T21:35:55', 'guid': {'rendered': 'http://localhost/?p=942'}, 'modified': '2023-04-21T21:35:55', 'modified_gmt': '2023-04-21T21:35:55',...</msg>
<status status="PASS" starttime="20230421 17:35:55.200" endtime="20230421 17:35:55.200"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:55.201" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:55.201" endtime="20230421 17:35:55.201"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:55.202" level="INFO">Actual result: {'id': 942, 'date': '2023-04-21T21:35:55', 'date_gmt': '2023-04-21T21:35:55', 'guid': {'rendered': 'http://localhost/?p=942', 'raw': 'http://localhost/?p=942'}, 'modified': '2023-04-21T21:35:55', 'modified_gmt': '2023-04-21T21:35:55', 'password': '', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=942', 'title': {'raw': 'O3khylN3mx', 'rendered': 'O3khylN3mx'}, 'content': {'raw': '58rXTypvSa', 'rendered': '&lt;p&gt;58rXTypvSa&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;58rXTypvSa&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'o3khyln3mx', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=942'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/942/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=942'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=942'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=942'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:55.202" level="INFO">Expected result: {'id': 942, 'date': '2023-04-21T21:35:55', 'date_gmt': '2023-04-21T21:35:55', 'guid': {'rendered': 'http://localhost/?p=942'}, 'modified': '2023-04-21T21:35:55', 'modified_gmt': '2023-04-21T21:35:55', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=942', 'title': {'rendered': 'O3khylN3mx'}, 'content': {'rendered': '&lt;p&gt;58rXTypvSa&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;58rXTypvSa&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=942'}], 'version-history': [{'count': 0, 'href': 'http://localhost/wp-json/wp/v2/posts/942/revisions'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=942'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=942'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=942'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:55.202" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:55.201" endtime="20230421 17:35:55.202"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.109" endtime="20230421 17:35:55.203"/>
</kw>
<kw name="Update The Title In A Post" library="keywords">
<arg>${post_id}</arg>
<kw name="Generate Random Title" library="wordpress.src.common_imports.CommonLibraries">
<var>${title}</var>
<msg timestamp="20230421 17:35:55.205" level="INFO">${title} = vmJrW0dxD5</msg>
<status status="PASS" starttime="20230421 17:35:55.205" endtime="20230421 17:35:55.205"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>title=${title}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:55.206" level="INFO">${body} = {'title': 'vmJrW0dxD5'}</msg>
<status status="PASS" starttime="20230421 17:35:55.205" endtime="20230421 17:35:55.206"/>
</kw>
<kw name="Update A Post" library="keywords">
<arg>${post_id}</arg>
<arg>${body}</arg>
<kw name="Get Credentials" library="get_credentials">
<var>${auth}</var>
<kw name="Get Basic Auth" library="wordpress.src.common_imports.CommonLibraries">
<var>${auth}</var>
<doc>Gets basic authentication using username and password</doc>
<msg timestamp="20230421 17:35:55.207" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253751B2070&gt;</msg>
<status status="PASS" starttime="20230421 17:35:55.206" endtime="20230421 17:35:55.207"/>
</kw>
<msg timestamp="20230421 17:35:55.207" level="INFO">${auth} = &lt;requests.auth.HTTPBasicAuth object at 0x00000253751B2070&gt;</msg>
<status status="PASS" starttime="20230421 17:35:55.206" endtime="20230421 17:35:55.207"/>
</kw>
<kw name="Generate Ignore" library="wordpress.src.common_imports.CommonLibraries">
<var>${ignore}</var>
<msg timestamp="20230421 17:35:55.208" level="INFO">${ignore} = ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:55.207" endtime="20230421 17:35:55.208"/>
</kw>
<kw name="Make Request Put" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_update}</var>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${post_id}</arg>
<arg>auth=${auth}</arg>
<doc>Makes a PUT request to a API endpoint</doc>
<msg timestamp="20230421 17:35:55.209" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:55.209" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/942</msg>
<msg timestamp="20230421 17:35:55.305" level="INFO">${response_update} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:55.208" endtime="20230421 17:35:55.306"/>
</kw>
<kw name="Validate Response Status" library="wordpress.src.common_imports.CommonLibraries">
<arg>${response_update}</arg>
<doc>Validates the status code of a request</doc>
<msg timestamp="20230421 17:35:55.307" level="INFO">Actual response is 200, expect: 200</msg>
<status status="PASS" starttime="20230421 17:35:55.307" endtime="20230421 17:35:55.308"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>${response_update}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:55.309" level="INFO">${actual_result} = {'id': 942, 'date': '2023-04-21T21:35:55', 'date_gmt': '2023-04-21T21:35:55', 'guid': {'rendered': 'http://localhost/?p=942', 'raw': 'http://localhost/?p=942'}, 'modified': '2023-04-21T21:35:55', 'mod...</msg>
<status status="PASS" starttime="20230421 17:35:55.308" endtime="20230421 17:35:55.309"/>
</kw>
<kw name="Make Request Get" library="wordpress.src.common_imports.CommonLibraries">
<var>${response_get}</var>
<arg>${endpoint}</arg>
<arg>auth=${auth}</arg>
<arg>id=${post_id}</arg>
<doc>Makes a GET request to a API endpoint</doc>
<msg timestamp="20230421 17:35:55.310" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:55.310" level="INFO">URL: http://localhost/wp-json/wp/v2/posts/942</msg>
<msg timestamp="20230421 17:35:55.370" level="INFO">${response_get} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 17:35:55.309" endtime="20230421 17:35:55.371"/>
</kw>
<kw name="Get Format Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>${response_get}</arg>
<doc>Instances the method with tha required format</doc>
<msg timestamp="20230421 17:35:55.372" level="INFO">${expected_result} = {'id': 942, 'date': '2023-04-21T21:35:55', 'date_gmt': '2023-04-21T21:35:55', 'guid': {'rendered': 'http://localhost/?p=942'}, 'modified': '2023-04-21T21:35:55', 'modified_gmt': '2023-04-21T21:35:55',...</msg>
<status status="PASS" starttime="20230421 17:35:55.371" endtime="20230421 17:35:55.372"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>actual=${actual_result}</arg>
<arg>expected=${expected_result}</arg>
<arg>ignore=${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:55.373" level="INFO">Actual result: {'id': 942, 'date': '2023-04-21T21:35:55', 'date_gmt': '2023-04-21T21:35:55', 'guid': {'rendered': 'http://localhost/?p=942', 'raw': 'http://localhost/?p=942'}, 'modified': '2023-04-21T21:35:55', 'modified_gmt': '2023-04-21T21:35:55', 'password': '', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=942', 'title': {'raw': 'vmJrW0dxD5', 'rendered': 'vmJrW0dxD5'}, 'content': {'raw': '58rXTypvSa', 'rendered': '&lt;p&gt;58rXTypvSa&lt;/p&gt;\n', 'protected': False, 'block_version': 0}, 'excerpt': {'raw': '', 'rendered': '&lt;p&gt;58rXTypvSa&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], 'permalink_template': 'http://localhost/2023/04/21/%postname%/', 'generated_slug': 'vmjrw0dxd5', '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=942'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/942/revisions'}], 'predecessor-version': [{'id': 943, 'href': 'http://localhost/wp-json/wp/v2/posts/942/revisions/943'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=942'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=942'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=942'}], 'wp:action-publish': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-unfiltered-html': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-sticky': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-assign-author': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-create-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-assign-categories': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-create-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'wp:action-assign-tags': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:55.373" level="INFO">Expected result: {'id': 942, 'date': '2023-04-21T21:35:55', 'date_gmt': '2023-04-21T21:35:55', 'guid': {'rendered': 'http://localhost/?p=942'}, 'modified': '2023-04-21T21:35:55', 'modified_gmt': '2023-04-21T21:35:55', 'slug': '', 'status': 'draft', 'type': 'post', 'link': 'http://localhost/?p=942', 'title': {'rendered': 'vmJrW0dxD5'}, 'content': {'rendered': '&lt;p&gt;58rXTypvSa&lt;/p&gt;\n', 'protected': False}, 'excerpt': {'rendered': '&lt;p&gt;58rXTypvSa&lt;/p&gt;\n', 'protected': False}, 'author': 1, 'featured_media': 0, 'comment_status': 'open', 'ping_status': 'open', 'sticky': False, 'template': '', 'format': 'standard', 'meta': [], 'categories': [1], 'tags': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/posts/942'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/posts'}], 'about': [{'href': 'http://localhost/wp-json/wp/v2/types/post'}], 'author': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/users/1'}], 'replies': [{'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/comments?post=942'}], 'version-history': [{'count': 1, 'href': 'http://localhost/wp-json/wp/v2/posts/942/revisions'}], 'predecessor-version': [{'id': 943, 'href': 'http://localhost/wp-json/wp/v2/posts/942/revisions/943'}], 'wp:attachment': [{'href': 'http://localhost/wp-json/wp/v2/media?parent=942'}], 'wp:term': [{'taxonomy': 'category', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/categories?post=942'}, {'taxonomy': 'post_tag', 'embeddable': True, 'href': 'http://localhost/wp-json/wp/v2/tags?post=942'}], 'curies': [{'name': 'wp', 'href': 'https://api.w.org/{rel}', 'templated': True}]}}</msg>
<msg timestamp="20230421 17:35:55.374" level="INFO">Are ignored: ['password', 'guid', ('title', 'raw'), ('content', 'block_version'), ('content', 'raw'), ('excerpt', 'raw'), 'permalink_template', 'generated_slug', '_links']</msg>
<status status="PASS" starttime="20230421 17:35:55.373" endtime="20230421 17:35:55.374"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.206" endtime="20230421 17:35:55.374"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.204" endtime="20230421 17:35:55.374"/>
</kw>
<status status="PASS" starttime="20230421 17:35:54.910" endtime="20230421 17:35:55.375"/>
</test>
<doc>Verify that a post saved on drafts, updated
and published returns a HTTP response.</doc>
<status status="PASS" starttime="20230421 17:35:45.386" endtime="20230421 17:35:55.378"/>
</suite>
<status status="PASS" starttime="20230421 17:35:45.377" endtime="20230421 17:35:55.385"/>
</suite>
<suite id="s1-s2-s4" name="Users" source="D:\worpressTeamA\API_testing_A\wordpress\tests\e2e\users">
<suite id="s1-s2-s4-s1" name="Create Users" source="D:\worpressTeamA\API_testing_A\wordpress\tests\e2e\users\create_users.robot">
<test id="s1-s2-s4-s1-t1" name="Verify That Can Not Be Created Two Users Whit Same Email" line="9">
<kw name="Create Firts User">
<kw name="Random Role" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${role}</var>
<doc>Returns a random user role from the list</doc>
<msg timestamp="20230421 17:35:55.449" level="INFO">${role} = author</msg>
<status status="PASS" starttime="20230421 17:35:55.449" endtime="20230421 17:35:55.449"/>
</kw>
<kw name="Create New User" library="create_users">
<arg>${role}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:55.451" level="INFO">${body} = {'username': 'at19_teamA', 'email': 'apitesters.at19@apitesting.com', 'roles': 'author', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:55.450" endtime="20230421 17:35:55.451"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:55.451" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:55.451" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:55.587" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:55.589" level="INFO">${expected_result} = {'id': 106, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:55.451" endtime="20230421 17:35:55.589"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:55.590" level="INFO">${id_user} = 106</msg>
<status status="PASS" starttime="20230421 17:35:55.589" endtime="20230421 17:35:55.590"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:55.590" level="INFO">${expected_result} = {'id': 106, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:55.590" endtime="20230421 17:35:55.591"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:55.591" level="INFO">${id_user} = 106</msg>
<status status="PASS" starttime="20230421 17:35:55.591" endtime="20230421 17:35:55.591"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.450" endtime="20230421 17:35:55.591"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.448" endtime="20230421 17:35:55.591"/>
</kw>
<kw name="Verify That New User Was Crated" library="create_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:55.593" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:55.593" level="INFO">URL: http://localhost/wp-json/wp/v2/users/106</msg>
<msg timestamp="20230421 17:35:55.665" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:55.665" level="INFO">${actual_result} = {'id': 106, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b5...</msg>
<status status="PASS" starttime="20230421 17:35:55.593" endtime="20230421 17:35:55.665"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:55.667" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:55.666" endtime="20230421 17:35:55.667"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:55.668" level="INFO">Actual result: {'id': 106, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/106'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:55.668" level="INFO">Expected result: {'id': 106, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'locale': 'en_US', 'nickname': 'at19_teamA', 'slug': 'at19_teama', 'roles': ['author'], 'registered_date': '2023-04-21T21:35:55+00:00', 'capabilities': {'upload_files': True, 'edit_posts': True, 'edit_published_posts': True, 'publish_posts': True, 'read': True, 'level_2': True, 'level_1': True, 'level_0': True, 'delete_posts': True, 'delete_published_posts': True, 'author': True}, 'extra_capabilities': {'author': True}, 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/106'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:55.668" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:55.667" endtime="20230421 17:35:55.668"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.592" endtime="20230421 17:35:55.668"/>
</kw>
<kw name="Create Second User With Same Email That Firts">
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${email}</var>
<arg>email</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:55.672" level="INFO">${email} = apitesters.at19@apitesting.com</msg>
<status status="PASS" starttime="20230421 17:35:55.671" endtime="20230421 17:35:55.672"/>
</kw>
<kw name="Random Role" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${role}</var>
<doc>Returns a random user role from the list</doc>
<msg timestamp="20230421 17:35:55.672" level="INFO">${role} = editor</msg>
<status status="PASS" starttime="20230421 17:35:55.672" endtime="20230421 17:35:55.672"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=other_username</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:55.674" level="INFO">${body} = {'username': 'other_username', 'email': 'apitesters.at19@apitesting.com', 'roles': 'editor', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:55.673" endtime="20230421 17:35:55.674"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${error_message}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=500</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:55.675" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:55.675" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:55.740" level="INFO">Actual response is 500, expect: 500</msg>
<msg timestamp="20230421 17:35:55.741" level="INFO">${error_message} = {'code': 'existing_user_email', 'message': 'Sorry, that email address is already used!', 'data': None}</msg>
<status status="PASS" starttime="20230421 17:35:55.674" endtime="20230421 17:35:55.741"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:55.742" level="INFO">${error_message} = {'code': 'existing_user_email', 'message': 'Sorry, that email address is already used!', 'data': None}</msg>
<status status="PASS" starttime="20230421 17:35:55.741" endtime="20230421 17:35:55.742"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.670" endtime="20230421 17:35:55.742"/>
</kw>
<kw name="Verify Response Message">
<arg>${email_existing}</arg>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${error_message}</arg>
<arg>${expected_result}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:55.744" level="INFO">Actual result: {'code': 'existing_user_email', 'message': 'Sorry, that email address is already used!', 'data': None}</msg>
<msg timestamp="20230421 17:35:55.744" level="INFO">Expected result: {'code': 'existing_user_email', 'message': 'Sorry, that email address is already used!', 'data': None}</msg>
<status status="PASS" starttime="20230421 17:35:55.744" endtime="20230421 17:35:55.744"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.743" endtime="20230421 17:35:55.745"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:55.747" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:55.747" endtime="20230421 17:35:55.747"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:55.748" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:55.748" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:55.814" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:55.815" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:55.747" endtime="20230421 17:35:55.815"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:55.816" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:55.816" endtime="20230421 17:35:55.816"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:55.817" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:55.817" endtime="20230421 17:35:55.817"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:55.818" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:55.817" endtime="20230421 17:35:55.818"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.746" endtime="20230421 17:35:55.818"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:55.819" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:55.818" endtime="20230421 17:35:55.819"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:55.820" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:55.820" level="INFO">URL: http://localhost/wp-json/wp/v2/users/106</msg>
<msg timestamp="20230421 17:35:55.925" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:55.925" level="INFO">${response} = {'deleted': True, 'previous': {'id': 106, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:55.819" endtime="20230421 17:35:55.926"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:55.927" level="INFO">${response} = {'deleted': True, 'previous': {'id': 106, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:55.926" endtime="20230421 17:35:55.927"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.745" endtime="20230421 17:35:55.927"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.447" endtime="20230421 17:35:55.928"/>
</test>
<test id="s1-s2-s4-s1-t2" name="Verify That Can Not Be Created Two Users Whit Same Username" line="15">
<kw name="Create Firts User">
<kw name="Random Role" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${role}</var>
<doc>Returns a random user role from the list</doc>
<msg timestamp="20230421 17:35:55.931" level="INFO">${role} = administrator</msg>
<status status="PASS" starttime="20230421 17:35:55.931" endtime="20230421 17:35:55.931"/>
</kw>
<kw name="Create New User" library="create_users">
<arg>${role}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:55.934" level="INFO">${body} = {'username': 'at19_teamA', 'email': 'apitesters.at19@apitesting.com', 'roles': 'administrator', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:55.933" endtime="20230421 17:35:55.934"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:55.935" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:55.935" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:56.073" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:56.074" level="INFO">${expected_result} = {'id': 107, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:55.935" endtime="20230421 17:35:56.074"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:56.075" level="INFO">${id_user} = 107</msg>
<status status="PASS" starttime="20230421 17:35:56.074" endtime="20230421 17:35:56.075"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:56.076" level="INFO">${expected_result} = {'id': 107, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:56.075" endtime="20230421 17:35:56.076"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:56.076" level="INFO">${id_user} = 107</msg>
<status status="PASS" starttime="20230421 17:35:56.076" endtime="20230421 17:35:56.076"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.932" endtime="20230421 17:35:56.076"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.931" endtime="20230421 17:35:56.077"/>
</kw>
<kw name="Verify That New User Was Crated" library="create_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:56.079" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:56.079" level="INFO">URL: http://localhost/wp-json/wp/v2/users/107</msg>
<msg timestamp="20230421 17:35:56.150" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:56.151" level="INFO">${actual_result} = {'id': 107, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b5...</msg>
<status status="PASS" starttime="20230421 17:35:56.078" endtime="20230421 17:35:56.151"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:56.152" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:56.151" endtime="20230421 17:35:56.153"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:56.154" level="INFO">Actual result: {'id': 107, 'name': 'at19_teamA', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'slug': 'at19_teama', 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/107'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:56.155" level="INFO">Expected result: {'id': 107, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'link': 'http://localhost/author/at19_teama/', 'locale': 'en_US', 'nickname': 'at19_teamA', 'slug': 'at19_teama', 'roles': ['administrator'], 'registered_date': '2023-04-21T21:35:56+00:00', 'capabilities': {'switch_themes': True, 'edit_themes': True, 'activate_plugins': True, 'edit_plugins': True, 'edit_users': True, 'edit_files': True, 'manage_options': True, 'moderate_comments': True, 'manage_categories': True, 'manage_links': True, 'upload_files': True, 'import': True, 'unfiltered_html': True, 'edit_posts': True, 'edit_others_posts': True, 'edit_published_posts': True, 'publish_posts': True, 'edit_pages': True, 'read': True, 'level_10': True, 'level_9': True, 'level_8': True, 'level_7': True, 'level_6': True, 'level_5': True, 'level_4': True, 'level_3': True, 'level_2': True, 'level_1': True, 'level_0': True, 'edit_others_pages': True, 'edit_published_pages': True, 'publish_pages': True, 'delete_pages': True, 'delete_others_pages': True, 'delete_published_pages': True, 'delete_posts': True, 'delete_others_posts': True, 'delete_published_posts': True, 'delete_private_posts': True, 'edit_private_posts': True, 'read_private_posts': True, 'delete_private_pages': True, 'edit_private_pages': True, 'read_private_pages': True, 'delete_users': True, 'create_users': True, 'unfiltered_upload': True, 'edit_dashboard': True, 'update_plugins': True, 'delete_plugins': True, 'install_plugins': True, 'update_themes': True, 'install_themes': True, 'update_core': True, 'list_users': True, 'remove_users': True, 'promote_users': True, 'edit_theme_options': True, 'delete_themes': True, 'export': True, 'restrict_content': True, 'list_roles': True, 'create_roles': True, 'delete_roles': True, 'edit_roles': True, 'administrator': True}, 'extra_capabilities': {'administrator': True}, 'avatar_urls': {'24': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=24&amp;d=mm&amp;r=g', '48': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=48&amp;d=mm&amp;r=g', '96': 'http://2.gravatar.com/avatar/b55a90b2d2ac1b52314f6f8dd6f8ae73?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/107'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:56.155" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:56.153" endtime="20230421 17:35:56.155"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.077" endtime="20230421 17:35:56.155"/>
</kw>
<kw name="Create Second User With Same Username That Firts">
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${username}</var>
<arg>username</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:56.157" level="INFO">${username} = at19_teamA</msg>
<status status="PASS" starttime="20230421 17:35:56.157" endtime="20230421 17:35:56.157"/>
</kw>
<kw name="Random Role" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${role}</var>
<doc>Returns a random user role from the list</doc>
<msg timestamp="20230421 17:35:56.157" level="INFO">${role} = subscriber</msg>
<status status="PASS" starttime="20230421 17:35:56.157" endtime="20230421 17:35:56.157"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=api.at19@apitesting.com</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:56.158" level="INFO">${body} = {'username': 'at19_teamA', 'email': 'api.at19@apitesting.com', 'roles': 'subscriber', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:56.158" endtime="20230421 17:35:56.158"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${error_message}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=500</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:56.159" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:56.159" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:56.227" level="INFO">Actual response is 500, expect: 500</msg>
<msg timestamp="20230421 17:35:56.227" level="INFO">${error_message} = {'code': 'existing_user_login', 'message': 'Sorry, that username already exists!', 'data': None}</msg>
<status status="PASS" starttime="20230421 17:35:56.158" endtime="20230421 17:35:56.228"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:56.228" level="INFO">${error_message} = {'code': 'existing_user_login', 'message': 'Sorry, that username already exists!', 'data': None}</msg>
<status status="PASS" starttime="20230421 17:35:56.228" endtime="20230421 17:35:56.229"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.156" endtime="20230421 17:35:56.229"/>
</kw>
<kw name="Verify Response Message">
<arg>${username_existing}</arg>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${error_message}</arg>
<arg>${expected_result}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:56.231" level="INFO">Actual result: {'code': 'existing_user_login', 'message': 'Sorry, that username already exists!', 'data': None}</msg>
<msg timestamp="20230421 17:35:56.231" level="INFO">Expected result: {'code': 'existing_user_login', 'message': 'Sorry, that username already exists!', 'data': None}</msg>
<status status="PASS" starttime="20230421 17:35:56.231" endtime="20230421 17:35:56.231"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.229" endtime="20230421 17:35:56.232"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:56.234" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:56.233" endtime="20230421 17:35:56.234"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:56.234" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:56.234" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:56.300" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:56.302" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:56.234" endtime="20230421 17:35:56.302"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:56.303" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:56.302" endtime="20230421 17:35:56.303"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:56.304" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:56.303" endtime="20230421 17:35:56.304"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:56.305" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:56.304" endtime="20230421 17:35:56.305"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.233" endtime="20230421 17:35:56.305"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:56.306" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:56.305" endtime="20230421 17:35:56.306"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:56.306" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:56.306" level="INFO">URL: http://localhost/wp-json/wp/v2/users/107</msg>
<msg timestamp="20230421 17:35:56.403" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:56.405" level="INFO">${response} = {'deleted': True, 'previous': {'id': 107, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:56.306" endtime="20230421 17:35:56.405"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:56.406" level="INFO">${response} = {'deleted': True, 'previous': {'id': 107, 'username': 'at19_teamA', 'name': 'at19_teamA', 'first_name': '', 'last_name': '', 'email': 'apitesters.at19@apitesting.com', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:56.405" endtime="20230421 17:35:56.406"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.232" endtime="20230421 17:35:56.407"/>
</kw>
<status status="PASS" starttime="20230421 17:35:55.930" endtime="20230421 17:35:56.407"/>
</test>
<doc>Tests to verify scenarios that creates more than one user
whit data repeted.</doc>
<status status="PASS" starttime="20230421 17:35:55.396" endtime="20230421 17:35:56.410"/>
</suite>
<suite id="s1-s2-s4-s2" name="Modify Users Data" source="D:\worpressTeamA\API_testing_A\wordpress\tests\e2e\users\modify_users_data.robot">
<test id="s1-s2-s4-s2-t1" name="Verify That Can Not Be Changed The Username Of A User After Create It" line="11">
<kw name="Create User To Edit">
<kw name="Get User Data" library="get_users">
<kw name="Random Role" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${role}</var>
<doc>Returns a random user role from the list</doc>
<msg timestamp="20230421 17:35:56.474" level="INFO">${role} = subscriber</msg>
<status status="PASS" starttime="20230421 17:35:56.474" endtime="20230421 17:35:56.474"/>
</kw>
<kw name="Random Username" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${username}</var>
<doc>Returns a random username</doc>
<msg timestamp="20230421 17:35:56.490" level="INFO">${username} = Scott Holsinger</msg>
<status status="PASS" starttime="20230421 17:35:56.475" endtime="20230421 17:35:56.491"/>
</kw>
<kw name="Random Email" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${email}</var>
<doc>Returns a random email</doc>
<msg timestamp="20230421 17:35:56.656" level="INFO">${email} = brandtamy@example.com</msg>
<status status="PASS" starttime="20230421 17:35:56.491" endtime="20230421 17:35:56.657"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${role}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:56.657" level="INFO">${role} = subscriber</msg>
<status status="PASS" starttime="20230421 17:35:56.657" endtime="20230421 17:35:56.657"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:56.658" level="INFO">${username} = Scott Holsinger</msg>
<status status="PASS" starttime="20230421 17:35:56.657" endtime="20230421 17:35:56.658"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:56.658" level="INFO">${email} = brandtamy@example.com</msg>
<status status="PASS" starttime="20230421 17:35:56.658" endtime="20230421 17:35:56.658"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.473" endtime="20230421 17:35:56.659"/>
</kw>
<kw name="Create New User" library="create_users">
<arg>${role}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:56.660" level="INFO">${body} = {'username': 'Scott Holsinger', 'email': 'brandtamy@example.com', 'roles': 'subscriber', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:56.660" endtime="20230421 17:35:56.660"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:56.661" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:56.661" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:56.775" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:56.776" level="INFO">${expected_result} = {'id': 108, 'username': 'Scott Holsinger', 'name': 'Scott Holsinger', 'first_name': '', 'last_name': '', 'email': 'brandtamy@example.com', 'url': '', 'description': '', 'link': 'http://localhost/autho...</msg>
<status status="PASS" starttime="20230421 17:35:56.660" endtime="20230421 17:35:56.776"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:56.777" level="INFO">${id_user} = 108</msg>
<status status="PASS" starttime="20230421 17:35:56.777" endtime="20230421 17:35:56.777"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:56.778" level="INFO">${expected_result} = {'id': 108, 'username': 'Scott Holsinger', 'name': 'Scott Holsinger', 'first_name': '', 'last_name': '', 'email': 'brandtamy@example.com', 'url': '', 'description': '', 'link': 'http://localhost/autho...</msg>
<status status="PASS" starttime="20230421 17:35:56.777" endtime="20230421 17:35:56.778"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:56.778" level="INFO">${id_user} = 108</msg>
<status status="PASS" starttime="20230421 17:35:56.778" endtime="20230421 17:35:56.778"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.659" endtime="20230421 17:35:56.779"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.471" endtime="20230421 17:35:56.779"/>
</kw>
<kw name="Verify That New User Was Crated" library="create_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:56.781" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:56.781" level="INFO">URL: http://localhost/wp-json/wp/v2/users/108</msg>
<msg timestamp="20230421 17:35:56.846" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:56.848" level="INFO">${actual_result} = {'id': 108, 'name': 'Scott Holsinger', 'url': '', 'description': '', 'link': 'http://localhost/author/scott-holsinger/', 'slug': 'scott-holsinger', 'avatar_urls': {'24': 'http://1.gravatar.com/avatar/...</msg>
<status status="PASS" starttime="20230421 17:35:56.780" endtime="20230421 17:35:56.848"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:56.849" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:56.849" endtime="20230421 17:35:56.849"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:56.850" level="INFO">Actual result: {'id': 108, 'name': 'Scott Holsinger', 'url': '', 'description': '', 'link': 'http://localhost/author/scott-holsinger/', 'slug': 'scott-holsinger', 'avatar_urls': {'24': 'http://1.gravatar.com/avatar/4ac1154613ad968303ab99dad2e642ed?s=24&amp;d=mm&amp;r=g', '48': 'http://1.gravatar.com/avatar/4ac1154613ad968303ab99dad2e642ed?s=48&amp;d=mm&amp;r=g', '96': 'http://1.gravatar.com/avatar/4ac1154613ad968303ab99dad2e642ed?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/108'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:56.850" level="INFO">Expected result: {'id': 108, 'username': 'Scott Holsinger', 'name': 'Scott Holsinger', 'first_name': '', 'last_name': '', 'email': 'brandtamy@example.com', 'url': '', 'description': '', 'link': 'http://localhost/author/scott-holsinger/', 'locale': 'en_US', 'nickname': 'Scott Holsinger', 'slug': 'scott-holsinger', 'roles': ['subscriber'], 'registered_date': '2023-04-21T21:35:56+00:00', 'capabilities': {'read': True, 'level_0': True, 'subscriber': True}, 'extra_capabilities': {'subscriber': True}, 'avatar_urls': {'24': 'http://1.gravatar.com/avatar/4ac1154613ad968303ab99dad2e642ed?s=24&amp;d=mm&amp;r=g', '48': 'http://1.gravatar.com/avatar/4ac1154613ad968303ab99dad2e642ed?s=48&amp;d=mm&amp;r=g', '96': 'http://1.gravatar.com/avatar/4ac1154613ad968303ab99dad2e642ed?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/108'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:56.850" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:56.849" endtime="20230421 17:35:56.850"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.780" endtime="20230421 17:35:56.850"/>
</kw>
<kw name="Change Username Of The Used Created">
<kw name="Random Username" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${username}</var>
<doc>Returns a random username</doc>
<msg timestamp="20230421 17:35:56.854" level="INFO">${username} = James Goodman</msg>
<status status="PASS" starttime="20230421 17:35:56.852" endtime="20230421 17:35:56.854"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:56.855" level="INFO">${body} = {'username': 'James Goodman'}</msg>
<status status="PASS" starttime="20230421 17:35:56.854" endtime="20230421 17:35:56.855"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${error_message}</var>
<arg>put</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${id_user}</arg>
<arg>exp_status=400</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:56.856" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:56.856" level="INFO">URL: http://localhost/wp-json/wp/v2/users/108</msg>
<msg timestamp="20230421 17:35:56.917" level="INFO">Actual response is 400, expect: 400</msg>
<msg timestamp="20230421 17:35:56.918" level="INFO">${error_message} = {'code': 'rest_user_invalid_argument', 'message': 'Username is not editable.', 'data': {'status': 400}}</msg>
<status status="PASS" starttime="20230421 17:35:56.855" endtime="20230421 17:35:56.918"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:56.919" level="INFO">${error_message} = {'code': 'rest_user_invalid_argument', 'message': 'Username is not editable.', 'data': {'status': 400}}</msg>
<status status="PASS" starttime="20230421 17:35:56.918" endtime="20230421 17:35:56.919"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.851" endtime="20230421 17:35:56.919"/>
</kw>
<kw name="Verify Response Message">
<arg>${username_not_editable}</arg>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${error_message}</arg>
<arg>${expected_result}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:56.922" level="INFO">Actual result: {'code': 'rest_user_invalid_argument', 'message': 'Username is not editable.', 'data': {'status': 400}}</msg>
<msg timestamp="20230421 17:35:56.922" level="INFO">Expected result: {'code': 'rest_user_invalid_argument', 'message': 'Username is not editable.', 'data': {'status': 400}}</msg>
<status status="PASS" starttime="20230421 17:35:56.921" endtime="20230421 17:35:56.922"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.920" endtime="20230421 17:35:56.922"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:56.924" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:56.924" endtime="20230421 17:35:56.924"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:56.925" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:56.925" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:56.990" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:56.991" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:56.925" endtime="20230421 17:35:56.991"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:56.993" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:56.992" endtime="20230421 17:35:56.993"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:56.994" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:56.993" endtime="20230421 17:35:56.994"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:56.994" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:56.994" endtime="20230421 17:35:56.994"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.923" endtime="20230421 17:35:56.994"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:56.995" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:56.995" endtime="20230421 17:35:56.995"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:56.996" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:56.996" level="INFO">URL: http://localhost/wp-json/wp/v2/users/108</msg>
<msg timestamp="20230421 17:35:57.099" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:57.100" level="INFO">${response} = {'deleted': True, 'previous': {'id': 108, 'username': 'Scott Holsinger', 'name': 'Scott Holsinger', 'first_name': '', 'last_name': '', 'email': 'brandtamy@example.com', 'url': '', 'description': '', '...</msg>
<status status="PASS" starttime="20230421 17:35:56.995" endtime="20230421 17:35:57.100"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.101" level="INFO">${response} = {'deleted': True, 'previous': {'id': 108, 'username': 'Scott Holsinger', 'name': 'Scott Holsinger', 'first_name': '', 'last_name': '', 'email': 'brandtamy@example.com', 'url': '', 'description': '', '...</msg>
<status status="PASS" starttime="20230421 17:35:57.101" endtime="20230421 17:35:57.101"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.923" endtime="20230421 17:35:57.102"/>
</kw>
<status status="PASS" starttime="20230421 17:35:56.468" endtime="20230421 17:35:57.103"/>
</test>
<test id="s1-s2-s4-s2-t2" name="Verify That Can Be Changed The Email Of A User After Create It" line="17">
<kw name="Create User To Edit">
<kw name="Get User Data" library="get_users">
<kw name="Random Role" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${role}</var>
<doc>Returns a random user role from the list</doc>
<msg timestamp="20230421 17:35:57.109" level="INFO">${role} = contributor</msg>
<status status="PASS" starttime="20230421 17:35:57.107" endtime="20230421 17:35:57.109"/>
</kw>
<kw name="Random Username" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${username}</var>
<doc>Returns a random username</doc>
<msg timestamp="20230421 17:35:57.112" level="INFO">${username} = Sean Nielsen</msg>
<status status="PASS" starttime="20230421 17:35:57.110" endtime="20230421 17:35:57.112"/>
</kw>
<kw name="Random Email" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${email}</var>
<doc>Returns a random email</doc>
<msg timestamp="20230421 17:35:57.267" level="INFO">${email} = heather59@example.net</msg>
<status status="PASS" starttime="20230421 17:35:57.112" endtime="20230421 17:35:57.267"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${role}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.269" level="INFO">${role} = contributor</msg>
<status status="PASS" starttime="20230421 17:35:57.268" endtime="20230421 17:35:57.269"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.269" level="INFO">${username} = Sean Nielsen</msg>
<status status="PASS" starttime="20230421 17:35:57.269" endtime="20230421 17:35:57.270"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.270" level="INFO">${email} = heather59@example.net</msg>
<status status="PASS" starttime="20230421 17:35:57.270" endtime="20230421 17:35:57.270"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.107" endtime="20230421 17:35:57.270"/>
</kw>
<kw name="Create New User" library="create_users">
<arg>${role}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:57.272" level="INFO">${body} = {'username': 'Sean Nielsen', 'email': 'heather59@example.net', 'roles': 'contributor', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:57.272" endtime="20230421 17:35:57.273"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:57.274" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:57.274" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:57.399" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:57.400" level="INFO">${expected_result} = {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'heather59@example.net', 'url': '', 'description': '', 'link': 'http://localhost/author/sean...</msg>
<status status="PASS" starttime="20230421 17:35:57.273" endtime="20230421 17:35:57.400"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:57.401" level="INFO">${id_user} = 109</msg>
<status status="PASS" starttime="20230421 17:35:57.401" endtime="20230421 17:35:57.401"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.403" level="INFO">${expected_result} = {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'heather59@example.net', 'url': '', 'description': '', 'link': 'http://localhost/author/sean...</msg>
<status status="PASS" starttime="20230421 17:35:57.402" endtime="20230421 17:35:57.403"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.404" level="INFO">${id_user} = 109</msg>
<status status="PASS" starttime="20230421 17:35:57.403" endtime="20230421 17:35:57.404"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.271" endtime="20230421 17:35:57.404"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.106" endtime="20230421 17:35:57.404"/>
</kw>
<kw name="Verify That New User Was Crated" library="create_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:57.407" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:57.407" level="INFO">URL: http://localhost/wp-json/wp/v2/users/109</msg>
<msg timestamp="20230421 17:35:57.474" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:57.474" level="INFO">${actual_result} = {'id': 109, 'name': 'Sean Nielsen', 'url': '', 'description': '', 'link': 'http://localhost/author/sean-nielsen/', 'slug': 'sean-nielsen', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/33b16f5d2...</msg>
<status status="PASS" starttime="20230421 17:35:57.406" endtime="20230421 17:35:57.475"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:57.476" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:57.476" endtime="20230421 17:35:57.476"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:57.477" level="INFO">Actual result: {'id': 109, 'name': 'Sean Nielsen', 'url': '', 'description': '', 'link': 'http://localhost/author/sean-nielsen/', 'slug': 'sean-nielsen', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/33b16f5d2c10c938261fd1b3dfafedfa?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/33b16f5d2c10c938261fd1b3dfafedfa?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/33b16f5d2c10c938261fd1b3dfafedfa?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/109'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:57.477" level="INFO">Expected result: {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'heather59@example.net', 'url': '', 'description': '', 'link': 'http://localhost/author/sean-nielsen/', 'locale': 'en_US', 'nickname': 'Sean Nielsen', 'slug': 'sean-nielsen', 'roles': ['contributor'], 'registered_date': '2023-04-21T21:35:57+00:00', 'capabilities': {'edit_posts': True, 'read': True, 'level_1': True, 'level_0': True, 'delete_posts': True, 'contributor': True}, 'extra_capabilities': {'contributor': True}, 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/33b16f5d2c10c938261fd1b3dfafedfa?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/33b16f5d2c10c938261fd1b3dfafedfa?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/33b16f5d2c10c938261fd1b3dfafedfa?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/109'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:57.477" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:57.476" endtime="20230421 17:35:57.477"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.405" endtime="20230421 17:35:57.477"/>
</kw>
<kw name="Change Email Of The Used Created">
<kw name="Random Email" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${new_email}</var>
<doc>Returns a random email</doc>
<msg timestamp="20230421 17:35:57.602" level="INFO">${new_email} = rbrown@example.net</msg>
<status status="PASS" starttime="20230421 17:35:57.479" endtime="20230421 17:35:57.602"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>email=${new_email}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:57.603" level="INFO">${body} = {'email': 'rbrown@example.net'}</msg>
<status status="PASS" starttime="20230421 17:35:57.603" endtime="20230421 17:35:57.603"/>
</kw>
<kw name="Modify User" library="modify_users">
<var>${actual_result}</var>
<arg>${id_user}</arg>
<arg>${body}</arg>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>put</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:57.605" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:57.605" level="INFO">URL: http://localhost/wp-json/wp/v2/users/109</msg>
<msg timestamp="20230421 17:35:57.671" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:57.672" level="INFO">${expected_result} = {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'rbrown@example.net', 'url': '', 'description': '', 'link': 'http://localhost/author/sean-ni...</msg>
<status status="PASS" starttime="20230421 17:35:57.604" endtime="20230421 17:35:57.673"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.674" level="INFO">${expected_result} = {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'rbrown@example.net', 'url': '', 'description': '', 'link': 'http://localhost/author/sean-ni...</msg>
<status status="PASS" starttime="20230421 17:35:57.673" endtime="20230421 17:35:57.674"/>
</kw>
<msg timestamp="20230421 17:35:57.674" level="INFO">${actual_result} = {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'rbrown@example.net', 'url': '', 'description': '', 'link': 'http://localhost/author/sean-ni...</msg>
<status status="PASS" starttime="20230421 17:35:57.603" endtime="20230421 17:35:57.674"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${new_email}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.675" level="INFO">${new_email} = rbrown@example.net</msg>
<status status="PASS" starttime="20230421 17:35:57.674" endtime="20230421 17:35:57.675"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${actual_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.675" level="INFO">${actual_result} = {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'rbrown@example.net', 'url': '', 'description': '', 'link': 'http://localhost/author/sean-ni...</msg>
<status status="PASS" starttime="20230421 17:35:57.675" endtime="20230421 17:35:57.675"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.478" endtime="20230421 17:35:57.676"/>
</kw>
<kw name="Verify That Emial Has Been Modified">
<kw name="Verify Value Edited" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${new_email}</arg>
<arg>${expected_result}</arg>
<arg>${email}</arg>
<doc>Verify that the actual result does not have a specific value</doc>
<msg timestamp="20230421 17:35:57.677" level="INFO">The past email: heather59@example.net</msg>
<msg timestamp="20230421 17:35:57.677" level="INFO">The actual email: heather59@example.net</msg>
<msg timestamp="20230421 17:35:57.678" level="INFO">Past result: {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'rbrown@example.net', 'url': '', 'description': '', 'link': 'http://localhost/author/sean-nielsen/', 'locale': 'en_US', 'nickname': 'Sean Nielsen', 'slug': 'sean-nielsen', 'roles': ['contributor'], 'registered_date': '2023-04-21T21:35:57+00:00', 'capabilities': {'edit_posts': True, 'read': True, 'level_1': True, 'level_0': True, 'delete_posts': True, 'contributor': True}, 'extra_capabilities': {'contributor': True}, 'avatar_urls': {'24': 'http://1.gravatar.com/avatar/1a2ea7c5ff52f1eb41b454b39c4456d1?s=24&amp;d=mm&amp;r=g', '48': 'http://1.gravatar.com/avatar/1a2ea7c5ff52f1eb41b454b39c4456d1?s=48&amp;d=mm&amp;r=g', '96': 'http://1.gravatar.com/avatar/1a2ea7c5ff52f1eb41b454b39c4456d1?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/109'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:57.678" level="INFO">Actual result: {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'rbrown@example.net', 'url': '', 'description': '', 'link': 'http://localhost/author/sean-nielsen/', 'locale': 'en_US', 'nickname': 'Sean Nielsen', 'slug': 'sean-nielsen', 'roles': ['contributor'], 'registered_date': '2023-04-21T21:35:57+00:00', 'capabilities': {'edit_posts': True, 'read': True, 'level_1': True, 'level_0': True, 'delete_posts': True, 'contributor': True}, 'extra_capabilities': {'contributor': True}, 'avatar_urls': {'24': 'http://1.gravatar.com/avatar/1a2ea7c5ff52f1eb41b454b39c4456d1?s=24&amp;d=mm&amp;r=g', '48': 'http://1.gravatar.com/avatar/1a2ea7c5ff52f1eb41b454b39c4456d1?s=48&amp;d=mm&amp;r=g', '96': 'http://1.gravatar.com/avatar/1a2ea7c5ff52f1eb41b454b39c4456d1?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/109'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<status status="PASS" starttime="20230421 17:35:57.677" endtime="20230421 17:35:57.678"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.676" endtime="20230421 17:35:57.678"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:57.681" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:57.680" endtime="20230421 17:35:57.681"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:57.682" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:57.682" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:57.746" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:57.746" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:57.681" endtime="20230421 17:35:57.746"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:57.748" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:57.747" endtime="20230421 17:35:57.748"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:57.749" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:57.748" endtime="20230421 17:35:57.749"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:57.750" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:57.749" endtime="20230421 17:35:57.750"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.679" endtime="20230421 17:35:57.750"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:57.751" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:57.750" endtime="20230421 17:35:57.751"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:57.752" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:57.752" level="INFO">URL: http://localhost/wp-json/wp/v2/users/109</msg>
<msg timestamp="20230421 17:35:57.862" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:57.864" level="INFO">${response} = {'deleted': True, 'previous': {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'rbrown@example.net', 'url': '', 'description': '', 'link': 'h...</msg>
<status status="PASS" starttime="20230421 17:35:57.751" endtime="20230421 17:35:57.864"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.865" level="INFO">${response} = {'deleted': True, 'previous': {'id': 109, 'username': 'Sean Nielsen', 'name': 'Sean Nielsen', 'first_name': '', 'last_name': '', 'email': 'rbrown@example.net', 'url': '', 'description': '', 'link': 'h...</msg>
<status status="PASS" starttime="20230421 17:35:57.864" endtime="20230421 17:35:57.865"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.679" endtime="20230421 17:35:57.865"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.105" endtime="20230421 17:35:57.866"/>
</test>
<test id="s1-s2-s4-s2-t3" name="Verify That Can Not Be Changed The Email Of A User After Create It If The Email Bellow To Other User" line="23">
<kw name="Create User To Edit">
<kw name="Get User Data" library="get_users">
<kw name="Random Role" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${role}</var>
<doc>Returns a random user role from the list</doc>
<msg timestamp="20230421 17:35:57.872" level="INFO">${role} = editor</msg>
<status status="PASS" starttime="20230421 17:35:57.871" endtime="20230421 17:35:57.872"/>
</kw>
<kw name="Random Username" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${username}</var>
<doc>Returns a random username</doc>
<msg timestamp="20230421 17:35:57.873" level="INFO">${username} = Melvin Watson</msg>
<status status="PASS" starttime="20230421 17:35:57.872" endtime="20230421 17:35:57.874"/>
</kw>
<kw name="Random Email" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${email}</var>
<doc>Returns a random email</doc>
<msg timestamp="20230421 17:35:57.991" level="INFO">${email} = brendacarter@example.org</msg>
<status status="PASS" starttime="20230421 17:35:57.874" endtime="20230421 17:35:57.991"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${role}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.992" level="INFO">${role} = editor</msg>
<status status="PASS" starttime="20230421 17:35:57.992" endtime="20230421 17:35:57.992"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.992" level="INFO">${username} = Melvin Watson</msg>
<status status="PASS" starttime="20230421 17:35:57.992" endtime="20230421 17:35:57.992"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:57.992" level="INFO">${email} = brendacarter@example.org</msg>
<status status="PASS" starttime="20230421 17:35:57.992" endtime="20230421 17:35:57.992"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.870" endtime="20230421 17:35:57.992"/>
</kw>
<kw name="Create New User" library="create_users">
<arg>${role}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:57.995" level="INFO">${body} = {'username': 'Melvin Watson', 'email': 'brendacarter@example.org', 'roles': 'editor', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:57.994" endtime="20230421 17:35:57.995"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:57.995" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:57.995" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:58.163" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:58.164" level="INFO">${expected_result} = {'id': 110, 'username': 'Melvin Watson', 'name': 'Melvin Watson', 'first_name': '', 'last_name': '', 'email': 'brendacarter@example.org', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:57.995" endtime="20230421 17:35:58.165"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_user}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:58.166" level="INFO">${id_user} = 110</msg>
<status status="PASS" starttime="20230421 17:35:58.165" endtime="20230421 17:35:58.166"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${expected_result}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:58.168" level="INFO">${expected_result} = {'id': 110, 'username': 'Melvin Watson', 'name': 'Melvin Watson', 'first_name': '', 'last_name': '', 'email': 'brendacarter@example.org', 'url': '', 'description': '', 'link': 'http://localhost/author...</msg>
<status status="PASS" starttime="20230421 17:35:58.166" endtime="20230421 17:35:58.168"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:58.169" level="INFO">${id_user} = 110</msg>
<status status="PASS" starttime="20230421 17:35:58.168" endtime="20230421 17:35:58.170"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.992" endtime="20230421 17:35:58.170"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.870" endtime="20230421 17:35:58.170"/>
</kw>
<kw name="Verify That New User Was Crated" library="create_users">
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${actual_result}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:58.173" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:58.173" level="INFO">URL: http://localhost/wp-json/wp/v2/users/110</msg>
<msg timestamp="20230421 17:35:58.281" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:58.282" level="INFO">${actual_result} = {'id': 110, 'name': 'Melvin Watson', 'url': '', 'description': '', 'link': 'http://localhost/author/melvin-watson/', 'slug': 'melvin-watson', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/f85116...</msg>
<status status="PASS" starttime="20230421 17:35:58.172" endtime="20230421 17:35:58.283"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ignore}</var>
<arg>username</arg>
<arg>first_name</arg>
<arg>last_name</arg>
<arg>email</arg>
<arg>locale</arg>
<arg>nickname</arg>
<arg>roles</arg>
<arg>registered_date</arg>
<arg>capabilities</arg>
<arg>extra_capabilities</arg>
<arg>meta</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230421 17:35:58.284" level="INFO">${ignore} = ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:58.283" endtime="20230421 17:35:58.284"/>
</kw>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${actual_result}</arg>
<arg>${expected_result}</arg>
<arg>${ignore}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:58.285" level="INFO">Actual result: {'id': 110, 'name': 'Melvin Watson', 'url': '', 'description': '', 'link': 'http://localhost/author/melvin-watson/', 'slug': 'melvin-watson', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/f85116de38ba04d295028229529f6354?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/f85116de38ba04d295028229529f6354?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/f85116de38ba04d295028229529f6354?s=96&amp;d=mm&amp;r=g'}, 'meta': [], '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/110'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:58.286" level="INFO">Expected result: {'id': 110, 'username': 'Melvin Watson', 'name': 'Melvin Watson', 'first_name': '', 'last_name': '', 'email': 'brendacarter@example.org', 'url': '', 'description': '', 'link': 'http://localhost/author/melvin-watson/', 'locale': 'en_US', 'nickname': 'Melvin Watson', 'slug': 'melvin-watson', 'roles': ['editor'], 'registered_date': '2023-04-21T21:35:58+00:00', 'capabilities': {'moderate_comments': True, 'manage_categories': True, 'manage_links': True, 'upload_files': True, 'unfiltered_html': True, 'edit_posts': True, 'edit_others_posts': True, 'edit_published_posts': True, 'publish_posts': True, 'edit_pages': True, 'read': True, 'level_7': True, 'level_6': True, 'level_5': True, 'level_4': True, 'level_3': True, 'level_2': True, 'level_1': True, 'level_0': True, 'edit_others_pages': True, 'edit_published_pages': True, 'publish_pages': True, 'delete_pages': True, 'delete_others_pages': True, 'delete_published_pages': True, 'delete_posts': True, 'delete_others_posts': True, 'delete_published_posts': True, 'delete_private_posts': True, 'edit_private_posts': True, 'read_private_posts': True, 'delete_private_pages': True, 'edit_private_pages': True, 'read_private_pages': True, 'editor': True}, 'extra_capabilities': {'editor': True}, 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/f85116de38ba04d295028229529f6354?s=24&amp;d=mm&amp;r=g', '48': 'http://0.gravatar.com/avatar/f85116de38ba04d295028229529f6354?s=48&amp;d=mm&amp;r=g', '96': 'http://0.gravatar.com/avatar/f85116de38ba04d295028229529f6354?s=96&amp;d=mm&amp;r=g'}, 'meta': {'persisted_preferences': []}, '_links': {'self': [{'href': 'http://localhost/wp-json/wp/v2/users/110'}], 'collection': [{'href': 'http://localhost/wp-json/wp/v2/users'}]}}</msg>
<msg timestamp="20230421 17:35:58.286" level="INFO">Are ignored: ['username', 'first_name', 'last_name', 'email', 'locale', 'nickname', 'roles', 'registered_date', 'capabilities', 'extra_capabilities', 'meta']</msg>
<status status="PASS" starttime="20230421 17:35:58.285" endtime="20230421 17:35:58.286"/>
</kw>
<status status="PASS" starttime="20230421 17:35:58.171" endtime="20230421 17:35:58.287"/>
</kw>
<kw name="Change Email Of The Used Created By One Already Used">
<kw name="Get Email In Use">
<kw name="Get User Data" library="get_users">
<kw name="Random Role" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${role}</var>
<doc>Returns a random user role from the list</doc>
<msg timestamp="20230421 17:35:58.292" level="INFO">${role} = subscriber</msg>
<status status="PASS" starttime="20230421 17:35:58.292" endtime="20230421 17:35:58.292"/>
</kw>
<kw name="Random Username" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${username}</var>
<doc>Returns a random username</doc>
<msg timestamp="20230421 17:35:58.294" level="INFO">${username} = Raul Daniels</msg>
<status status="PASS" starttime="20230421 17:35:58.292" endtime="20230421 17:35:58.294"/>
</kw>
<kw name="Random Email" library="wordpress.src.actions.users.random_elements.RandomElements">
<var>${email}</var>
<doc>Returns a random email</doc>
<msg timestamp="20230421 17:35:58.494" level="INFO">${email} = kevinmoreno@example.com</msg>
<status status="PASS" starttime="20230421 17:35:58.294" endtime="20230421 17:35:58.494"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${role}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:58.495" level="INFO">${role} = subscriber</msg>
<status status="PASS" starttime="20230421 17:35:58.494" endtime="20230421 17:35:58.495"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:58.497" level="INFO">${username} = Raul Daniels</msg>
<status status="PASS" starttime="20230421 17:35:58.496" endtime="20230421 17:35:58.497"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:58.498" level="INFO">${email} = kevinmoreno@example.com</msg>
<status status="PASS" starttime="20230421 17:35:58.497" endtime="20230421 17:35:58.498"/>
</kw>
<status status="PASS" starttime="20230421 17:35:58.290" endtime="20230421 17:35:58.498"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>username=${username}</arg>
<arg>email=${email}</arg>
<arg>roles=${role}</arg>
<arg>password=password</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:58.500" level="INFO">${body} = {'username': 'Raul Daniels', 'email': 'kevinmoreno@example.com', 'roles': 'subscriber', 'password': 'password'}</msg>
<status status="PASS" starttime="20230421 17:35:58.499" endtime="20230421 17:35:58.500"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${expected_result}</var>
<arg>post</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>exp_status=201</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:58.501" level="INFO">Method: POST</msg>
<msg timestamp="20230421 17:35:58.501" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:58.648" level="INFO">Actual response is 201, expect: 201</msg>
<msg timestamp="20230421 17:35:58.649" level="INFO">${expected_result} = {'id': 111, 'username': 'Raul Daniels', 'name': 'Raul Daniels', 'first_name': '', 'last_name': '', 'email': 'kevinmoreno@example.com', 'url': '', 'description': '', 'link': 'http://localhost/author/ra...</msg>
<status status="PASS" starttime="20230421 17:35:58.500" endtime="20230421 17:35:58.649"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${used_id}</var>
<arg>id</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:58.650" level="INFO">${used_id} = 111</msg>
<status status="PASS" starttime="20230421 17:35:58.650" endtime="20230421 17:35:58.650"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${used_email}</var>
<arg>email</arg>
<arg>${expected_result}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:58.651" level="INFO">${used_email} = kevinmoreno@example.com</msg>
<status status="PASS" starttime="20230421 17:35:58.651" endtime="20230421 17:35:58.651"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${used_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:58.652" level="INFO">${used_id} = 111</msg>
<status status="PASS" starttime="20230421 17:35:58.651" endtime="20230421 17:35:58.652"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${used_email}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:58.652" level="INFO">${used_email} = kevinmoreno@example.com</msg>
<status status="PASS" starttime="20230421 17:35:58.652" endtime="20230421 17:35:58.652"/>
</kw>
<status status="PASS" starttime="20230421 17:35:58.289" endtime="20230421 17:35:58.653"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>email=${used_email}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:58.653" level="INFO">${body} = {'email': 'kevinmoreno@example.com'}</msg>
<status status="PASS" starttime="20230421 17:35:58.653" endtime="20230421 17:35:58.653"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${error_message}</var>
<arg>put</arg>
<arg>${endpoint}</arg>
<arg>body=${body}</arg>
<arg>id=${id_user}</arg>
<arg>exp_status=400</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:58.654" level="INFO">Method: PUT</msg>
<msg timestamp="20230421 17:35:58.654" level="INFO">URL: http://localhost/wp-json/wp/v2/users/110</msg>
<msg timestamp="20230421 17:35:58.706" level="INFO">Actual response is 400, expect: 400</msg>
<msg timestamp="20230421 17:35:58.706" level="INFO">${error_message} = {'code': 'rest_user_invalid_email', 'message': 'Invalid email address.', 'data': {'status': 400}}</msg>
<status status="PASS" starttime="20230421 17:35:58.653" endtime="20230421 17:35:58.706"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:58.707" level="INFO">${error_message} = {'code': 'rest_user_invalid_email', 'message': 'Invalid email address.', 'data': {'status': 400}}</msg>
<status status="PASS" starttime="20230421 17:35:58.707" endtime="20230421 17:35:58.707"/>
</kw>
<kw name="Delete User By ID" library="delete_users">
<arg>${used_id}</arg>
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:58.709" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:58.709" endtime="20230421 17:35:58.709"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:58.710" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:58.710" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:58.761" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:58.762" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:58.709" endtime="20230421 17:35:58.762"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:58.763" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:58.763" endtime="20230421 17:35:58.763"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:58.764" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:58.764" endtime="20230421 17:35:58.764"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:58.765" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:58.764" endtime="20230421 17:35:58.765"/>
</kw>
<status status="PASS" starttime="20230421 17:35:58.708" endtime="20230421 17:35:58.765"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:58.765" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:58.765" endtime="20230421 17:35:58.765"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:58.766" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:58.766" level="INFO">URL: http://localhost/wp-json/wp/v2/users/111</msg>
<msg timestamp="20230421 17:35:58.868" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:58.868" level="INFO">${response} = {'deleted': True, 'previous': {'id': 111, 'username': 'Raul Daniels', 'name': 'Raul Daniels', 'first_name': '', 'last_name': '', 'email': 'kevinmoreno@example.com', 'url': '', 'description': '', 'link...</msg>
<status status="PASS" starttime="20230421 17:35:58.766" endtime="20230421 17:35:58.869"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:58.871" level="INFO">${response} = {'deleted': True, 'previous': {'id': 111, 'username': 'Raul Daniels', 'name': 'Raul Daniels', 'first_name': '', 'last_name': '', 'email': 'kevinmoreno@example.com', 'url': '', 'description': '', 'link...</msg>
<status status="PASS" starttime="20230421 17:35:58.870" endtime="20230421 17:35:58.871"/>
</kw>
<status status="PASS" starttime="20230421 17:35:58.708" endtime="20230421 17:35:58.871"/>
</kw>
<status status="PASS" starttime="20230421 17:35:58.288" endtime="20230421 17:35:58.871"/>
</kw>
<kw name="Verify Response Message">
<arg>${invalid_email}</arg>
<kw name="Verify Actual Equal Expected" library="wordpress.src.verifications.users.users_verifications.UsersVerification">
<arg>${error_message}</arg>
<arg>${expected_result}</arg>
<doc>Verify that expected and actual results are equal</doc>
<msg timestamp="20230421 17:35:58.874" level="INFO">Actual result: {'code': 'rest_user_invalid_email', 'message': 'Invalid email address.', 'data': {'status': 400}}</msg>
<msg timestamp="20230421 17:35:58.874" level="INFO">Expected result: {'code': 'rest_user_invalid_email', 'message': 'Invalid email address.', 'data': {'status': 400}}</msg>
<status status="PASS" starttime="20230421 17:35:58.873" endtime="20230421 17:35:58.874"/>
</kw>
<status status="PASS" starttime="20230421 17:35:58.872" endtime="20230421 17:35:58.874"/>
</kw>
<kw name="Delete New User Created" library="delete_users" type="TEARDOWN">
<kw name="Get User For Reassign" library="get_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>orderby=id</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:58.877" level="INFO">${params} = {'orderby': 'id'}</msg>
<status status="PASS" starttime="20230421 17:35:58.876" endtime="20230421 17:35:58.877"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>get</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:58.878" level="INFO">Method: GET</msg>
<msg timestamp="20230421 17:35:58.878" level="INFO">URL: http://localhost/wp-json/wp/v2/users/</msg>
<msg timestamp="20230421 17:35:58.943" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:58.944" level="INFO">${response} = [{'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843a...</msg>
<status status="PASS" starttime="20230421 17:35:58.877" endtime="20230421 17:35:58.944"/>
</kw>
<kw name="Get List Element" library="wordpress.src.common_imports.CommonLibraries">
<var>${first_user}</var>
<arg>0</arg>
<arg>${response}</arg>
<doc>Gets an element from a list</doc>
<msg timestamp="20230421 17:35:58.945" level="INFO">${first_user} = {'id': 1, 'name': 'marie212', 'url': 'http://localhost', 'description': '', 'link': 'http://localhost/author/marie212/', 'slug': 'marie212', 'avatar_urls': {'24': 'http://0.gravatar.com/avatar/0a843ad...</msg>
<status status="PASS" starttime="20230421 17:35:58.944" endtime="20230421 17:35:58.945"/>
</kw>
<kw name="Get Dictionary Value" library="wordpress.src.common_imports.CommonLibraries">
<var>${id_reassign}</var>
<arg>id</arg>
<arg>${first_user}</arg>
<doc>Gets a value from a dictionary</doc>
<msg timestamp="20230421 17:35:58.945" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:58.945" endtime="20230421 17:35:58.945"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${id_reassign}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 17:35:58.946" level="INFO">${id_reassign} = 1</msg>
<status status="PASS" starttime="20230421 17:35:58.945" endtime="20230421 17:35:58.946"/>
</kw>
<status status="PASS" starttime="20230421 17:35:58.875" endtime="20230421 17:35:58.946"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>reassign=${id_reassign}</arg>
<arg>force=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 17:35:58.947" level="INFO">${params} = {'reassign': 1, 'force': 'true'}</msg>
<status status="PASS" starttime="20230421 17:35:58.946" endtime="20230421 17:35:58.947"/>
</kw>
<kw name="Get Request Response" library="wordpress.src.common_imports.CommonLibraries">
<var>${response}</var>
<arg>delete</arg>
<arg>${endpoint}</arg>
<arg>params=${params}</arg>
<arg>id=${id_user}</arg>
<doc>Calls to all the methods necessaries for get response to a request in json format</doc>
<msg timestamp="20230421 17:35:58.947" level="INFO">Method: DELETE</msg>
<msg timestamp="20230421 17:35:58.948" level="INFO">URL: http://localhost/wp-json/wp/v2/users/110</msg>
<msg timestamp="20230421 17:35:59.048" level="INFO">Actual response is 200, expect: 200</msg>
<msg timestamp="20230421 17:35:59.049" level="INFO">${response} = {'deleted': True, 'previous': {'id': 110, 'username': 'Melvin Watson', 'name': 'Melvin Watson', 'first_name': '', 'last_name': '', 'email': 'brendacarter@example.org', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:58.947" endtime="20230421 17:35:59.049"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 17:35:59.050" level="INFO">${response} = {'deleted': True, 'previous': {'id': 110, 'username': 'Melvin Watson', 'name': 'Melvin Watson', 'first_name': '', 'last_name': '', 'email': 'brendacarter@example.org', 'url': '', 'description': '', 'l...</msg>
<status status="PASS" starttime="20230421 17:35:59.049" endtime="20230421 17:35:59.050"/>
</kw>
<status status="PASS" starttime="20230421 17:35:58.875" endtime="20230421 17:35:59.050"/>
</kw>
<status status="PASS" starttime="20230421 17:35:57.868" endtime="20230421 17:35:59.051"/>
</test>
<doc>Tests to verify scenarios that creates more than one user
whit data repeted.</doc>
<status status="PASS" starttime="20230421 17:35:56.415" endtime="20230421 17:35:59.053"/>
</suite>
<status status="PASS" starttime="20230421 17:35:55.389" endtime="20230421 17:35:59.057"/>
</suite>
<status status="PASS" starttime="20230421 17:35:41.553" endtime="20230421 17:35:59.061"/>
</suite>
<status status="PASS" starttime="20230421 17:35:31.464" endtime="20230421 17:35:59.069"/>
</suite>
<statistics>
<total>
<stat pass="41" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="41" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="19" fail="0" skip="0" id="s1-s1" name="Crud">Tests.Crud</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Categories">Tests.Crud.Categories</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Crud Categories">Tests.Crud.Categories.Test Crud Categories</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Comments">Tests.Crud.Comments</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2-s1" name="Crud Comment">Tests.Crud.Comments.Crud Comment</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s3" name="Pages">Tests.Crud.Pages</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s3-s1" name="Pages Crud">Tests.Crud.Pages.Pages Crud</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Posts">Tests.Crud.Posts</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4-s1" name="Crud Post Endpoint">Tests.Crud.Posts.Crud Post Endpoint</stat>
<stat pass="11" fail="0" skip="0" id="s1-s1-s5" name="Users">Tests.Crud.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s5-s1" name="Create Users With Differents Roles">Tests.Crud.Users.Create Users With Differents Roles</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5-s2" name="Delete User">Tests.Crud.Users.Delete User</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s5-s3" name="Invalid Request">Tests.Crud.Users.Invalid Request</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5-s4" name="Modify User">Tests.Crud.Users.Modify User</stat>
<stat pass="22" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Comments">Tests.E2E.Comments</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1-s1" name="Filters">Tests.E2E.Comments.Filters</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="Pages">Tests.E2E.Pages</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2-s1" name="Change Draft To Publish">Tests.E2E.Pages.Change Draft To Publish</stat>
<stat pass="12" fail="0" skip="0" id="s1-s2-s3" name="Posts">Tests.E2E.Posts</stat>
<stat pass="12" fail="0" skip="0" id="s1-s2-s3-s1" name="E2E Post Endpoint">Tests.E2E.Posts.E2E Post Endpoint</stat>
<stat pass="5" fail="0" skip="0" id="s1-s2-s4" name="Users">Tests.E2E.Users</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4-s1" name="Create Users">Tests.E2E.Users.Create Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s4-s2" name="Modify Users Data">Tests.E2E.Users.Modify Users Data</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
